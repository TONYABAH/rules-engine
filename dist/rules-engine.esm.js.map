{"version":3,"file":"rules-engine.esm.js","sources":["../src/core/Constants.js","../src/translation/ErrorKeys.js","../src/core/InputValidator.js","../src/core/TokenConstants.js","../src/core/Symbols.js","../src/core/TreeBuilder.js","../src/core/Interpreter.js","../src/core/MultipleChoice.js","../src/core/InferenceEngine.js","../src/core/Translator.js","../src/core/LanguageModules.js","../src/core/CustomErrors.js","../src/plugins/languages/fr.js","../src/plugins/languages/de.js","../src/plugins/languages/index.js","../src/core/EventPubSub.js","../src/core/Regex.js","../src/core/DefaultLexer.js","../src/core/DefaultTokenParser.js","../src/core/DefaultParser.js","../src/core/ResourceLexer.js","../src/core/ResourceParser.js","../src/core/Prompt.js","../src/core/Attribute.js","../src/core/Inference.js","../src/core/Goal.js","../src/core/Condition.js","../src/core/Expression.js","../src/core/Menu.js","../src/core/Rule.js","../src/core/KnowledgeBaseCompiler.js","../src/core/ParserFactory.js","../src/Rules.js","../src/util/eventbus.js","../src/buttons/css.js","../src/buttons/clipboard.js","../src/buttons/printbutton.js","../src/buttons/viewer.js","../src/client/ux.js","../src/client/ui.js"],"sourcesContent":["/* jshint esversion:8*/\nexport default {\n  MENU: 'MENU',\n  NUMBER: 'NUMBER',\n  TEXT: 'TEXT',\n  VALUE: 'VALUE',\n  STRING: 'STRING',\n  SUM: '+', // addition\n  MUL: 'x', // times\n  AVE: 'AVE', // average\n  MIN: 'MIN',\n  MAX: 'MAX',\n  YN: 'YN',\n  TF: 'TF',\n  ATTR: 'ATTR'\n}\n","\r\nconst ErrorKeys = {\r\n  ScriptError: \"ScriptError\", //0\r\n  // Network errors 1 - 9\r\n  NetworkError: 'NetworkError', //1\r\n  // Security Errors 10 - 19\r\n  TokenRequired: \"TokenRequired\", //10\r\n  TokenExpired: \"TokenExpired\", //11\r\n  TokenInvalid: \"TokenInvalid\", //12\r\n  APIKeyNotFound: \"APIKeyNotFound\", //13\r\n  APIKeyInvalid: \"APIKeyInvalid\", //14\r\n  CredentialsInvalid: \"CredentialsInvalid\", //15\r\n  UserNotFound: \"UserNotFound\", //16\r\n  AccessDenied: \"AccessDenied\", //17\r\n  // Validation Errors 20 - 40\r\n  InvalidSelection: \"InvalidSelection\", //20\r\n  NoSelection: \"NoSelection\", //21 \r\n  SelectionsAboveRange: \"SelectionsAboveRange\", //22\r\n  SelectionsBelowRange: \"SelectionsBelowRange\", //23\r\n  CharactersAboveRange: \"CharactersAboveRange\", //24\r\n  CharactersBelowRange: \"CharactersBelowRange\", //25\r\n  NumberAboveRange: \"NumberAboveRange\", //26\r\n  NumberBelowRange: \"NumberBelowRange\", //27\r\n  NumberRequired: \"NumberRequired\", //28\r\n  NoActiveSession: \"NoActiveSession\", //29\r\n  NoInput: \"NoInput\", //30\r\n  PromptNotFound: \"PromptNotFound\", //31\r\n  KnowledgebaseNotFound: \"KnowledgebaseNotFound\", //32 \r\n  SessionExpired: \"SessionExpired\", //33\r\n  // Syntax Errors\r\n  UnknownToken: 'UnknownToken',\r\n  NoCloseParenthesis: 'NoCloseParenthesis',\r\n  NoOpenParenthesis: 'NoOpenParenthesis',\r\n  DuplicateOperator: 'DuplicateOperator',\r\n  NoDefinition: 'NoDefinition',\r\n  NoAttributeName: 'NoAttributeName',\r\n  ExpectedEQ: 'ExpectedEQ',\r\n  ExpectNoEOF: 'ExpectNoEOF',\r\n  ExpectNoNewLine: 'ExpectNoNewLine',\r\n  ExpectedArrayname: 'ExpectedArrayname',\r\n  ExpectedOpenParenthesis: 'ExpectedOpenParenthesis',\r\n  ExpectedNumberOrAttrib: 'ExpectedNumberOrAttrib',\r\n  ExpectedComma: 'ExpectedComma',\r\n  ExpectedCloseParenthesis: 'ExpectedCloseParenthesis',\r\n  NoGoalName: 'NoGoalName',\r\n  NoPromptText: 'NoPromptText',\r\n  ExpectType: 'ExpectType',\r\n  ExpectComparator: 'ExpectComparator',\r\n  NoInputForAttrib: 'NoInputForAttrib',\r\n  \r\n}\r\nexport default ErrorKeys\r\n","/* jshint esversion:8*/\r\n// import CustomErrors from \"./CustomErrors\";\r\nimport ERROR_KEYS from \"../translation/ErrorKeys\";\r\n\r\nconst validator = (function () {\r\n    /**\r\n     * Method just returns the error code which should be handled by the consuming function.\r\n     * Normally the code should be translated to user language based on the locale.\r\n     * @param { String } key Error code\r\n     * @returns the Error code\r\n     */\r\n    function raiseValidationError(key) {\r\n        // return CustomErrors(translator, language).ValidationError(key)\r\n        return key;\r\n    }\r\n\r\n    function validateCF(input, prompt) {\r\n        const num = input;\r\n        if (isNaN(num)) {\r\n            return raiseValidationError(ERROR_KEYS.InvalidSelection);\r\n        }\r\n        if (num == 0) {\r\n            return raiseValidationError(ERROR_KEYS.InvalidSelection);\r\n        } else if (num < 1) {\r\n            return raiseValidationError(ERROR_KEYS.InvalidSelection);\r\n        } else if (num > prompt.Menu.length) {\r\n            return raiseValidationError(ERROR_KEYS.InvalidSelection);\r\n        }\r\n    }\r\n\r\n    function validateMenu(input, prompt) {\r\n        if (input.length === 0) {\r\n            return raiseValidationError(ERROR_KEYS.NoSelection);\r\n        } else if (input.length < prompt.Min) {\r\n            return raiseValidationError(ERROR_KEYS.SelectionsBelowRange);\r\n        } else if (input.length > prompt.Max) {\r\n            return raiseValidationError(ERROR_KEYS.SelectionsAboveRange);\r\n        }\r\n\r\n        input.forEach((num) => {\r\n            if (isNaN(num)) {\r\n                return raiseValidationError(ERROR_KEYS.InvalidSelection);\r\n            } else if (num == 0) {\r\n                return raiseValidationError(ERROR_KEYS.InvalidSelection);\r\n            } else if (num < 0) {\r\n                return raiseValidationError(ERROR_KEYS.InvalidSelection);\r\n            } else if (num > prompt.Menu.length) {\r\n                return raiseValidationError(ERROR_KEYS.InvalidSelection);\r\n            }\r\n        });\r\n    }\r\n\r\n    function validateText(input, prompt) {\r\n        if (input.length < prompt.Min) {\r\n            return raiseValidationError(ERROR_KEYS.CharactersBelowRange);\r\n        } else if (input.length > prompt.Max) {\r\n            return raiseValidationError(ERROR_KEYS.CharactersAboveRange);\r\n        }\r\n    }\r\n\r\n    function validateNumeric(input, prompt) {\r\n        const num = Number(input);\r\n        if (isNaN(num)) {\r\n            return raiseValidationError(ERROR_KEYS.NumberRequired);\r\n        }\r\n\r\n        if (!prompt.Max && !prompt.Min) return null;\r\n\r\n        if (num < prompt.Min) {\r\n            return raiseValidationError(ERROR_KEYS.NumberBelowRange);\r\n        } else if (num > prompt.Max) {\r\n            return raiseValidationError(ERROR_KEYS.NumberAboveRange);\r\n        }\r\n    }\r\n    return {\r\n        /** *\r\n         * Validates input to the system. This is the entry point of the validation module.\r\n         * Depending on the type of input (menu, number, text) the input is further submmitted to\r\n         * other methods to complete the validation and return the result.\r\n         * @param {Object} input The input text.\r\n         * @param {OBJECT} prompt The prompt presented to the user for response.\r\n         * @return Error code if validation fails, or nothing.\r\n         */\r\n        validate(input, prompt) {\r\n            if (!prompt.Type) {\r\n                return raiseValidationError(ERROR_KEYS.NoActiveSession);\r\n            }\r\n            if (!input || input.toString().trim().length === 0) {\r\n                return raiseValidationError(ERROR_KEYS.NoInput);\r\n            }\r\n            if (prompt.Label.toUpperCase() === \"CF\") {\r\n                return validateCF(input, prompt);\r\n            }\r\n\r\n            switch (prompt.Type.toUpperCase()) {\r\n                case \"MENU\":\r\n                case \"YN\":\r\n                case \"TF\": {\r\n                    const values = input.toString().split(\",\");\r\n                    return validateMenu(values, prompt);\r\n                }\r\n                case \"NUMBER\":\r\n                    return validateNumeric(input, prompt);\r\n                default:\r\n                    return validateText(input, prompt);\r\n            }\r\n        },\r\n    };\r\n})();\r\n\r\nexport default validator;\r\n","// These definitions are internally used to store tokens\r\n// they should not affect language of production rules\r\nexport const REM ='REM'\r\nexport const COMMENT = 'COMMENT' \r\nexport const TITLE  ='TITLE'\r\nexport const SUMMARY ='SUMMARY'\r\nexport const ATTRIBUTE ='ATTRIBUTE'\r\nexport const ARRAY  ='ARRAY'\r\nexport const ATTR   ='ATTR'\r\nexport const GOAL   ='GOAL'\r\nexport const CF     ='CF'\r\nexport const LINE   ='LINE'\r\nexport const INCLUDE = 'INCLUDE'\r\nexport const EXCLUDE = 'EXCLUDE'\r\nexport const SUM  = '+' // addition\r\nexport const MUL  = 'x' // times\r\nexport const AVE  = 'AVE' // average\r\nexport const TF   = 'TF'\r\nexport const YN   = 'YN'\r\nexport const RULE   ='RULE'\r\nexport const ELSE   ='ELSE'\r\nexport const ELSEIF ='ELSEIF'\r\nexport const THEN   ='THEN'\r\nexport const AND    ='AND'\r\nexport const OR     ='OR'\r\nexport const IF     ='IF'\r\nexport const PROMPT ='PROMPT'\r\nexport const QUESTION = 'QUESTION'\r\nexport const YES = 'YES'\r\nexport const NO = 'NO'\r\nexport const TRUE = 'TRUE'\r\nexport const FALSE = 'FALSE'\r\nexport const NUMBER = 'NUMBER'\r\nexport const DIGIT ='DIGIT'\r\nexport const TEXT ='TEXT'\r\nexport const MENU ='MENU'\r\nexport const NUM ='NUM'\r\nexport const MIN ='MIN'\r\nexport const MAX = 'MAX'\r\nexport const EX = 'EXCLUDE'\r\nexport const IN = 'INCLUDE'\r\nexport const NOT = 'NOT'\r\nexport const IS = 'IS' \r\n\r\n// symbols and special characters\r\nexport const LPAREN = 'LPAREN'\r\nexport const RPAREN = 'RPAREN'\r\nexport const LBRACKET = 'LBRACKET'\r\nexport const RBRACKET = 'RBRACKET'\r\nexport const CARRET = 'CARRET'\r\nexport const TIMES = 'TIMES'\r\nexport const DIV = 'DIV'\r\nexport const PLUS = 'PLUS'\r\nexport const MINUS = 'MINUS'\r\nexport const STRING = 'STRING'\r\nexport const MOD = 'MOD'\r\nexport const EQ = 'EQ'\r\nexport const GT = 'GT'\r\nexport const LT = 'LT'\r\nexport const COMMA = 'COMMA'\r\nexport const COLON = 'COLON';\r\n\r\nexport const SPACE = 'SPACE'\r\nexport const ERROR = 'ERROR' \r\nexport const EOF = 'EOF'\r\nexport const FUNC = 'FUNC'\r\nexport const CONST = 'CONST'\r\n\r\n// Math constants\r\nexport const E = 'Math.E'\r\nexport const LN2 = 'Math.LN2'\r\nexport const LN10 = 'Math.LN10'\r\nexport const LOG2E = 'Math.LOG2E'\r\nexport const LOG10E = 'Math.LOG10E'\r\nexport const PI = 'Math.PI'\r\nexport const SQRT1_2 = 'Math.SQR1_2'\r\nexport const SQRT2 = 'Math.SQRT2'\r\n\r\n// Maths static methods\r\nexport const abs = 'Math.abs'\r\nexport const acos = 'Math.acos'\r\nexport const acosh = 'Math.acosh'\r\nexport const asin = 'Math.asin'\r\nexport const asinh = 'Math.asinh'\r\nexport const atan = 'Math.atan'\r\nexport const atanh = 'Math.atanh'\r\nexport const atan2 = 'Math.atan2' //(x, y)\r\nexport const cbrt = 'Math.cbrt'\r\nexport const ceil = 'Math.ceil'\r\nexport const clz32 = 'Math.clz32'\r\nexport const cos = 'Math.cos'\r\nexport const cosh = 'Math.cosh'\r\nexport const exp = 'Math.exp'\r\nexport const expm1 = 'Math.expm1'\r\nexport const floor = 'Math.floor'\r\nexport const fround = 'Math.fround'\r\nexport const hypot = 'Math.hypot' //([x[, [y, ...]]])\r\nexport const imul = 'Math.imul' // (x, y)\r\nexport const log = 'Math.log'\r\nexport const ln = 'Math.ln'\r\nexport const log1p = 'Math.log1p'\r\nexport const log10 = 'Math.log10'\r\nexport const log2 = 'Math.log2'\r\nexport const max = 'Math.max' //([x[, [y, ...]]])\r\nexport const min = 'Math.min' //([x[, [y, ...]]])\r\nexport const pow = 'Math.pow' // (x, y)\r\nexport const random = 'Math.random'\r\nexport const round = 'Math.round' // (x)\r\nexport const sign = 'Math.sign' // (x)\r\nexport const sin = 'Math.sin' // (x)\r\nexport const sinh = 'Math.sinh' // (x)\r\nexport const sqrt = 'Math.sqrt' // (x)\r\nexport const tan = 'Math.tan'\r\nexport const tanh = 'Math.tanh'\r\nexport const trunc = 'Math.trunc' //(x)\r\n","/* jshint esversion:8*/\n\n/*\n#############################################################################                                                                            #\n#  SYMBOLS and SYMBOL TABLE                                                 #                                                                            #\n#############################################################################\n*/\n\nexport class Symbol {\n  constructor ( name, type = 'None' ) {\n    this.name = name\n    this.type = type\n  }\n}\n\nexport class Token {\n  constructor ( type, value, row, col ) {\n    this.type = type\n    this.value = value\n    this.row = row || 0\n    this.column = col || 0\n    this.length = value ? value.length : 0\n  }\n}\n\n/**\n * Abstract Syntax Tree (AST)\n */\nexport class AST {\n  // pass\n}\n\n/*\n###############################################################################                                                                            #\n    #  AST visitors (walkers)                                                 #                                                                            #\n###############################################################################\n*/\n\nexport class NodeVisitor {\n  constructor () {\n    this.visitor = this\n  }\n  visit () { }\n}\nexport class BinOp extends AST {\n  constructor ( left, op, right ) {\n    super()\n    this.left = left\n    this.token = this.op = op\n    this.right = right\n  }\n}\nexport class Num extends AST {\n  constructor ( token ) {\n    super()\n    this.token = token\n    this.value = token.value\n  }\n}\nexport class Str extends AST {\n  constructor ( token ) {\n    super()\n    this.token = token\n    this.value = token.value\n  }\n}\nexport class Attr extends AST {\n  constructor ( token ) {\n    super()\n    this.token = token\n    this.value = token.value\n  }\n}\nexport class Const extends AST {\n  constructor ( token ) {\n    super()\n    this.token = token\n    this.value = token.value\n  }\n}\nexport class Func extends AST {\n  constructor ( op, params ) {\n    super()\n    this.token = this.op = op\n    this.params = [params]\n  }\n}\nexport class Expr extends AST {\n  constructor ( token ) {\n    super()\n    this.token = token\n    this.value = token.value\n  }\n}\nexport class Comma extends AST {\n  constructor ( token ) {\n    super()\n    this.token = token\n    this.value = token.value\n  }\n}\nexport class UnaryOp {\n  constructor ( op, expr ) {\n    this.token = this.op = op\n    this.expr = expr\n  }\n}\nexport class Assign {\n  constructor ( left, op, right ) {\n    this.left = left\n    this.token = this.op = op\n    this.right = right\n  }\n}\nexport class Equal {\n  constructor ( left, op, right ) {\n    this.left = left\n    this.token = this.op = op\n    this.right = right\n  }\n}\n\nexport class NoOp {\n  // void\n}\n\nexport class Type {\n  constructor ( token ) {\n    this.token = token\n    this.value = token.value\n  }\n}\n\n","/* jshint esversion:8*/\n\nimport {\n    BinOp,\n    Num,\n    Str,\n    Attr,\n    UnaryOp,\n    Const,\n    Comma,\n    Func, // Expr,\n} from \"./Symbols\";\nimport {\n    NUM,\n    LPAREN,\n    RPAREN,\n    TIMES,\n    DIV,\n    PLUS,\n    MINUS,\n    STRING,\n    MOD,\n    ATTR,\n    TRUE,\n    FALSE,\n    YES,\n    NO,\n    COMMA,\n    LBRACKET,\n    RBRACKET,\n    FUNC,\n    CONST,\n} from \"./TokenConstants\";\n/**\n * Abstarct Syntax tree AST builder, recursively passes tokens into an abstarct syntax tree\n */\n\nexport default class Builder {\n    constructor() {\n        this.tokens = [];\n        this.pos = 0;\n        // set current token to the first token taken from the input\n        this.current_token = null;\n    }\n    matchCloseParenthesis(tokens, startIndex) {\n        let $return = -1;\n        let left = 0;\n        let right = 0;\n        for (let i = startIndex; i < tokens.length; i++) {\n            const s = tokens[i].value;\n            if (s === \"(\") {\n                left++;\n            } else if (s === \")\") {\n                right++;\n            }\n            if (left > 0 && left === right) {\n                $return = i;\n                break;\n            }\n        }\n        return $return;\n    }\n    matchOpenParenthesis(tokens, startIndex) {\n        let $return = -1;\n        let left = 0;\n        let right = 0;\n        for (let i = startIndex; i >= 0; i--) {\n            const s = tokens[i].value;\n            if (s === \"(\") {\n                left++;\n            } else if (s === \")\") {\n                right++;\n            }\n            if (left > 0 && left === right) {\n                $return = i;\n                break;\n            }\n        }\n        return $return;\n    }\n\n    matchParenthesis(tokens) {\n        if (!tokens) return;\n        this.matchBrackets(tokens);\n        const open = \"(\";\n        const close = \")\";\n        const opens = [];\n        const closes = [];\n        for (let i = 0; i < tokens.length; i++) {\n            const c = tokens[i].value;\n            if (c === open) {\n                opens.push([i, c]);\n            } else if (c === close) {\n                closes.push([i, c]);\n            }\n        }\n\n        for (let i = opens.length - 1; i >= 0; i--) {\n            const match = this.matchCloseParenthesis(tokens, opens[i][0]);\n            if (match === -1) {\n                const msg =\n                    \"Open parenthesis '{0}' at column {1} has no close parenthesis\";\n                this.error(msg /* , open, opens[i][0]*/);\n                break;\n            }\n        }\n        for (let i = 0; i < closes.length; i++) {\n            // let c = closes[i][1];\n            const index = closes[i][0];\n            const match = this.matchOpenParenthesis(tokens, index);\n            if (match === -1) {\n                const msg =\n                    \"Close parenthesis '{0}' at column {1} has no opening parenthesis\";\n                this.error(msg /* , close, closes[i][0]*/);\n                break;\n            }\n        }\n    }\n    error() {\n        return new Error(\"Invalid syntax\");\n    }\n    getNextToken() {\n        this.pos++;\n        while (this.tokens[this.pos]) {\n            this.current_token = this.tokens[this.pos];\n            return this.current_token;\n        }\n        return { type: \"EOF\", value: null };\n    }\n    eat(token_type) {\n        /*\n      # compare the current token type with the passed token\n      # type and if they match then \"eat\" the current token\n      # and assign the next token to the this.current_token,\n      # otherwise raise an exception.\n    */\n        if (this.current_token.type === token_type) {\n            this.current_token = this.getNextToken();\n        } else {\n            this.error();\n        }\n    }\n\n    factor() {\n        // factor { NUM | LPAREN expr RPAREN//\n        const token = this.current_token;\n\n        if (token.type === PLUS) {\n            this.eat(PLUS);\n            const node = new UnaryOp(token, this.factor());\n            return node;\n        } else if (token.type === MINUS) {\n            this.eat(MINUS);\n            const node = new UnaryOp(token, this.factor());\n            return node;\n        } else if (token.type === CONST) {\n            this.eat(CONST);\n            return new Const(token);\n        } else if (token.type === FUNC) {\n            this.eat(FUNC);\n            const node = this.parseFunc(token);\n            return node;\n        } else if (token.type === NUM) {\n            this.eat(NUM);\n            return new Num(token);\n        } else if (token.type === ATTR) {\n            this.eat(ATTR);\n            if (typeof token.value === \"object\") {\n                return this.parseExpr(token);\n            }\n            return new Attr(token);\n        } else if (token.type === STRING) {\n            this.eat(STRING);\n            return new Str(token);\n        } else if (token.type === TRUE) {\n            this.eat(TRUE);\n            return new Attr(token);\n        } else if (token.type === FALSE) {\n            this.eat(FALSE);\n            return new Attr(token);\n        } else if (token.type === YES) {\n            this.eat(YES);\n            return new Attr(token);\n        } else if (token.type === NO) {\n            this.eat(NO);\n            return new Attr(token);\n        } else if (token.type === COMMA) {\n            this.eat(COMMA);\n            return new Comma(token);\n        } else if (token.type === LPAREN) {\n            this.eat(LPAREN);\n            const node = this.expr();\n            this.eat(RPAREN);\n            return node;\n        } else if (token.type === LBRACKET) {\n            this.eat(LBRACKET);\n            const node = this.expr();\n            this.eat(RBRACKET);\n            return node;\n        }\n        return null;\n    }\n    parseExpr(token) {\n        let attr = [];\n        let isAttrib = false;\n        token.value.forEach((v) => {\n            if (v.type === \"ATTR\") {\n                isAttrib = true;\n            }\n            attr.push(v.value);\n        });\n        if (isAttrib) {\n            token.value = attr.join(\" \");\n            let node = new Attr(token);\n            return node;\n        }\n        const node = new UnaryOp(token, this.build(token.value));\n        return node;\n    }\n    parseFunc(token) {\n        let endIndex = this.matchCloseParenthesis(this.tokens, this.pos - 1);\n        this.eat(LPAREN);\n        const node = new Func(token, this.expr());\n        while (this.pos < endIndex) {\n            const token = this.current_token;\n            if (token.type !== COMMA) {\n                let expr = this.expr();\n                if (expr) node.params.push(expr);\n            }\n            this.getNextToken();\n        }\n        this.eat(RPAREN);\n        return node;\n    }\n    term() {\n        // term { factor ((TIMES | DIV) factor)*//\n        let node = this.factor();\n        while (\n            this.current_token.type === TIMES ||\n            this.current_token.type === DIV ||\n            this.current_token.type === MOD\n        ) {\n            const token = this.current_token;\n            if (token.type === TIMES) {\n                this.eat(TIMES);\n            } else if (token.type === DIV) {\n                this.eat(DIV);\n            } else if (token.type === MOD) {\n                this.eat(MOD);\n            }\n            node = new BinOp(node, token, this.factor());\n        }\n        return node;\n    }\n\n    expr() {\n        /*\n    expr   { term ((PLUS | MINUS) term)*\n    term   { factor ((TIMES | DIV) factor)*\n    factor { NUM | LPAREN expr RPAREN */\n        let node = this.term();\n\n        while (\n            this.current_token.type === PLUS ||\n            this.current_token.type === MINUS\n        ) {\n            const token = this.current_token;\n            if (token.type == PLUS) {\n                this.eat(PLUS);\n            } else if (token.type == MINUS) {\n                this.eat(MINUS);\n            }\n            node = new BinOp(node, token, this.term());\n        }\n        return node;\n    }\n\n    build(tokens) {\n        this.tokens = tokens;\n        this.pos = 0;\n        // set current token to the first token taken from the input\n        this.current_token = this.tokens[this.pos];\n        // set current token to the first token taken from the input\n        const ast = this.expr();\n        // console.log( ast )\n        return ast;\n    }\n}\n","import {\n  BinOp, UnaryOp, Func, Const, //Expr, Comma, Num, Str, Attr,\n} from './Symbols'\nimport {\n  TIMES, DIV, PLUS, MINUS, MOD,\n} from './TokenConstants'\n\n/**\n * Language grammer interpreter, recursively passes abstract syntax tree into algebraic output\n */\n\nexport default class Interpreter /* extends NodeVisitor*/ {\n  constructor () {\n    // super();\n    // this.visitors = {visit_BinOp:this.visit_BinOp, visit_Num: this.visit_Num};\n  }\n  visit ( node ) {\n    if ( node instanceof BinOp ) {\n      return this.visit_BinOp( node )\n    } else if ( node instanceof UnaryOp ) {\n      return this.visit_UnaryOp( node )\n    } else if ( node instanceof Func ) {\n      return this.visit_UnaryOp( node )\n    } else if ( node instanceof Const ) {\n      return this.visit_Const( node )\n    //} else if (node instanceof Num) {\n      // return this.visit_Num( node )\n    //} else if ( node instanceof Str ) {\n      // return this.visit_Str( node )\n    //} else if ( node instanceof Comma ) {\n      // return this.visit_Attr( node )\n    // } else if ( node instanceof Attr ) {\n      // return this.visit_Attr( node )\n    } else if ( node ) {\n      return this.visit_Attr( node )\n    } \n    return null\n  }\n\n  visit_BinOp ( node ) {\n    if ( node.op.type == PLUS ) {\n      return Number( this.visit( node.left ) ) + Number( this.visit( node.right ) )\n    } else if ( node.op.type == MINUS ) {\n      return this.visit( node.left ) - this.visit( node.right )\n    } else if ( node.op.type == TIMES ) {\n      return this.visit( node.left ) * this.visit( node.right )\n    } else if ( node.op.type == DIV ) {\n      return this.visit( node.left ) / this.visit( node.right )\n    } else if ( node.op.type == MOD ) {\n      return this.visit( node.left ) % this.visit( node.right )\n    }\n    return node.value\n  }\n\n  visit_UnaryOp ( node ) {\n    const op = node.op.type\n    if ( op == PLUS ) {\n      return +( this.visit( node.expr ) )\n    } else if ( op == MINUS ) {\n      return -( this.visit( node.expr ) )\n    } else if ( op == 'ATTR' ) {\n      return this.visit( node.expr ) \n    } else if ( op === 'FUNC' ) {\n      let params = []\n      node.params.map( p => {\n        if ( p ) {\n          params.push( this.visit( p ) )\n        }\n      } )\n      if ( params ) {\n        return Math[node.op.value]( ...params )\n      }\n      return Math[node.op.value]( )\n    }\n    return null\n  }\n  visit_Num ( node ) {\n    return node.value\n  }\n  visit_Str ( node ) {\n    return node.value\n  }\n  visit_Attr ( node ) {\n    return node.value\n  }\n  visit_Const ( node ) {\n    return Math[node.value]\n  }\n  /**\n   * Recursively passes AST into algebraic output\n   * @param {AST} ast\n   */\n  interpret ( ast ) {\n    // console.log( {ast} )\n    this.ast = ast\n    const result = this.visit( this.ast )\n    return result\n  }\n}\n","// import CustomErrors from \"./CustomErrors\";\r\nimport ErrorKeys from \"../translation/ErrorKeys\";\r\n\r\nfunction raiseValidationError(code, translator, language) {\r\n    // return CustomErrors(translator, language).ValidationError(code);\r\n    return code;\r\n}\r\n/**\r\n *\r\n * @param {Array} values Values to map in the original menu\r\n * @param {Object} prompt The Current Prompt that has the menu\r\n * @param {String} language User Language (eg. en, fr, es)\r\n * @returns {String} Result of the map\r\n */\r\nexport default function multipleChoice(input, prompt) {\r\n    // translator.target = language\r\n    if (!input || input.length === 0) {\r\n        return raiseValidationError(ErrorKeys.NoInput);\r\n    }\r\n    if (!prompt) {\r\n        return raiseValidationError(ErrorKeys.NoActiveSession);\r\n    }\r\n    if (\r\n        prompt.Type === \"NUMBER\" ||\r\n        prompt.Type === \"TEXT\" ||\r\n        prompt.Type === \"VALUE\"\r\n    ) {\r\n        return input && input instanceof Array ? input[0] : input;\r\n    }\r\n    const array = input.toString().trim().split(/,/g);\r\n    const result = []; //array.map((v) => {\r\n    for (let i = 0; i < array.length; i++) {\r\n        const v = array[i];\r\n        if (!prompt.Menu[v - 1]) {\r\n            return raiseValidationError(ErrorKeys.InvalidSelection);\r\n        }\r\n        result.push(prompt.Menu[v - 1].Value);\r\n    }\r\n    return result.length > 0 ? result : null;\r\n}\r\n","/* jshint esversion:8*/\nimport Constants from \"./Constants\";\nimport inputValidator from \"./InputValidator\"; // Validation\n// import CustomErrors from \"./CustomErrors\";\nimport { MENU, MUL, AVE, SUM, MAX, MIN } from \"./TokenConstants\";\nimport Builder from \"./TreeBuilder\";\nimport Interpreter from \"./Interpreter\";\nimport choose from \"./MultipleChoice\";\nimport ERROR_KEYS from \"../translation/ErrorKeys\";\n\nfunction normalize(prompt) {\n    switch (prompt.Type) {\n        case Constants.MENU:\n            if (!prompt.Max) prompt.Max = prompt.Menu.length;\n            if (!prompt.Min) prompt.Min = 1;\n            prompt.Min = prompt.Min < 1 ? 1 : prompt.Min;\n            prompt.Max =\n                prompt.Max > prompt.Menu.length\n                    ? prompt.Menu.length\n                    : prompt.Max;\n            //delete MAX_CHARS // MAX_CHARS=null;\n            if (!prompt.Max) prompt.Max = 1;\n            break;\n        case Constants.TEXT:\n        case Constants.VALUE:\n            if (!prompt.Max) prompt.Max = MAX_CHARS;\n            if (!prompt.Min) prompt.Min = 1;\n            prompt.Min = prompt.Min < 1 ? 1 : prompt.Min;\n            prompt.Max = prompt.Max > MAX_CHARS ? MAX_CHARS : prompt.Max;\n            break;\n        case Constants.TF:\n        case Constants.YN:\n            prompt.Min = 1;\n            prompt.Max = 1;\n            //delete MAX_CHARS // MAX_CHARS=null;\n            break;\n        default:\n            if (!prompt.Max) prompt.Max = Number.MAX_VALUE;\n            if (!prompt.Min) prompt.Min = Number.MIN_VALUE;\n            prompt.Min =\n                prompt.Min < Number.MIN_VALUE ? Number.MIN_VALUE : prompt.Min;\n            prompt.Max =\n                prompt.Max > Number.MAX_VALUE ? Number.MAX_VALUE : prompt.Max;\n\n            //delete MAX_CHARS // p.MAX_CHARS=0;\n            break;\n    }\n}\n//\nexport default class Engine {\n    constructor(kb, translator) {\n        if (!kb) throw new ReferenceError(\"kb is undefined\");\n        this.paused = false;\n        this.CFSettings = null;\n        this.done = false;\n        this.knowledgebase = kb;\n\n        this.keywords = kb.languageModule.keywords; // keywords[kb.language.toLowerCase()]\n        this.CFSettings = kb.languageModule.prompts; // kb[kb.language.toLowerCase()].prompts // promptSettings[kb.language.toLowerCase()]\n        // this.validator = new Validator(translator, kb.language)\n        this.translator = translator;\n        // this.validator = validator;\n    }\n\n    raiseScriptError(e) {\n        // console.log(e)\n        /* return CustomErrors(\n            this.translator,\n            this.knowledgebase.language\n        ).ScriptError(keys.ScriptError, e);*/\n        console.log(e);\n        return ERROR_KEYS.ScriptError;\n    }\n    raisePromptNotFoundError() {\n        // const message = this.t(keys.PromptNotFound).data\n        /*return CustomErrors(\n            this.translator,\n            this.knowledgebase.language\n        ).ValidationError(keys.PromptNotFound);*/\n        return ERROR_KEYS.PromptNotFound;\n    }\n    raiseSessionExpiredError() {\n        // const message = this.t(keys.SessionExpired).data\n        /* return CustomErrors(\n            this.translator,\n            this.knowledgebase.language\n        ).ValidationError(keys.SessionExpired); */\n        return ERROR_KEYS.SessionExpired;\n    }\n    getEventData(code, message) {\n        return {\n            status: \"error\",\n            msg: message,\n            code: code,\n            text: this.lineText, // lineText,\n            line: this.lineNumber,\n            rule: this.knowledgebase.currentRule.Name,\n            ruleNumber: this.knowledgebase.ruleIndex + 1,\n        };\n    }\n\n    calculateCF(oldValue, newValue, mode) {\n        let cf = 0;\n        // let oldValue = this.getConditionCF()\n        switch (mode) {\n            case SUM: {\n                cf = (oldValue / 100) * (100 - newValue); // probability sum\n                break;\n            }\n            case MUL: {\n                cf = (oldValue * newValue) / 100; // multiply\n                break;\n            }\n            case AVE: {\n                cf = (oldValue + newValue) / 2; // algebraic average\n                break;\n            }\n            case MAX: {\n                cf = Math.max(oldValue, newValue); // maximum\n                break;\n            }\n            case MIN: {\n                cf = Math.min(oldValue, newValue); // minimum\n                break;\n            }\n            default:\n                cf = (oldValue / 100) * (100 - newValue); // probability sum\n                break;\n        }\n        return cf;\n    }\n\n    start() {\n        this.paused = false;\n        this._error = null;\n        this.done = false;\n        this.command = null;\n        if (!this.knowledgebase) return this.raiseSessionExpiredError();\n        while (this.knowledgebase.ruleIndex < this.knowledgebase.rules.length) {\n            this.knowledgebase.currentRule =\n                this.knowledgebase.rules[this.knowledgebase.ruleIndex];\n            this.knowledgebase.ruleIndex++;\n\n            if (this.knowledgebase.currentRule.Fired) {\n                continue;\n            }\n\n            this.knowledgebase.currentPrompt = null;\n            let conditionIndex = 0;\n            while (\n                conditionIndex <\n                this.knowledgebase.currentRule.Conditions.length\n            ) {\n                this.knowledgebase.currentCondition =\n                    this.knowledgebase.currentRule.Conditions[conditionIndex];\n                conditionIndex++;\n\n                const result = this.testPremises();\n\n                if (Boolean(result) === true) {\n                    const result = this.fireRule(\n                        this.knowledgebase.currentCondition.Inferences\n                    );\n                    if (result) return result;\n                } else if (this.paused) {\n                    this.knowledgebase.ruleIndex--;\n                    return this.knowledgebase.currentPrompt;\n                } else if (\n                    this.knowledgebase.currentRule.Conditions.length <=\n                    conditionIndex\n                ) {\n                    const result = this.fireRule(\n                        this.knowledgebase.currentRule.AltInferences\n                    );\n                    if (result) return result;\n                }\n                if (this.done) break;\n            }\n            if (this.done) break;\n        }\n        this.knowledgebase.ruleIndex = 0;\n        return this.knowledgebase.answers;\n    }\n\n    testPremises() {\n        const maxIndex =\n            this.knowledgebase.currentCondition.Premises.length - 1;\n        let testResult = null;\n        for (let index = 0; index <= maxIndex; index++) {\n            const Premise = this.knowledgebase.currentCondition.Premises[index];\n            if (\n                testResult === true &&\n                Premise.Keyword === this.keywords.OR.toUpperCase()\n            ) {\n                // log(lineText + ': breaking loop...');\n                continue;\n            } else if (\n                testResult === false &&\n                Premise.Keyword.toUpperCase() ===\n                    this.keywords.AND.toUpperCase()\n            ) {\n                // log(lineText + ': breaking loop...');\n                continue;\n            }\n\n            const leftNodes = this.mapNodes(Premise.Left);\n            if (this.paused) return false;\n            const rightNodes = this.mapNodes(Premise.Right);\n            if (this.paused) return false;\n            // console.log(leftNodes, rightNodes)\n            const left = this.solve(leftNodes) || \"\";\n            const right =\n                Premise.Right.length > 0 ? this.solve(rightNodes) : true;\n\n            const cfLeft = Math.min(this.evaluateCF(Premise.Left));\n            const cfRight = Math.min(this.evaluateCF(Premise.Right));\n            const cf = Math.min(cfLeft, cfRight);\n\n            if (cf < 100) {\n                const mode =\n                    Premise.Keyword === this.keywords.OR.toUpperCase()\n                        ? MUL\n                        : AVE;\n                let kbCF = this.knowledgebase.CF || 100;\n                this.knowledgebase.CF = this.calculateCF(kbCF, cf, mode);\n            }\n            testResult = this.compare(left, right, Premise.Comparator);\n        }\n        return testResult;\n    }\n    solveAttribute(value, inference) {\n        const nodes = this.mapNodes(value);\n        const attribValue = this.solve(nodes);\n        const attribute =\n            this.knowledgebase.attributes[inference.Name.toLowerCase()];\n\n        let newValue = attribute.CF;\n        this.setAttributeValueAndCF(\n            attribute.Name.toLowerCase(),\n            attribValue,\n            newValue\n        );\n        this.setAttributeValueAndCF(\n            attribute.Name.toLowerCase(),\n            attribValue,\n            this.knowledgebase.prevCf\n        );\n        attribute.Value = attribValue;\n        inference.Value = attribValue;\n        if (this.knowledgebase.goals[attribute.Name.toLowerCase()]) {\n            this.knowledgebase.answers.push({\n                Name: attribute.Name,\n                Value: attribValue,\n                CF: Math.round(this.knowledgebase.CF),\n            });\n            if (\n                this.knowledgebase.answers.length >=\n                Object.getOwnPropertyNames(this.knowledgebase.goals).length\n            ) {\n                this.fireDoneEvent();\n                this.done = true;\n                return this.knowledgebase.answers; // done;\n            }\n        }\n        return false;\n    }\n    fireRule(inferences) {\n        this.knowledgebase.currentCondition.isMet = true;\n        this.knowledgebase.firedRules[this.knowledgebase.currentRule.Name] =\n            this.knowledgebase.currentRule;\n\n        if (this.knowledgebase.currentRule.Fired) return false;\n        this.knowledgebase.currentRule.Fired = true;\n\n        if (!inferences) return false;\n        for (let i = 0; i < inferences.length; i++) {\n            const inference = inferences[i];\n            const value = inference.Value;\n            if (/^fetch\\s[a-zA-Z]+/i.test(inference.Name)) {\n                this.command = {\n                    type: \"command\",\n                    cmd: \"fetch\",\n                    url: inference.Name.split(\" \")[1],\n                };\n                return this.command;\n            }\n            const result = this.solveAttribute(value, inference);\n            if (result) return result;\n        }\n        return false;\n    }\n\n    fireDoneEvent() {\n        //this.publish('engine.done', this.knowledgebase.answers, this)\n    }\n    /**\n     * Solves any mathematical expression\n     * @param {*} expression Mathimatical expression nodes\n     */\n    solve(expression) {\n        const builder = new Builder();\n        const interpreter = new Interpreter();\n        const ast = builder.build(expression);\n        const result = interpreter.interpret(ast);\n        // Math. + PI Random() Cos Sin TAN SQRT E\n\n        return result;\n    }\n    /**\n     * Compares left and right side of mathematical expression\n     * @param {*} left Left hand side expression\n     * @param {*} right Right hand side expression\n     * @param {String} compare Comparator\n     * @return {Boolean}\n     */\n    compare(left, right, compare) {\n        switch (compare) {\n            case \"GT\":\n                return left > right;\n            case \"LT\":\n                return left < right;\n            case \"IN\":\n                return Engine.inArray(left, right);\n            case \"EX\":\n                return Engine.notInArray(left, right);\n            // NEQ\n            default:\n                return (\n                    left.toString().toLowerCase() ===\n                    right.toString().toLowerCase()\n                );\n        }\n    }\n    mapNodes(tokens) {\n        const nodes = []; //tokens.map(function (token) {\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // console.log(token);\n            let value = token.value;\n            if (token.type === \"ATTR\") {\n                const attribute =\n                    this.knowledgebase.attributes[token.value.toLowerCase()];\n                if (attribute) {\n                    if (\n                        !attribute.Value &&\n                        this.knowledgebase.prompts[token.value.toLowerCase()]\n                    ) {\n                        // Attribute attribute=this.knowledgebase.attributes.get(token.toLowerCase());\n                        // if (attribute.Value == null)\n                        // the attribute has no value assigned yet, then\n                        // prompt the user and stop processing more this.knowledgebase.rules\n                        // until input is obtained from user throuh setAttribute();\n                        this.prompt(token.value);\n                        this.paused = true;\n                        return null;\n                    } else if (attribute.Value === null) {\n                        attribute.Value = attribute.Name;\n                    }\n                    // we are replacing the token that matches the Atribute Name\n                    // with the Attribute Value for evaluation in the scripting engine\n                    value = attribute.Value;\n                    // this.knowledgebase.currentCondition.Confidences.push( attribute.CF )\n                }\n            }\n            nodes.push({ type: token.type, value: value });\n        }\n        // this.knowledgebase.currentCondition.Confidences = confidences\n        return nodes;\n    }\n    evaluateCF(tokens) {\n        // const confidences = []\n        const values = tokens.map((token) => {\n            let cf = 100;\n            if (token.type === \"ATTR\") {\n                const attribute =\n                    this.knowledgebase.attributes[token.value.toLowerCase()];\n                if (attribute) {\n                    if (attribute.CF) {\n                        cf = attribute.CF;\n                    }\n                }\n            }\n            return cf;\n        });\n        return values;\n    }\n    prompt(name) {\n        const _name = name.toLowerCase().trim();\n        const prompt = this.knowledgebase.prompts[_name];\n        // console.log({ prompt, name });\n        if (!prompt) {\n            return this.raisePromptNotFoundError();\n        }\n        this.knowledgebase.prompts[_name].Fired = true;\n        normalize(this.knowledgebase.prompts[_name]);\n        this.knowledgebase.currentPrompt = this.knowledgebase.prompts[_name];\n        this.knowledgebase.currentPrompt.Index = this.knowledgebase.promptIndex;\n        //this.publish('engine.prompt', this.knowledgebase.currentPrompt)\n        this.knowledgebase.promptIndex++;\n        // console.log(this.knowledgebase.currentPrompt);\n        return this.knowledgebase.currentPrompt;\n    }\n    cfPrompt() {\n        const CF_TEXTS = this.CFSettings.CF_TEXTS; // ['Absolutely','Very high','High','Good','Fair'];\n        const VALUES = this.CFSettings.VALUES; // [99,95,85,70,60];\n\n        this.knowledgebase.currentPrompt.Label = \"CF\";\n        this.knowledgebase.currentPrompt.Question = this.CFSettings.QUES; // ('How confident are you about your response?');\n        this.knowledgebase.currentPrompt.Type = MENU; // MENU\n        this.knowledgebase.currentPrompt.Min = 1;\n        this.knowledgebase.currentPrompt.Max = 1;\n        this.knowledgebase.currentPrompt.CFMode = false;\n        this.knowledgebase.currentPrompt.Menu = [];\n\n        for (let index = 0; index < CF_TEXTS.length; index++) {\n            const menu = {\n                Index: index + 1, // index of menu item\n                Name: CF_TEXTS[index], // menu item number\n                Value: VALUES[index], // menu item value\n                // Text: CFMenuText[index], //menu item number\n                // CFMenuText[index]  //menu item display text\n            };\n            this.knowledgebase.currentPrompt.Menu.push(menu);\n        }\n\n        normalize(this.knowledgebase.currentPrompt);\n        this.knowledgebase.currentPrompt.Index = this.knowledgebase.promptIndex;\n        this.knowledgebase.currentPrompt.Fired = true;\n        this.knowledgebase.promptIndex++;\n        return this.knowledgebase.currentPrompt;\n    }\n\n    /**\n     * Sets the Value of the attribute or prompt. Runs the Engine if and\n     * only if the current prompt does not need confidence factor input,\n     * otherwise, prompt for confidence factor input without running the Engine;\n     * @param {Object} value The value of the attribute or prompt.\n     * @return {JSON} Result\n     * @throws ampani.engine.exception.ScriptExecutionException\n     */\n    setAttribute(value) {\n        if (!this.knowledgebase.currentPrompt) {\n            return this.raiseSessionExpiredError();\n        }\n        const validateResult = inputValidator.validate(\n            value,\n            this.knowledgebase.currentPrompt\n        );\n        if (validateResult && validateResult.name === \"ValidationError\") {\n            return validateResult;\n        }\n        let computedValue = choose(\n            value,\n            this.knowledgebase.currentPrompt,\n            this.knowledgebase.language\n        );\n        if (computedValue && computedValue.name === \"ValidationError\") {\n            return computedValue;\n        }\n        if (computedValue) {\n            computedValue =\n                computedValue instanceof Array\n                    ? computedValue.join(\";\")\n                    : computedValue;\n        }\n\n        if (this.knowledgebase.currentPrompt.Label === \"CF\") {\n            this.setAttributeCF(\n                this.knowledgebase.currentPrompt.Name,\n                computedValue\n            );\n            this.knowledgebase.currentCondition.Confidences.push(computedValue);\n            return this.start();\n        }\n        this.knowledgebase.attributes[\n            this.knowledgebase.currentPrompt.Name.toLowerCase()\n        ].Value = computedValue;\n\n        if (!this.knowledgebase.currentPrompt.CFMode) {\n            this.knowledgebase.currentPrompt = null;\n            return this.start();\n        }\n        return this.cfPrompt();\n    }\n\n    /**\n     * Sets the confidence factor of the prompt/attribute if the value of CF\n     * is >= 0. Run the Engine thereafter.\n     * @param {String} name The name of the prompt/attribute to set.\n     * @param {Number} cf The value of the confidence factor.\n     */\n    setAttributeCF(name, cf) {\n        this.knowledgebase.attributes[name.toLowerCase().trim()].CF = cf;\n        // this.knowledgebase.currentCondition.Confidences.push( cf )\n        this.knowledgebase.currentPrompt = null;\n        // console.log( this.knowledgebase.currentCondition )\n    }\n    /**\n     * Sets the attribute value and recalculates the confidence factor based\n     * on the previous CF and the newly encountered CF.\n     * @param {String} name The Attribute name.\n     * @param {Number} value The attribute value.\n     * @param {Number} cf The newly encountered CF.\n     * @param {String} mode The mode to be used in calculating the CF (0-2).\n     */\n    setAttributeValueAndCF(name, value, cf) {\n        // alert( cf )\n        const a = this.knowledgebase.attributes[name.toLowerCase().trim()];\n        if (!a) return;\n        this.knowledgebase.attributes[name.toLowerCase().trim()].Value = value;\n        if (cf > -1 && cf < 100) {\n            this.setAttributeCF(name, cf);\n            // this.knowledgebase.attributes[name.toLowerCase().trim()].CF = cf;\n        } else {\n            this.knowledgebase.currentPrompt = null;\n        }\n    }\n    /**\n     * Test if an Object (value) is in Array (array)\n     * @param {Array} array The array containing elemets\n     * @param {Object} value The value to check if it exists in array\n     * @return true if array contains value else returns false\n     */\n    static inArray(array, value) {\n        return array.includes(value.toLowerCase().trim());\n    }\n    /**\n     * Test if an Object (value) is NOT in Array (array)\n     * @param {Array} array The array containing elemets\n     * @param {Object} value The value to check if it does not exist in array\n     * @return false if array contains value else returns true\n     */\n    static notInArray(array, value) {\n        return !array.includes(value.toLowerCase().trim());\n    }\n\n    getConditionCF() {\n        let b = 100;\n        this.knowledgebase.currentCondition.Confidences.forEach(function (d) {\n            b = b * (d / 100);\n        });\n        return b;\n    }\n\n    run() {\n        try {\n            let data = this.start();\n            return data;\n        } catch (e) {\n            return this.raiseScriptError(e);\n        }\n    }\n\n    input(input) {\n        try {\n            // if (kb) this.setKnowledgebase(kb)\n            let data = this.setAttribute(input);\n            // console.log(data)\n            return data;\n        } catch (e) {\n            return this.raiseScriptError(e);\n        }\n    }\n\n    /**\n     * Gets the Knowledgebase of the Engine\n     * @return {JSON} Knowledgebase\n     */\n    getKnowledgebase() {\n        return this.knowledgebase;\n    }\n\n    /**\n     * Sets the knowledgebase for Inference Engine\n     * @param {JSON} kb Knowledgebase data\n     */\n    setKnowledgebase(kb) {\n        this.knowledgebase = kb;\n        // this.knowledgebase.promptIndex = 1\n        this.CFSettings = kb.keywords.prompts; // promptSettings[this.knowledgebase.language.toLowerCase()]\n        this.keywords = kb.keywords.keywords; // keywords[kb.language.toLowerCase()]\n        // this.validator = new Validator(kb.language)\n    }\n}\n","// import en from './locales/en'\r\n// import fr from './locales/fr'\r\n// import keywords from '../core/keywords'\r\n\r\nexport default class Translator {\r\n  constructor (locale, languageModule) {\r\n    this.languageModule = languageModule\r\n    this.keywords = languageModule[locale]\r\n  }\r\n  get (key) {\r\n    const data = this.keywords.errors\r\n    if (data) {\r\n      return data[key]\r\n    }\r\n    return null\r\n  }\r\n  /**\r\n   * Formats template strings substituting placeholders with the arguments\r\n   * @param  {...any} args String arguments\r\n   * @returns String\r\n   */\r\n  format (text, ...args) {\r\n    let msg = Object.assign({}, text)\r\n    let index = 0\r\n    args.forEach((arg) => {\r\n      msg = msg.replace(`{${index}}`, arg)\r\n      index++\r\n    })\r\n    return msg\r\n  }\r\n  /**\r\n   * Translates code into appropriate target language\r\n   * @param {*} code String that is unique to text being translated\r\n   * @returns the Translater object\r\n   */\r\n  translate (code) {\r\n    const data = this.get(code)\r\n    return data\r\n  }\r\n  /**\r\n   * Translates plain test into target language\r\n   * @param {*} text Text to be translated\r\n   * @returns the Translater object\r\n   */\r\n  translatePlain (text, from = 'en') {\r\n    if (!this.languageModule[from] || !this.languageModule[from].errors) {\r\n      console.log(this.format('Language \\'{0}\\' not implemented', from))\r\n      return text\r\n    }\r\n    let source = this.languageModule[from].errors\r\n    const index = Object.values(source).find((v) => {\r\n      return v === text\r\n    })\r\n    const code = Object.keys(source)[index]\r\n    return this.translate(code)\r\n  }\r\n  /**\r\n   * \r\n   * @param {String} code Error code to translate\r\n   * @returns Translator object\r\n   */\r\n  to (code) {\r\n    return this.translate(code)\r\n  }\r\n  toPlain (text, from) {\r\n    return this.translatePlain(text, from)\r\n  }\r\n}\r\n","export const en = {\r\n  keywords: {\r\n    LANGUAGE: 'language',\r\n    TITLE: 'title',\r\n    SUMMARY: 'summary',\r\n    ATTRIBUTE: 'attribute',\r\n    ARRAY: 'array',\r\n    OBJECT: 'object',\r\n    GOAL: 'goal',\r\n    REM: 'rem',\r\n    COMMENT: 'comment',\r\n    RULE: 'rule',\r\n    IF: 'if',\r\n    AND: 'and',\r\n    OR: 'or',\r\n    THEN: 'then',\r\n    ELSEIF: 'else if',\r\n    ELSE: 'else',\r\n    PROMPT: 'prompt',\r\n    QUESTION: 'question',\r\n    MENU: 'menu',\r\n    DIGIT: 'DIGIT',\r\n    TEXT: 'text',\r\n    CF: '%',\r\n    LOAD: 'load',\r\n    // IS: 'is',\r\n    // IN: 'in',\r\n    INCLUDE: 'include',\r\n    EXCLUDE: 'exclude',\r\n    TRUE: 'true',\r\n    FALSE: 'false',\r\n    MIN: 'min',\r\n    MAX: 'max',\r\n    YES: 'yes',\r\n    NO: 'no',\r\n    // FOLD_SETTING:\t\t\tfold.en,\r\n    // PROMPT_SETTING:\t\tprompt.en\r\n  },\r\n  prompts: {\r\n    CODE: 'en',\r\n    NAME: 'English',\r\n    QUES: 'How sure about your answer?',\r\n    CF_TEXTS: ['Absolutely sure', 'Very sure', 'Sure', 'Not so sure', 'Not sure'],\r\n    VALUES: [99, 95, 80, 75, 60],\r\n    ALPHA: ['A', 'B', 'C', 'D', 'E'],\r\n  },\r\n  errors: {\r\n    ScriptError: \"Scripting Engine Error has occured\", //0\r\n    // Network errors\r\n    NetworkError: \"The response was not ok\", //1\r\n    // Security Errors 10 - 19\r\n    TokenRequired: \"Auth token not found\", //10\r\n    TokenExpired: \"Auth token has expired\", //11\r\n    TokenInvalid: \"Auth token is invalid\", //12\r\n    APIKeyNotFound: \"API key not found\", //13\r\n    APIKeyInvalid: \"API key invalid\", //14\r\n    CredentialsInvalid: \"Supplied credentials invalid\", //15\r\n    UserNotFound: \"User not in database\", //16\r\n    AccessDenied: \"Access denied\", //17\r\n    // Validation Errors 20 - 39\r\n    InvalidSelection: \"Selected menu item does not exist\", //20\r\n    NoSelection: \"No selection was made\", //21\r\n    SelectionsAboveRange: \"Selections above range\", //22\r\n    SelectionsBelowRange: \"Selections below range\", //23\r\n    CharactersAboveRange: \"Characters above range\", //24\r\n    CharactersBelowRange: \"Characters below range\", //25\r\n    NumberAboveRange: \"Number input is above range\", //26\r\n    NumberBelowRange: \"Number input is below range\", //27\r\n    NumberRequired: \"Number input is required\", //28\r\n    NoActiveSession: \"No active session\", //29\r\n    NoInput: \"No input received\", // 30\r\n    PromptNotFound: \"No such prompt\", //31\r\n    KnowledgebaseNotFound: \"Knowledge base was not found\", //32 \r\n    SessionExpired: \"Session has expired\", //33\r\n    ValidationError: \"Validation error\", //39\r\n    // Database Errors 40 - 49\r\n    // Syntax Errors\r\n    UnknownToken: 'Unknown character or token: {0}',\r\n    NoCloseParenthesis: 'Open Parenthesis \\'{0}\\' at column {1} has no close Parenthesis',\r\n    NoOpenParenthesis: 'Close Parenthesis \\'{0}\\' at column {1} has no opening Parenthesis',\r\n    DuplicateOperator: 'Duplicate operator \\'{0}\\' \\'{1}\\'',\r\n    NoDefinition: '{0} definition should have texts',\r\n    NoAttributeName: 'Attribute definition should have Attribute Name',\r\n    ExpectedEQ: 'Expected \\'=\\'',\r\n    ExpectNoEOF: 'Expected expression but found end of file',\r\n    ExpectNoNewLine: 'Expected expression but found new line',\r\n    ExpectedArrayname: 'Expected array name',\r\n    ExpectedOpenParenthesis: 'Expected \\'(\\'',\r\n    ExpectedNumberOrAttrib: 'Expected number or Attribute',\r\n    ExpectedComma: 'Expected \\',\\'',\r\n    ExpectedCloseParenthesis: 'Expected ) but found new line',\r\n    NoGoalName: 'Goal definition should have texts',\r\n    NoPromptText: 'Prompt definition should have texts',\r\n    ExpectType: 'Expected \\'{0}\\' but found \\'{1}\\'',\r\n    ExpectComparator: 'Expected comparator but found \\'{0}\\' \\'{1}\\'',\r\n    NoInputForAttrib: 'No input prompt for attribute \\'{0}\\'',\r\n  }  \r\n}\r\nexport default {\r\n  en,\r\n}\r\n\r\n","// import Translator from './translator'\r\n// const translator = new Translator()\r\nexport default function CustomErrors (translator, lang = 'en') {\r\n\r\n  return {\r\n    CustomError: function (code) {\r\n      const name = \"Error\"\r\n      const message = translator.to(code, lang)\r\n      return {\r\n        message,\r\n        code,\r\n        name\r\n      }\r\n    },\r\n    ValidationError: function (code) {\r\n      let err = this.CustomError(code)\r\n      err.name = 'ValidationError'\r\n      return err\r\n    },\r\n    SecurityError: function (code) {\r\n      const err = this.CustomError(code)\r\n      err.name = 'SecurityError'\r\n      return err\r\n    },\r\n\r\n    DatabaseError: function (code) {\r\n      const err = this.CustomError(code)\r\n      err.name = 'DatabaseError'\r\n      return err\r\n    },\r\n\r\n    NetworkError: function (code) {\r\n      const err = this.CustomError(code)\r\n      err.name = 'NetworkError'\r\n      return err\r\n    },\r\n\r\n    SyntaxError: function (code) {\r\n      const err = this.CustomError(code)\r\n      err.name = 'SyntaxError'\r\n      return err\r\n    },\r\n\r\n    ScriptError: function (code, e) {\r\n      const err = this.CustomError(code)\r\n      err.name = 'ScriptError'\r\n      err.data = e\r\n      return err\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  keywords: {\r\n    LANGUAGE: 'langue',\r\n    TITLE: 'titre',\r\n    SUMMARY: 'résumé',\r\n    ATTRIBUTE: 'attribut',\r\n    ARRAY: 'tableau',\r\n    OOBJECT: 'objet',\r\n    GOAL: 'objetif',\r\n    REM: 'rem',\r\n    COMMENT: 'commentaire',\r\n    RULE: 'règle',\r\n    IF: 'si',\r\n    AND: 'et',\r\n    OR: 'ou',\r\n    THEN: 'puis',\r\n    ELSEIF: 'elseif',\r\n    ELSE: 'autre',\r\n    PROMPT: 'contribution',\r\n    QUESTION: 'question',\r\n    MENU: 'menu',\r\n    DIGIT: 'Numéro',\r\n    TEXT: 'texte',\r\n    CF: '%',\r\n    LOAD: 'charge',\r\n    IS: 'est',\r\n    IN: 'dans',\r\n    INCLUDE: 'comprendre',\r\n    EXCLUDE: 'exclure',\r\n    TRUE: 'vrai',\r\n    FALSE: 'faux',\r\n    MIN: 'min',\r\n    MAX: 'max',\r\n    YES: 'oui',\r\n    NO: 'pas',\r\n    // FOLD_SETTING:\t\t\tfold.fr,\r\n    // PROMPT_SETTING:\t\tprompt.fr\r\n  },\r\n  prompts: {\r\n    CODE: 'fr',\r\n    NAME: 'Français',\r\n    QUES: 'Quelle est votre réponse?',\r\n    CF_TEXTS: ['Absolument sûr', 'Très sûr', 'Bien sûr', 'Pas si sûr', 'Pas sûr'],\r\n    VALUES: [99, 95, 80, 75, 60],\r\n    ALPHA: ['A', 'B', 'C', 'D', 'E'],\r\n  },\r\n  errors: {\r\n    ScriptError : \"Une erreur du moteur de script s'est produite\", //0\r\n    // Erreurs réseau\r\n    NetworkError : \"La réponse n'était pas ok\", //1\r\n    // Erreurs de sécurité 10 - 19\r\n    TokenRequired : \"Jeton d'authentification non trouvé\", //10\r\n    TokenExpired : \"Le jeton d'authentification a expiré\", //11\r\n    TokenInvalid : \"Le jeton d'authentification n'est pas valide\", //12\r\n    APIKeyNotFound : \"Clé API non trouvée\", //13\r\n    APIKeyInvalid : \"Clé API invalide\", //14\r\n    CredentialsInvalid : \"Informations d'identification fournies invalides\", //15\r\n    UserNotFound : \"Utilisateur absent de la base de données\", //16\r\n    AccessDenied : \"Accès refusé\", //17\r\n    // Erreurs de validation 20 - 39\r\n    InvalidSelection : \"L'élément de menu sélectionné n'existe pas\", //20\r\n    NoSelection : \"Aucune sélection n'a été effectuée\", //21\r\n    SelectionsAboveRange : \"Sélections au-dessus de la plage\", //22\r\n    SelectionsBelowRange : \"Sélections en dessous de la plage\", //23\r\n    CharactersAboveRange : \"Caractères au-dessus de la plage\", //24\r\n    CharactersBelowRange : \"Caractères inférieurs à la plage\", //25\r\n    NumberAboveRange : \"Le nombre saisi est au-dessus de la plage\", //26\r\n    NumberBelowRange : \"Le nombre saisi est inférieur à la plage\", //27\r\n    NumberRequired : \"La saisie du numéro est requise\", //28\r\n    NoActiveSession : \"Aucune session active\", //29\r\n    NoInput : \"Aucune entrée reçue\", // 30\r\n    PromptNotFound: \"Aucune telle invite\", //31\r\n    KnowledgebaseNotFound : \"La base de connaissances n'a pas été trouvée\", //32\r\n    SessionExpired : \"La session a expiré\", //33\r\n    ValidationError: \"Erreur de validation\", //39\r\n    // Erreurs de base de données 40 - 49\r\n    // Erreurs de syntaxe\r\n    UnknownToken : 'Caractère ou jeton inconnu : {0}',\r\n    NoCloseParenhesis : 'Open Parenhesis \\'{0}\\' à la colonne \\'{1}\\'a pas de parenthèse fermée',\r\n    NoOpenParenhesis : 'Fermer la parenthèse \\'{0}\\' à la colonne\\' {1}\\'a pas de parenthèse ouvrante',\r\n    DuplicateOperator : 'DuplicateOperator \\'{0}\\' \\'{1}\\'',\r\n    NoDefinition : '{0} la définition doit avoir des textes',\r\n    NoAttributeName : 'La définition d\\'attribut doit avoir un nom d\\'attribut',\r\n    ExpectedEQ : 'Attendu \\'=\\'',\r\n    ExpectNoEOF : 'Expression attendue mais fin de fichier trouvée',\r\n    ExpectNoNewLine : 'Expression attendue mais nouvelle ligne trouvée',\r\n    ExpectedArrayname : 'Nom du tableau attendu',\r\n    AttenduOuvertParenthèse : 'attendu \\'(\\'',\r\n    ExpectedNumberOrAttrib : 'Numéro ou attribut attendu',\r\n    ExpectedComma : 'Attendu \\',\\'',\r\n    ExpectedCloseParenhesis : 'Attendu ) mais nouvelle ligne trouvée',\r\n    NoGoalName : 'La définition de l\\'objectif doit avoir des textes',\r\n    NoPromptText : 'La définition de l\\'invite doit avoir des textes',\r\n    ExpectType : 'Attendu \\'{0}\\' mais trouvé \\'{1}\\'',\r\n    ExpectComparator : 'Comparateur attendu mais trouvé \\'{0}\\' \\'{1}\\'',\r\n    NoInputForAttrib : 'Aucune invite de saisie pour l\\'attribut \\'{0}\\'',\r\n  }\r\n}\r\n","export default {\r\n  keywords: {\r\n    LANGUAGE: 'Sprache',\r\n    TITLE: 'Titel',\r\n    SUMMARY: 'Zusammenfassung',\r\n    ATTRIBUTE: 'Attribut',\r\n    ARRAY: 'Array',\r\n    OBJECT: 'Objekt',\r\n    GOAL: 'Zeil',\r\n    REM: 'rem',\r\n    COMMENT: 'Kommentar',\r\n    RULE: 'Regel',\r\n    IF: 'wenn',\r\n    AND: 'und',\r\n    OR: 'oder',\r\n    THEN: 'dann',\r\n    ELSEIF: 'sonst wenn',\r\n    ELSE: 'sonst',\r\n    PROMPT: 'prompt',\r\n    QUESTION: 'Frage',\r\n    MENU: 'Menü',\r\n    DIGIT: 'ZIFFER',\r\n    TEXT: 'Text',\r\n    CF: '%',\r\n    LOAD: 'laden',\r\n    // IS: 'ist',\r\n    // IN: 'ein',\r\n    INCLUDE: 'einschließen',\r\n    EXCLUDE: 'ausschließen',\r\n    TRUE: 'wahr',\r\n    FALSE: 'falsch',\r\n    MIN: 'min',\r\n    MAX: 'maximal',\r\n    YES: 'ja',\r\n    NO: 'Nein',\r\n  },\r\n  prompts: {\r\n    CODE: 'de',\r\n    NAME: 'Deutsche',\r\n    QUES: 'Wie sicher ist Ihre Antwort?',\r\n    CF_TEXTS: ['Absolut sicher', 'Sehr sicher', 'Sicher', 'Nicht so sicher', 'Nicht sicher'],\r\n    VALUES: [99, 95, 80, 75, 60],\r\n    ALPHA: ['A', 'B', 'C', 'D', 'E'],\r\n  },\r\n  errors: {\r\n    ScriptError: \"Fehler bei der Skript-Engine ist aufgetreten\", //0\r\n    \t// Netzwerkfehler\r\n    NetworkError: \"Die Antwort war nicht in Ordnung\", //1\r\n    \t// Sicherheitsfehler 10 - 19\r\n    TokenRequired: \"Authentifizierungstoken nicht gefunden\", //10\r\n    TokenExpired: \"Auth-Token ist abgelaufen\", //11\r\n    TokenInvalid: \"Auth-Token ist ungültig\", //12\r\n    APIKeyNotFound: \"API-Schlüssel nicht gefunden\", //13\r\n    APIKeyInvalid: \"API-Schlüssel ungültig\", //14\r\n    CredentialsInvalid: \"Angegebene Zugangsdaten ungültig\", //15\r\n    UserNotFound: \"Benutzer nicht in Datenbank\", //16\r\n    AccessDenied: \"Zugriff verweigert\", //17\r\n    \t// Validierungsfehler 20 - 39\r\n    InvalidSelection: \"Ausgewählter Menüpunkt existiert nicht\", //20\r\n    NoSelection: \"Es wurde keine Auswahl getroffen\", //21\r\n    SelectionsAboveRange: \"Auswahl über dem Bereich\", //22\r\n    SelectionsBelowRange: \"Auswahlen unterhalb des Bereichs\", //23\r\n    CharactersAboveRange: \"Zeichen über dem Bereich\", //24\r\n    CharactersBelowRange: \"Zeichen unterhalb des Bereichs\", //25\r\n    NumberAboveRange: \"Zahleneingabe liegt über dem Bereich\", //26\r\n    NumberBelowRange: \"Zahleneingabe liegt unterhalb des Bereichs\", //27\r\n    NumberRequired: \"Zahleneingabe erforderlich\", //28\r\n    NoActiveSession: \"Keine aktive Sitzung\", //29\r\n    NoInput: \"Keine Eingabe erhalten\", // 30\r\n    PromptNotFound: \"Keine solche Eingabeaufforderung\", //31\r\n    KnowledgebaseNotFound: \"Wissensdatenbank wurde nicht gefunden\", //32\r\n    SessionExpired: \"Sitzung ist abgelaufen\", //33\r\n    ValidationError: \"Validierungsfehler\", //39\r\n\t// Datenbankfehler 40 - 49\r\n    \t// Syntaxfehler\r\n    UnknownToken: 'Unbekanntes Zeichen oder Token: {0}',\r\n    NoCloseParenthesis: 'Open Parenthesis \\'{0}\\' in Spalte {1} hat keine schließende Klammer',\r\n    NoOpenParenthesis: 'Close Parenthesis \\'{0}\\' in Spalte {1} hat keine öffnende Klammer',\r\n    DuplicateOperator: 'Doppelter Operator \\'{0}\\' \\'{1}\\'',\r\n    NoDefinition: '{0} Definition sollte Texte haben',\r\n    NoAttributeName: 'Attributdefinition sollte Attributnamen haben',\r\n    ExpectedEQ: 'Erwartet \\'=\\'',\r\n    ExpectNoEOF: 'Ausdruck erwartet, aber Dateiende gefunden',\r\n    ExpectNoNewLine: 'Ausdruck erwartet, aber neue Zeile gefunden',\r\n    ExpectedArrayname: 'Erwarteter Array-Name',\r\n    ExpectedOpenParenthesis: 'Erwartet \\'(\\'',\r\n    ExpectedNumberOrAttrib: 'Erwartete Zahl oder Attribut',\r\n    ExpectedComma: 'Erwartet \\',\\'',\r\n    ExpectedCloseParenthesis: 'Erwartet ) aber neue Zeile gefunden',\r\n    NoGoalName: 'Zieldefinition sollte Texte haben',\r\n    NoPromptText: 'Prompt-Definition sollte Texte haben',\r\n    ExpectType: 'Erwartet \\'{0}\\', aber gefunden \\'{1}\\'',\r\n    ExpectComparator: 'Komparator erwartet, aber \\'{0}\\' \\'{1}\\' gefunden',\r\n    NoInputForAttrib: 'Keine Eingabeaufforderung für Attribut \\'{0}\\'',\r\n  }\r\n}\r\n","import fr from './fr'\r\nimport de from './de'\r\n// es, po, nl, it, ru, ch, jp, ko\r\nexport default {\r\n  fr,\r\n  de\r\n}\r\n","const channels = {};\r\n/**\r\n * Sigleton class to handle application wide events.\r\n */\r\nconst EventEmmiter = {\r\n    subscribe(topic, listener) {\r\n        // Create the topic's object if not yet created\r\n        if (!channels.hasOwnProperty.call(channels, topic))\r\n            channels[topic] = [];\r\n\r\n        // Add the listener to queue\r\n        let index = channels[topic].push(listener) - 1;\r\n        // Provide handle back for removal of topic\r\n        return {\r\n            remove: function () {\r\n                //delete topics[topic][index]\r\n                channels[topic].splice(index, 1);\r\n            },\r\n        };\r\n    },\r\n    unsubscribe(topic, listener) {\r\n        // Create the topic's object if not yet created\r\n        if (channels.hasOwnProperty.call(channels, topic)) {\r\n            // Add the listener to queue\r\n            let index = channels[topic].findIndex((l) => l === listener);\r\n            //delete topics[topic][index]\r\n            channels[topic].splice(index, 1);\r\n        }\r\n    },\r\n    publish(topic, info) {\r\n        // If the topic doesn't exist, or there's no listeners in queue, just leave\r\n        if (!channels.hasOwnProperty.call(channels, topic)) return;\r\n\r\n        // Cycle through topics queue, fire!\r\n        channels[topic].forEach((item) => {\r\n            item(info != undefined ? info : {});\r\n        });\r\n    },\r\n    remove(topic) {\r\n        // channel is an array of listeners\r\n        let channel = channels[topic];\r\n        while (channel.length > 0) {\r\n            channel.pop();\r\n        }\r\n        delete channels[topic];\r\n    },\r\n    destroy() {\r\n        Object.keys(channels).forEach((topic) => {\r\n            this.remove(topic);\r\n        });\r\n        channels = {};\r\n    },\r\n};\r\n\r\nexport default EventEmmiter;\r\n","\n/* jshint esversion:8*/\n// Numbers\nconst Zero = /0/\nconst DecInt = /[1-9][0-9]*/\nconst OctalInt = /0[0-7]+/\nconst HexInt = /0[xX][0-9a-fA-F]+/\nexport const Integer = '(?:'+Zero.source+'|'+DecInt.source+'|'+OctalInt.source+'|'+HexInt.source+ ')[lL]?'\nconst Exponent = /[eE][+-]?[0-9]/\nconst Float1 = '[0-9]+.[0-9]+('+Exponent.source+')?'\nconst Float2 = '.[0-9]+('+Exponent.source+')?'\nconst Float3 = '[0-9]+.'+Exponent.source\nconst Float4 = '[0-9]+'+Exponent.source\nexport const Float = '(?:'+Float1+'|'+Float2+'|'+Float3+'|'+Float4+')[fFdD]?|[0-9]+[fFDd]'\nexport const Numeric = Float +'|'+Integer\n// URL\nconst ident = /[a-zA-Z_-]+/\nconst protocol = /(?:(?:https|http|ftp|ftps):\\/\\/)/\nconst domain = '(?:'+ident.source + '(?:\\\\.'+ident.source+')+)|localhost(?:\\\\:[1-9][0-9]+)?'\n// var path= \"(?:\\\\/\"+ident.source+\")|\\\\/?\";\nexport const url = protocol.source+domain\n// import { formatMessage } from '../validator.js'\nexport const MATH_CONSTS = {\n  E: 'Math.E',\n  LN2: 'Math.LN2',\n  LN10: 'Math.LN10',\n  LOG2E: 'Math.LOG2E',\n  LOG10E: 'Math.LOG10E',\n  PI: 'Math.PI',\n  SQRT1_2: 'Math.SQR1_2',\n  SQRT2: 'Math.SQRT2'\n}\nexport const MATH_FUNCS = {\n  abs: 'Math.abs',\n  acos: 'Math.acos',\n  acosh: 'Math.acosh',\n  asin: 'Math.asin',\n  asinh: 'Math.asinh',\n  atan: 'Math.atan',\n  atanh: 'Math.atanh',\n  atan2: 'Math.atan2', //(x, y)\n  cbrt: 'Math.cbrt',\n  ceil: 'Math.ceil',\n  clz32: 'Math.clz32',\n  cos: 'Math.cos',\n  cosh: 'Math.cosh',\n  exp: 'Math.exp',\n  expm1: 'Math.expm1',\n  floor: 'Math.floor',\n  fround: 'Math.fround',\n  hypot: 'Math.hypot', //([x[, [y, ...]]])\n  imul: 'Math.imul', // (x, y)\n  log: 'Math.log',\n  ln: 'Math.ln',\n  log1p: 'Math.log1p',\n  log10: 'Math.log10',\n  log2: 'Math.log2',\n  max: 'Math.max', //([x[, [y, ...]]])\n  min: 'Math.min', //([x[, [y, ...]]])\n  pow: 'Math.pow', // (x, y)\n  random: 'Math.random',\n  round: 'Math.round', // (x)\n  sign: 'Math.sign', // (x)\n  sin: 'Math.sin', // (x)\n  sinh: 'Math.sinh', // (x)\n  sqrt: 'Math.sqrt', // (x)\n  tan: 'Math.tan',\n  tanh: 'Math.tanh',\n  trunc: 'Math.trunc', //(x)\n}\n","import {\r\n  /*\r\n    YES, NO, TRUE, FALSE, RULE, ELSE, ELSEIF, THEN, AND, OR, IF, CF, PROMPT, QUESTION,\r\n    MIN, MAX, ARRAY, ATTRIBUTE, TITLE, SUMMARY, GOAL, TEXT, NOT, IN, EX, IS, DIGIT, MENU,\r\n  */\r\n  ATTR, LINE, ERROR, EOF, LPAREN, RPAREN, COMMA, GT, LT, EQ, SPACE,\r\n  TIMES, MINUS, PLUS, DIV, MOD, STRING, REM, NUM, COMMENT, LBRACKET, RBRACKET, CARRET,\r\n} from './TokenConstants'\r\nimport { Numeric } from './Regex'\r\nimport { Token } from './Symbols'\r\n\r\n/**\r\n * Text tokenizer Lexer\r\n * @param {String} lang \r\n */\r\nexport default class Tokenizer {\r\n  constructor () {\r\n    // this.language = language\r\n    // this.Types = []\r\n    // this.Keywords = Keywords[language]\r\n    this.init()\r\n  }\r\n  get SpecialCharacters () {\r\n    return [\r\n      [LPAREN, '('],\r\n      [RPAREN, ')'],\r\n      [LBRACKET, '['],\r\n      [RBRACKET, ']'],\r\n      [CARRET, '^'],\r\n      [TIMES, '*'],\r\n      [MINUS, '-'],\r\n      [PLUS, '+'],\r\n      [DIV, '/'],\r\n      [MOD, '%'],\r\n      [EQ, '='],\r\n      [GT, '>'],\r\n      [LT, '<'],\r\n      [COMMA, ','],\r\n      [STRING, '\"'],\r\n      [LINE, '\\n'],\r\n      [EOF, ''],\r\n    ]\r\n  }\r\n  init () {\r\n    this.row = 0\r\n    this.col = 0\r\n\r\n  }\r\n  tokenizeWord (input, current) {\r\n    let consumedChars = 0\r\n    let value = ''\r\n    let count = current\r\n    let char = input[current]\r\n    //test for alphabetic sequence\r\n    do {\r\n      value += char\r\n      consumedChars++\r\n      count++\r\n      char = input[count]\r\n    } while (char && char.match(/[^*+-/^(),![\\]\\s]/i))\r\n\r\n    if (consumedChars > 0) {\r\n      let token = new Token(ATTR, value, this.row, this.col)\r\n      return [consumedChars, token]// { type, value, row, _col }];\r\n    }\r\n    return [0, null]\r\n  }\r\n  tokenizeString (input, current) {\r\n    if (input[current] === '\"') {\r\n      let value = '\"'\r\n      let consumedChars = 1\r\n      let _col = this.col\r\n      //consumedChars ++;\r\n      let char = input[current + consumedChars]\r\n      while (char !== '\"' && char !== undefined) {\r\n        /*if(char === undefined) {//if production throw new TypeError(\"unterminated string \");}*/\r\n        value += char\r\n        consumedChars++\r\n        char = input[current + consumedChars]\r\n      }\r\n      value += '\"'\r\n      return [consumedChars + 1, new Token(STRING, value, this.row, _col)]// { type: 'string', value, row, col }];\r\n    } else if (input[current] === '\\'') {\r\n      let value = '\\''\r\n      let consumedChars = 1\r\n      let _col = this.col\r\n      //consumedChars ++;\r\n      let char = input[current + consumedChars]\r\n      while (char !== '\\'' && char !== undefined) {\r\n        /*if(char === undefined) {//if production throw new TypeError(\"unterminated string \");}*/\r\n        value += char\r\n        consumedChars++\r\n        char = input[current + consumedChars]\r\n      }\r\n      value += '\\''\r\n      return [consumedChars + 1, new Token(STRING, value, this.row, _col)]// { type: 'string', value, row, col }];\r\n    }\r\n    return [0, null]\r\n  }\r\n  tokenizeNumber (input, current) {\r\n    //Return a (multidigit) integer or float consumed from the input\r\n    var result = ''\r\n    let consumedChars = 0\r\n    let count = current\r\n    let token = null\r\n\r\n    while (input[count] && input[count].toString().match(Numeric)) {\r\n      result += input[count]\r\n      consumedChars++\r\n      count++\r\n    }\r\n    if (input[count] && input[count] == '.') {\r\n      result += input[count]\r\n      consumedChars++\r\n      count++\r\n      while (input[count] && input[count].toString().match(Numeric)) {\r\n        result += input[count]\r\n        consumedChars++\r\n        count++\r\n      }\r\n      token = [consumedChars, new Token(NUM, Number(result), this.row, this.col)]\r\n    } else {\r\n      token = [consumedChars, new Token(NUM, Number(result), this.row, this.col)]\r\n    }\r\n    if (consumedChars > 0) {\r\n      return token\r\n    }\r\n    return [0, null]\r\n  }\r\n  skipWhiteSpace (input, current) {\r\n    var result = ''\r\n    let consumedChars = 0\r\n    let count = current\r\n    let char = input[current]\r\n    do {\r\n      result += char\r\n      consumedChars++\r\n      count++\r\n      char = input[count]\r\n    } while (char && char !== '\\n' && char.match(/\\s/))\r\n\r\n    if (consumedChars > 0) {\r\n      let token = new Token(SPACE, result, this.row, this.col)\r\n      return [consumedChars, token]\r\n    }\r\n    return [0, null]\r\n  }\r\n  tokenizeComment (input, current) {\r\n    if (input[current + 1] === '*') {\r\n      let value = ''\r\n      let count = current\r\n      let char = input[current]\r\n      let consumedChars = 0\r\n      do {\r\n        value += char\r\n        consumedChars++\r\n        count++\r\n        char = input[count]\r\n        if (char === '\\n') {\r\n          this.col = 0\r\n          this.row++\r\n        } else if (char === '/' && value[value.length - 1] === '*') {\r\n          value += char\r\n          consumedChars++\r\n          break\r\n        }\r\n      } while (char)\r\n\r\n      let token = new Token(REM, value, this.row, this.col)\r\n\r\n      return [consumedChars, token]// { type, value, row, _col }];\r\n    } else if (input[current + 1] === '/') {\r\n      return this.tokenizeLineComment(input, current)\r\n    }\r\n    return [0, null]\r\n  }\r\n  tokenizeLineComment (input, current) {\r\n    let char = input[current]\r\n    let consumedChars = 0\r\n    if (input[current + 1] === '/') {\r\n      let value = ''\r\n      let count = current\r\n      do {\r\n        value += char\r\n        consumedChars++\r\n        count++\r\n        char = input[count]\r\n      } while (char && char !== '\\n')\r\n\r\n      let token = new Token(REM, value, this.row, this.col)\r\n      return [consumedChars, token]// { type, value, row, _col }];\r\n    }\r\n    return [0, null]\r\n  }\r\n  static flagComment (tokens) {\r\n    let filtered = []\r\n    for (let index = 0; index < tokens.length; index++) {\r\n      let token = tokens[index]\r\n      if (token.type === DIV) {\r\n        let next = tokens[index + 1]\r\n        if (next) {\r\n          let tk = Object.assign({}, token)\r\n          let text = []\r\n          if (next.type === DIV) {\r\n            // Filter line comment\r\n            do {\r\n              text.push(token.value)\r\n              index++\r\n              token = tokens[index]\r\n            } while (token && token.type !== LINE)\r\n          } else if (next.type === TIMES) {\r\n            // Filter multi line comment\r\n            do {\r\n              text.push(token.value)\r\n              index++\r\n              token = tokens[index]\r\n              if (token && token.type === DIV && tokens[index - 1].type === TIMES) {\r\n                text.push(token.value)\r\n                break\r\n              }\r\n            } while (index < tokens.length)\r\n          }\r\n          tk.value = text.join('')\r\n          tk.type = REM\r\n          filtered.push(tk)\r\n          continue\r\n        }\r\n      }\r\n      filtered.push(token)\r\n    }\r\n    return filtered\r\n  }\r\n  static filterComment (tokens) {\r\n\r\n    return tokens.filter((token) => token.type !== REM && token.type !== COMMENT)\r\n  }\r\n  static filterSpace (tokens) {\r\n\r\n    return tokens.filter((token) => token.type !== SPACE)\r\n  }\r\n  static transform (tokens) {\r\n    let transformed = []\r\n    for (let i = 0; i < tokens.length; i++) {\r\n      let token = tokens[i]\r\n      if (token.type === 'EOF') break\r\n      let phrase = []\r\n      if (token.type === ATTR) {\r\n        let row = token.row\r\n        let col = token.column\r\n        do {\r\n          phrase.push(token.value)\r\n          i++\r\n          token = tokens[i]\r\n          if (token.type === REM) {\r\n            i++\r\n            token = tokens[i]\r\n            continue\r\n          }\r\n        } while (token && (token.type === ATTR || token.type == NUM || token.type === SPACE))\r\n        i--\r\n        if (phrase.length > 0) {\r\n          if (tokens[i].type === SPACE) {\r\n            phrase.pop()\r\n            i--\r\n          }\r\n          let attr = phrase.join(' ')\r\n          transformed.push({ type: ATTR, value: attr, row: row, column: col })\r\n        }\r\n      } else {\r\n        transformed.push(token)\r\n      }\r\n    }\r\n    return transformed\r\n  }\r\n  /**\r\n   * \r\n   * @param {String} input Production rules in plain text\r\n   * @returns { Promise<Object> } Tokens\r\n   */\r\n  async tokenize (input) {\r\n    this.row = 0\r\n    this.col = 0\r\n    let current = 0\r\n    let tokens = []\r\n    let [consumedChars, token] = [0, null]\r\n    // let mathConsts = Object.keys( MATH_CONSTS )\r\n    // let mathFuncs = Object.keys( MATH_FUNCS )\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        while (current < input.length) {\r\n          let char = input[current]\r\n          let tokenized = false\r\n          let found = this.SpecialCharacters.find(v => v[1] === char)\r\n          switch (char) {\r\n            case '\\n': {\r\n              tokens.push(new Token(LINE, char, this.row, this.col))\r\n              current++\r\n              this.col = 0\r\n              this.row++\r\n              break\r\n            }\r\n            default:\r\n              if ('/' === char && (input[current + 1] === \"*\" || input[current + 1] === \"/\")) {\r\n                let [chars, tk] = this.tokenizeComment(input, current)\r\n                consumedChars = chars\r\n                token = tk\r\n              } else if ('\"' === char) {\r\n                let [chars, tk] = this.tokenizeString(input, current)\r\n                consumedChars = chars\r\n                token = tk\r\n              } else if (found) {\r\n                token = new Token(found[0], char, this.row, this.col)\r\n                consumedChars = 1\r\n              } else if (RegExp(Numeric).test(char)) {\r\n                //Number: tokenize number\r\n                let [chars, tk] = this.tokenizeNumber(input, current)\r\n                consumedChars = chars\r\n                token = tk\r\n              } else if (RegExp(/\\s/).test(char)) {\r\n                let [chars, tk] = this.skipWhiteSpace(input, current)\r\n                consumedChars = chars\r\n                token = tk\r\n              } else if (RegExp(/[a-zA-Z]|\\w/i).test(char)) {\r\n                // let pattern = /[a-zA-Z]|\\w/i\r\n                let [chars, tk] = this.tokenizeWord(input, current)\r\n                consumedChars = chars\r\n                token = tk\r\n              } else {\r\n                tokenized = false\r\n              }\r\n              if (consumedChars !== 0) {\r\n                tokenized = true\r\n                current += consumedChars\r\n                this.col += consumedChars\r\n                tokens.push(token)\r\n              }\r\n              if (!tokenized) {\r\n                var err = new Token(ERROR, input[current], this.row, this.col)//{type:'ERROR', value:input[current], row:this.row-1,col:this.col, pos:current};\r\n                tokens.push(err)\r\n                current++\r\n                //if (production) throw new TypeError('Invalid input: '+input[current-1]);\r\n              }\r\n          }\r\n        }\r\n        tokens.push(new Token(EOF, '', this.row, -1))//{type:'EOF', value:''});\r\n        resolve(tokens)\r\n      }, 100)\r\n    })\r\n    // console.log( { tokens } )\r\n    // return tokens\r\n  }\r\n}\r\n","import pubsub from \"./EventPubSub\";\r\nimport {\r\n    RULE,\r\n    ELSE,\r\n    ELSEIF,\r\n    THEN,\r\n    AND,\r\n    OR,\r\n    IF,\r\n    PROMPT,\r\n    QUESTION,\r\n    MENU,\r\n    LINE,\r\n    ATTR,\r\n    /* CF, DIGIT, YES, NO, TRUE, FALSE, NUM, MIN, MAX, ARRAY, ATTR, CONST, FUNC,\r\n  ATTRIBUTE, TITLE, SUMMARY, GOAL, LINE, ERROR, EOF, LPAREN, RPAREN, TIMES,\r\n  COMMA, GT, LT, EQ, TEXT, NOT, IN, EX, IS, REM, COMMENT, SPACE, MOD, LBRACKET, CARRET, */\r\n} from \"./TokenConstants\";\r\n\r\nconst ParseToken = function (self) {\r\n    return {\r\n        rule(token) {\r\n            if (\r\n                self.prev === null ||\r\n                self.prev === MENU ||\r\n                self.prev === THEN ||\r\n                self.prev === ELSE ||\r\n                self.prev === AND\r\n            ) {\r\n                self.prev = RULE;\r\n                const r = self.scanRule();\r\n                pubsub.publish(\"rule\", [r, self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        if() {\r\n            if (self.prev === RULE) {\r\n                self.prev = IF;\r\n                const p = self.scanPremise();\r\n                if (!p) return;\r\n                const { left, right, op } = p;\r\n                pubsub.publish(\"condition\", [IF, left, right, self.row, op], this);\r\n                return true;\r\n            }\r\n        },\r\n        or() {\r\n            if (\r\n                self.prev === IF ||\r\n                self.prev === ELSEIF ||\r\n                self.prev === OR ||\r\n                self.prev === AND\r\n            ) {\r\n                self.prev = OR;\r\n                const p = self.scanPremise();\r\n                if (!p) return;\r\n                const { left, right, op } = p;\r\n                pubsub.publish(\"premise\", [OR, left, right, self.row, op], this);\r\n                return true;\r\n            }\r\n        },\r\n        and() {\r\n            if (\r\n                self.prev === IF ||\r\n                self.prev === ELSEIF ||\r\n                self.prev === THEN ||\r\n                self.prev === ELSE ||\r\n                self.prev === AND\r\n            ) {\r\n                self.prev = AND;\r\n                if (self.prev === THEN) {\r\n                    const p = self.scanInference();\r\n                    if (!p) return;\r\n                    const { name, right } = p;\r\n                    pubsub.publish(\r\n                        \"inference\",\r\n                        [name, right, false, self.row],\r\n                        this\r\n                    );\r\n                    return true;\r\n                } else if (self.prev === ELSE) {\r\n                    const p = self.scanInference();\r\n                    if (!p) return;\r\n                    const { name, right } = p;\r\n                    pubsub.publish(\r\n                        \"inference\",\r\n                        [name, right, false, self.row],\r\n                        this\r\n                    );\r\n                    return true;\r\n                } else {\r\n                    const p = self.scanPremise();\r\n                    if (!p) return;\r\n                    const { left, right, op } = p;\r\n                    pubsub.publish(\r\n                        \"premise\",\r\n                        [AND, left, right, self.row, op],\r\n                        this\r\n                    );\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        then(token) {\r\n            // console.log(self.prev, token)\r\n            if (\r\n                self.prev === IF ||\r\n                self.prev === ELSEIF ||\r\n                self.prev === OR ||\r\n                self.prev === AND\r\n            ) {\r\n                self.prev = THEN;\r\n                const p = self.scanInference();\r\n                if (!p) return false;\r\n                const { name, right } = p;\r\n                pubsub.publish(\"inference\", [name, right, false, self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        elseif(token) {\r\n            if (self.prev === THEN || self.prev === AND || self.prev === ELSE) {\r\n                self.prev = ELSEIF;\r\n                // console.log(token)\r\n                const p = self.scanPremise();\r\n                if (!p) return;\r\n                const { left, right, op } = p;\r\n                pubsub.publish(\r\n                    \"condition\",\r\n                    [ELSEIF, left, right, self.row, op],\r\n                    this\r\n                );\r\n                return true;\r\n            }\r\n        },\r\n        else() {\r\n            if (self.prev === THEN || self.prev === AND) {\r\n                self.prev = ELSE;\r\n                const f = self.scanInference();\r\n                if (!f) return;\r\n                const { name, right } = f;\r\n                pubsub.publish(\"inference\", [name, right, true, self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        prompt() {\r\n            if (\r\n                self.prev === null ||\r\n                self.prev === MENU ||\r\n                self.prev === THEN ||\r\n                self.prev === ELSE\r\n            ) {\r\n                self.prev = PROMPT;\r\n                const p = self.scanPrompt();\r\n                pubsub.publish(\"prompt\", [p, self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        question() {\r\n            if (self.prev === PROMPT) {\r\n                self.prev = QUESTION;\r\n                const q = self.scanQuestion();\r\n                pubsub.publish(\"question\", [q, self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        menu() {\r\n            if (self.prev === QUESTION) {\r\n                self.prev = MENU;\r\n                const m = self.scanMenu();\r\n                pubsub.publish(\"menu\", [m, self.row], this);\r\n                return this;\r\n            }\r\n        },\r\n        digit() {\r\n            if (self.prev === QUESTION) {\r\n                self.prev = MENU;\r\n                self.scanDigit();\r\n                pubsub.publish(\"digit\", [self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        text() {\r\n            if (self.prev === QUESTION) {\r\n                self.prev = MENU;\r\n                self.scanText();\r\n                pubsub.publish(\"text\", [self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        yes() {\r\n            if (self.prev === QUESTION) {\r\n                self.prev = MENU;\r\n                self.scanYesNo();\r\n                pubsub.publish(\"yes-no\", [self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        true() {\r\n            if (self.prev === QUESTION) {\r\n                self.prev = MENU;\r\n                self.scanTrueFalse();\r\n                pubsub.publish(\"true-false\", [self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        min() {\r\n            if (self.prev === MENU) {\r\n                const min = self.scanMin();\r\n                // self.pos--\r\n                if (min) {\r\n                    pubsub.publish(\"min\", [min, self.row], this);\r\n                }\r\n                return true;\r\n            }\r\n        },\r\n        max() {\r\n            if (self.prev === MENU) {\r\n                const max = self.scanMax();\r\n                // self.pos--\r\n                if (max) {\r\n                    pubsub.publish(\"max\", [max, self.row], this);\r\n                }\r\n                return true;\r\n            }\r\n        },\r\n        cf() {\r\n            if (self.prev === MENU) {\r\n                pubsub.publish(\"cf\", [self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        mod() {\r\n            if (self.prev === MENU) {\r\n                pubsub.publish(\"cf\", [self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        attribute() {\r\n            const attribute = self.scanAttribute();\r\n            pubsub.publish(\"attribute\", [attribute, self.row], this);\r\n            return true;\r\n        },\r\n        goal(token) {\r\n            if (\r\n                self.prev === null ||\r\n                self.prev === MENU ||\r\n                self.prev === THEN ||\r\n                self.prev === ELSE\r\n            ) {\r\n                if (self.lastToken.type === LINE) {\r\n                    const goal = self.scanGoal();\r\n                    if (goal) {\r\n                        pubsub.publish(\"goal\", [goal, self.row], this);\r\n                    }\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        array() {\r\n            if (\r\n                self.prev === null ||\r\n                self.prev === MENU ||\r\n                self.prev === THEN ||\r\n                self.prev === ELSE\r\n            ) {\r\n                const array = self.scanArray();\r\n                pubsub.publish(\"array\", [array, self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        title() {\r\n            if (self.prev === null) {\r\n                const title = self.scanTitle();\r\n                pubsub.publish(\"title\", [title, self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        summary() {\r\n            if (self.prev === null) {\r\n                const summary = self.scanSummary();\r\n                pubsub.publish(\"summary\", [summary, self.row], this);\r\n                return true;\r\n            }\r\n        },\r\n        line() {\r\n            pubsub.publish(\"line\", [self.row], this);\r\n            return true;\r\n        },\r\n        eof() {\r\n            // End of file\r\n            pubsub.publish(\"eof\", [self.row], this);\r\n            return true;\r\n        },\r\n        error(token) {\r\n            self.error(\"Unknown character or token: \" + token.value, token);\r\n            return true;\r\n        },\r\n    };\r\n};\r\nexport default ParseToken;\r\n","/* jshint esversion:8 */\n// import CustomEvent from './CustomEvent'\nimport pubsub from './EventPubSub'\nimport Lexer from './DefaultLexer'\nimport { MATH_CONSTS, MATH_FUNCS } from './Regex'\nimport ParseToken from './DefaultTokenParser'\nimport {\n  YES, NO, TRUE, FALSE, ELSE, ELSEIF, AND, OR, IF, RULE, THEN, /* CF, MOD, */\n  PROMPT, QUESTION, DIGIT, MENU, NUM, MIN, MAX, ARRAY, ATTR, CONST, FUNC,\n  ATTRIBUTE, TITLE, SUMMARY, GOAL, LINE, ERROR, EOF, LPAREN, RPAREN, TIMES,\n  COMMA, GT, LT, EQ, TEXT, NOT, IN, EX, IS, REM, COMMENT, SPACE, LBRACKET, CARRET,\n  EXCLUDE,\n} from './TokenConstants'\n/**\n * Laguage grammar parser. Parser is language neutral, \n * it does not know in which language the rules are written\n */\nexport default class Parser {\n  /**\n    * Constructor \n    */\n  constructor (language, languageModule) {\n    // super()\n    this.language = language\n    // this.languageModule = languageModule\n    this.keywords = languageModule.keywords // languageModule.keywords // keywords[language.toLowerCase()]\n    this.keyMap = Object.keys(this.keywords)\n    this.keyValues = Object.values(this.keywords)\n    this.tokens = null\n    this.prev = null\n    this.errors = []\n    this.data = {}\n    this.parseToken = ParseToken(this)\n    // this.init()\n  }\n  get Event () {\n    return super.prototype\n  }\n  get Data (){\n    return this.data\n  }\n  get Error () {\n    return this.errors\n  }\n  init () {\n    this.row = 0\n    this.col = 0\n    this.errors = []\n    this.attributes = {},\n    this.prompts = {},\n    this.inferences = []\n    this.knowledgebase = null\n    this.data = null\n    this.tokens = []\n  }\n  matchCloseParenthesis (tokens, startIndex) {\n    let $return = -1\n    let left = 0\n    let right = 0\n    for (let i = startIndex; i < tokens.length; i++) {\n      const s = tokens[i].value\n      if (s === '(') {\n        left++\n      } else if (s === ')') {\n        right++\n      }\n      if (left > 0 && left === right) {\n        $return = i\n        break\n      }\n    }\n    return $return\n  }\n  matchOpenParenthesis (tokens, startIndex) {\n    let $return = -1\n    let left = 0\n    let right = 0\n    for (let i = startIndex; i >= 0; i--) {\n      const s = tokens[i].value\n      if (s === '(') {\n        left++\n      } else if (s === ')') {\n        right++\n      }\n      if (left > 0 && left === right) {\n        $return = i\n        break\n      }\n    }\n    return $return\n  }\n  matchParenthesis (tokens) {\n    if (!tokens) return\n    this.matchBrackets(tokens)\n    const open = '('\n    const close = ')'\n    const opens = []\n    const closes = []\n    for (let i = 0; i < tokens.length; i++) {\n      const c = tokens[i].value\n      if (c === open) {\n        opens.push([i, c])\n      } else if (c === close) {\n        closes.push([i, c])\n      }\n    }\n\n    for (let i = opens.length - 1; i >= 0; i--) {\n      const match = this.matchCloseParenthesis(tokens, opens[i][0])\n      if (match === -1) {\n        const msg = 'Open parenthesis \\'{0}\\' at column {1} has no close parenthesis'\n        this.error(msg)\n        break\n      }\n    }\n    for (let i = 0; i < closes.length; i++) {\n      // let c = closes[i][1];\n      const index = closes[i][0]\n      const match = this.matchOpenParenthesis(tokens, index)\n      if (match === -1) {\n        const msg = 'Close parenthesis \\'{0}\\' at column {1} has no opening parenthesis'\n        this.error(msg)\n        break\n      }\n    }\n  }\n  matchCloseBracket (tokens, startIndex) {\n    let $return = -1\n    let left = 0\n    let right = 0\n    for (let i = startIndex; i < tokens.length; i++) {\n      const s = tokens[i].value\n      if (s === '[') {\n        left++\n      } else if (s === ']') {\n        right++\n      }\n      if (left > 0 && left === right) {\n        $return = i\n        break\n      }\n    }\n    return $return\n  }\n  matchOpenBracket (tokens, startIndex) {\n    let $return = -1\n    let left = 0\n    let right = 0\n    for (let i = startIndex; i >= 0; i--) {\n      const s = tokens[i].value\n      if (s === '[') {\n        left++\n      } else if (s === ']') {\n        right++\n      }\n      if (left > 0 && left === right) {\n        $return = i\n        break\n      }\n    }\n    return $return\n  }\n  matchBrackets (tokens) {\n    if (!tokens) return\n    const open = '['\n    const close = ']'\n    const opens = []\n    const closes = []\n    for (let i = 0; i < tokens.length; i++) {\n      const c = tokens[i].value\n      if (c === open) {\n        opens.push([i, c])\n      } else if (c === close) {\n        closes.push([i, c])\n      }\n    }\n\n    for (let i = opens.length - 1; i >= 0; i--) {\n      const match = this.matchCloseBracket(tokens, opens[i][0])\n      if (match === -1) {\n        const msg = 'Open bracket \\'{0}\\' at column {1} has no close bracket'\n        this.error(msg)\n        break\n      }\n    }\n    for (let i = 0; i < closes.length; i++) {\n      const index = closes[i][0]\n      const match = this.matchOpenBracket(tokens, index)\n      if (match === -1) {\n        const msg = 'Close bracket \\'{0}\\' at column {1} has no opening bracket'\n        this.error(msg)\n        break\n      }\n    }\n  }\n  matchDuplicateOperator (token) {\n    if (!token) return\n    if (token.value.toString().match(/[+\\-*/]/)) {\n      const next = this.peek()\n      if (next && next.value.toString().match(/[+\\-*/]/)) {\n        this.error('Duplicate operator ' + token.value + ' ' + next.value, token)\n        return\n      }\n    }\n  }\n  readToEndOfLine () {\n    const tokens = []\n    let peek = null\n    do {\n      peek = this.peek()\n      let token = this.tokens[this.pos]\n      tokens.push(token)\n      this.advance()\n    } while (peek && peek.type !== LINE && peek.type !== EOF)\n\n    const text = tokens.map(t => t.value)\n    if (!text || text.length === 0) {\n      return null\n    }\n    return text.join(' ')\n  }\n  scanRule () {\n    const text = this.scanDefinition(RULE)\n    if (!text || text.length === 0) {\n      return this.error('Rule should have description')\n    }\n    return text\n  }\n  scanDefinition (type, name) {\n    let token = this.peek(type)\n    if (token) this.eat(type)\n    return this.readToEndOfLine()\n  }\n  scanTitle () {\n    const text = this.scanDefinition(TITLE, this.keywords.TITLE)\n    if (!text || text.length === 0) {\n      return this.error('Title should have description')\n    }\n    return text\n  }\n  scanSummary () {\n    const text = this.scanDefinition(SUMMARY, this.keywords.SUMMARY)\n    if (!text || text.length === 0) {\n      return this.error('Summary should have description')\n    }\n    return text\n  }\n  scanQuestion () {\n    const text = this.scanDefinition(QUESTION, this.keywords.QUESTION)\n    if (!text || text.length === 0) {\n      return this.error('Question should have a statement')\n    }\n    return text\n  }\n  scanAttribute () {\n    // then attribute equal expression\n    this.eat(ATTRIBUTE)\n    const left = this.eat(ATTR)\n    if (!left) {\n      return this.error('Attribute definition should have Attribute Name')\n    }\n    const equal = this.eat(EQ)\n    if (!equal) {\n      return this.error('Expected =')\n    }\n    const right = this.rightNode()\n    if (right.type === EOF) {\n      return this.error('Expected expression but found end of file', right)\n    } else if (right.type === LINE) {\n      return this.error('Expected expression but found new line', right)\n    }\n    this.matchParenthesis(left)\n    this.matchParenthesis(right)\n    const rt = right.map((n) => n.value)\n    this.assignGlobal(left.value, rt.join(' '), right[0].row, right[0].column, true)\n    return [left.value, right]\n  }\n  scanArray () {\n    const node = this.eat(ARRAY)\n    if (!node) {\n      return this.error('Expected array name')\n    }\n    const equal = this.eat(EQ)\n    if (!equal) {\n      return this.error('Expected =')\n    }\n    // let token=null;\n    const tokens = []\n    const lparen = this.eat(LPAREN)\n    if (!lparen) {\n      return this.error('Expected (')\n    }\n    // tokens.push(lparen);\n    while (this.peek() && this.peek().type !== LINE && this.peek().type !== EOF) {\n      let token = this.tokens[this.pos]\n      if (!token || (token.type !== NUM && token.type !== ATTR)) {\n        return this.error('Expected number or Attribute')\n      }\n      tokens.push(token)\n      token = this.eat(COMMA)\n      if (!token) {\n        return this.error('Expected ,')\n      }\n      tokens.push(token)\n    }\n    const rparen = tokens.pop()\n    if (rparen && rparen.type !== RPAREN) {\n      return this.error('Expected ) but found new line')\n    }\n    this.assignGlobal(node.value, node.value, node.row, node.column)\n    return [node, tokens, ARRAY]\n  }\n  scanGoal () {\n    // this.eat(GOAL)\n    const text = this.scanDefinition(GOAL)\n    if (!text || text.length === 0) {\n      return this.error('Goal definition should have texts')\n    }\n    return text\n  }\n  scanPrompt () {\n    // this.eat(PROMPT)\n    const prompt = this.scanDefinition(PROMPT) // this.eat(ATTR)\n    if (!prompt || prompt.length === 0) {\n      return this.error('Prompt definition should have texts')\n    }\n    this.prompts[prompt.toLowerCase()] = prompt\n\n    return prompt\n  }\n  scanMenu () {\n    this.eat(MENU)\n    const tokens = []\n    const lparen = this.eat(LPAREN)\n    if (!lparen) {\n      return this.error('Expected (')\n    }\n    let token = this.tokens[this.pos]\n    while (token && token.type !== RPAREN && token.type !== LINE && token.type !== EOF) {\n      if (!token || (token.type !== NUM && token.type !== ATTR &&\n        token.type !== YES && token.type !== NO &&\n        token.type !== TRUE && token.type !== FALSE\n      )) {\n        return this.error('Expected number or Attribute')\n      }\n      tokens.push(token)\n      if (this.peek() && this.peek().type === RPAREN) {\n        this.advance()\n        break\n      }\n      this.advance()\n      this.eat(COMMA)\n      token = this.tokens[this.pos]\n    }\n    const menu = tokens.map((m) => m.value)\n    return menu\n  }\n  scanYesNo () {\n    // let next = this.peek()\n    this.eat(YES)\n    // if (next && next.type === COMMA) {\n    this.eat(COMMA)\n    // }\n    this.eat(NO)\n  }\n  scanTrueFalse () {\n    // let next = this.peek()\n    this.eat(TRUE)\n    // if (next && next.type === COMMA) {\n    this.eat(COMMA)\n    // }\n    this.eat(FALSE)\n  }\n  scanDigit () {\n    this.eat(DIGIT)\n  }\n  scanText () {\n    this.eat(TEXT)\n  }\n  scanMin () {\n    this.eat(MIN)\n    const min = this.eat(NUM)\n    return min\n  }\n  scanMax () {\n    this.eat(MAX)\n    const max = this.eat(NUM)\n    return max\n  }\n\n  scanCF () {\n    if (this.peek() && this.peek().type === this.CF) {\n      this.advance()\n      cf = true\n    }\n    if (this.peek() && this.peek().type !== LINE) {\n      this.error('Expected end of line but found ' + this.peek().value)\n    }\n  }\n  scanInference () {\n    this.advance()\n    const name = this.leftAttribute()\n    let right = null\n    let nextToken = this.taste()\n    let comparator = nextToken\n    if (!comparator) {\n      return this.error('Expected expression but found end of line')\n    }\n    switch (nextToken.type) {\n      case EQ:\n      case GT:\n      case LT:\n      case NOT:\n      case IS:\n      case IN:\n      case EX:\n        this.advance()\n        right = this.rightNode()\n        if (comparator) {\n          if (right && right[0].type === EOF) {\n            return this.error('Expected expression but found end of file', right)\n          } else if (right && right[0].type === LINE) {\n            return this.error('Expected expression but found new line', right)\n          }\n          this.matchParenthesis(right)\n        }\n        break\n      default:\n        comparator = null\n    }\n    let _right = Object.assign({}, name)\n    if (!right) {\n      _right.type = TRUE\n      _right.value = this.keywords[TRUE]\n    }\n    if (!right) right = [_right]\n    return { name, right }\n  }\n  scanPremise () {\n    this.advance()\n    const left = this.leftNode()\n    let nextToken = this.taste()\n    let comparator = nextToken\n    if (!comparator) {\n      return this.error('Expected expression but found end of line')\n    }\n    this.matchParenthesis(left)\n    let comp = null\n    let right = []\n\n    switch (comparator.type) {\n      case EQ:\n      case GT:\n      case LT:\n      case NOT:\n      case IS:\n      case IN:\n      case EX:\n        this.advance()\n        comp = comparator.type\n        right = this.rightNode()\n        this.matchParenthesis(right)\n        if (comparator) {\n          if (right && right[0].type === EOF) {\n            return this.error('Expected expression but found end of file', right)\n          } else if (right && right[0].type === LINE) {\n            return this.error('Expected expression but found new line', right)\n          }\n          this.matchParenthesis(right)\n        }\n        break\n      case AND:\n      case OR:\n        this.pos--\n        break\n      default:\n        comparator = null\n    }\n\n    // if (left.length == 0) {\n    // this.error('Expected expression but found end of line')\n    // }\n    left.forEach((token) => {\n      if (token.type === ATTR) {\n        if (!(this.attributes[token.value.toLocaleLowerCase()])) {\n          this.assignGlobal(token.value, null, token.row, token.column)\n        }\n      }\n    })\n\n    if (!right || right.length === 0) {\n      let _right = Object.assign({}, {})\n      _right.type = TRUE\n      _right.value = this.keywords[TRUE]\n      right = [_right]\n    }\n    if (!comp) comp = EQ\n    return { left, right, op:comp }\n  }\n\n  peek () {\n    const peek_pos = this.pos + 1\n    if (peek_pos > this.tokens.length - 1) {\n      return null\n    }\n    return this.tokens[peek_pos]\n\n  }\n  trace () {\n    const trace_pos = this.pos - 1\n    if (trace_pos < 0) {\n      return null\n    }\n    return this.tokens[trace_pos]\n\n  }\n  taste () {\n    const token = this.tokens[this.pos]\n    return token\n  }\n  eat (type) {\n    const token = this.tokens[this.pos]\n    if (token) {\n      if (token.type === type) {\n        this.advance()\n        return token\n      } else {\n        return this.error('Expected ' + type + ' but found ' + token.type)\n      }\n    }\n    return this.error('Expected ' + type + ' but found end of line')\n  }\n  advance () {\n    this.pos++\n  }\n  rightNode () {\n    const result = []\n    let token = this.tokens[this.pos]\n\n    while (token && (token.type !== LINE && token.type !== EOF)) {\n      switch (token.type) {\n        case EQ:\n        case GT:\n        case LT:\n        case NOT:\n        case IS:\n        case IN:\n        case EX:\n          return this.error('Duplicate comparator ' + token.value)\n        case AND:\n        case OR:\n          return result\n        default:\n          this.matchDuplicateOperator(token)\n          result.push(token)\n          this.advance()\n          token = this.tokens[this.pos]\n      }\n    }\n    return result\n  }\n  leftNode () {\n    const result = []\n    let token = this.tokens[this.pos]\n\n    while (token && (token.type !== LINE && token.type !== EOF)) {\n      if (token.type === ERROR) {\n        this.error('Error', token)\n      }\n      switch (token.type) {\n        case EQ:\n        case GT:\n        case LT:\n        case NOT:\n        case IS:\n        case IN:\n        case EX:\n          return result\n        case AND:\n        case OR:\n          return result\n        default:\n          // do nothing\n          this.matchDuplicateOperator(token)\n          result.push(token)\n          this.advance()\n          token = this.tokens[this.pos]\n      }\n    }\n    return result // may never be reached\n  }\n  leftAttribute () {\n    const token = this.eat(ATTR)\n    if (!token) {\n      return this.error('Expected attribute')\n    }\n    this.inferences[token.value.toLocaleLowerCase()] = token\n    return token // may never be reached\n  }\n  comparator () {\n    const token = this.tokens[this.pos]\n    switch (token.type) {\n      case EQ:\n      case GT:\n      case LT:\n      case NOT:\n      case IS:\n      case IN:\n      case EX:\n        break\n      default:\n        this.warn('Expected comparator but found ' + token.value + ' ' + token.row)\n    }\n    this.advance()\n\n    return token\n  }\n  assignGlobal (name, value, row, col, inf) {\n    this.attributes[name.toLocaleLowerCase()] = {\n      name: name,\n      value: value,\n      row: row,\n      col: col,\n    }\n    if (inf) {\n      this.inferences[name.toLocaleLowerCase()] = name\n    }\n  }\n  checkVarableDeclarations () {\n    Object.keys(this.attributes).forEach((k) => {\n      const a = this.attributes[k]\n      if (!(this.inferences[k] || this.prompts[k])) {\n        this.warn('No input prompt for attribute ' + k, a)\n        // console.log(this.inferences, this.prompts)\n      }\n    })\n  }\n  warn (msg, token) {\n    const w = {\n      type: 'warning', // \"error\"|\"warning\"|\"info\"\n      row: token ? token.row : this.row, // row index\n      column: token ? token.col : this.col, // character index on line\n      text: msg, // Error message\n      raw: '', // \"Missing semicolon\"\n    }\n    this.errors.push(w)\n    pubsub.publish('warning', w)\n  }\n  error (msg, token) {\n    const e = {\n      type: 'error', // \"error\"|\"warning\"|\"info\"\n      row: token ? token.row : this.row, // row index\n      column: token ? token.column : this.col, // character index on line\n      text: msg, // Error message\n      raw: token, // \"Missing semicolon\"\n    }\n\n    this.errors.push(e)\n    pubsub.publish('error', e)\n  }\n  info (msg, token) {\n    const i = {\n      type: 'info', // \"error\"|\"warning\"|\"info\"\n      row: token ? token.row : this.row, // row index\n      column: token ? token.col : this.col, // character index on line\n      text: msg, // Error message\n      raw: token, // \"Missing semicolon\"\n    }\n    this.errors.push(i)\n    pubsub.publish('info', i)\n  }\n  isKeyword (word, index, tokens) {\n    const token = index > 0 ? tokens[index - 1] : null\n    const prev = token ? token.type : null\n    const history = index > 1 ? tokens[index - 2].type : null\n    switch (word) {\n      case AND:\n      case THEN:\n      case ELSE:\n      case OR:\n      case RULE:\n      case PROMPT:\n      case QUESTION:\n      case DIGIT:\n      case MENU:\n      case NUM:\n      case ARRAY:\n      case ATTRIBUTE:\n      case TITLE:\n      case SUMMARY:\n      case GOAL:\n        if (prev === LINE) {\n          return true\n        }\n        return false\n      case YES:\n      case TRUE:\n        if (prev === LINE || prev === EQ || prev === IS) {\n          return true\n        }\n        return false\n      case NO:\n        if (prev === EQ || prev === IS) {\n          return true\n        } else if (prev === COMMA && history === YES) {\n          return true\n        }\n        return false\n      case FALSE:\n        if (prev === EQ || prev === IS) {\n          return true\n        } else if (prev === COMMA && history === TRUE) {\n          return true\n        }\n        return false\n      case MIN:\n        if (prev === LINE) return true\n        return false\n      case MAX:\n        if (prev === LINE) {\n          return true\n        }\n        return false\n      case IF:\n        if (prev === LINE || prev === ELSE) {\n          return true\n        }\n        return false\n      case ELSEIF:\n        if (prev === LINE) {\n          return true\n        }\n        return false\n      default:\n        return true\n    }\n  }\n  filterKeywords () {\n    let tokens = []\n    let prevToken = null\n    for (let i = 0; i < this.tokens.length; i++) {\n      let token = this.tokens[i]\n      if (token.type === ATTR) {\n        //let found = this.keyValues.findIndex(v => v.toUpperCase() === token.value.toUpperCase())\n        let key = this.keyMap.find(k => this.keywords[k].toUpperCase && (this.keywords[k].toUpperCase() === token.value.toUpperCase()))\n        if (key) {\n          const isKeyword = this.isKeyword(key, i, tokens)\n          if (isKeyword) {\n            let tk = Object.assign({}, token)\n            tk.type = key\n            if (prevToken && prevToken.type === ELSE && key === IF) {\n              tokens[i - 1].value += ' ' + tk.value\n              tokens[i - 1].type = ELSEIF\n              prevToken = token\n              tokens.push(null)\n              continue\n            } else {\n              token = tk\n            }\n            tokens.push(tk)\n            continue\n          }\n        }\n      }\n      tokens.push(token)\n      prevToken = token\n      // history.unshift(Object.assign({}, token))\n      // if (history.length > 2) history.pop()\n    }\n    this.tokens = tokens\n    // console.log(tokens)\n  }\n\n  transform () {\n    let transformed = []\n    this.filterKeywords()\n\n    for (let i = 0; i < this.tokens.length; i++) {\n      let token = this.tokens[i]\n      if (token.type === EOF) break\n      let phrase = []\n\n      if (token.type === ATTR) {\n        let row = token.row\n        let col = token.column\n        do {\n          phrase.push(token.value)\n          i++\n          token = this.tokens[i]\n        } while (token && (token.type === ATTR || token.type == NUM))\n\n        let attr = phrase.join(' ')\n        transformed.push({ type: ATTR, value: attr, row: row, column: col })\n        i-- // Go back to last token (tokens[i])\n      } else if (token.type === ELSE && this.tokens[i + 1] && this.tokens[i + 1].type === IF) {\n        let next = this.tokens[i + 1]\n        let t = Object.assign({}, token)\n        t.type = ELSEIF\n        t.value = t.value + ' ' + next.value\n        transformed.push(t)\n        i++ // Skip the next Token (IF)\n      } else {\n        transformed.push(token)\n      }\n    }\n    this.tokens = transformed\n  }\n\n  applyMaths () {\n    let _tokens = []\n\n    for (let i = 0; i < this.tokens.length; i++) {\n      let math = null\n      let current = this.tokens[i]\n      const t = this.tokens[i + 1]\n      if (t && t.type === LPAREN && current.type === ATTR && MATH_FUNCS[current.value]) {\n        math = Object.assign({}, current)\n        math.type = FUNC\n        _tokens.push(math)\n      } else if (current.type === ATTR && MATH_CONSTS[current.value]) {\n        math = Object.assign({}, current)\n        math.type = CONST\n        _tokens.push(math)\n      } else {\n        _tokens.push(current)\n      }\n    }\n\n    let finalTokens = []\n    for (let i = 0; i < _tokens.length; i++) {\n      let math = null\n      let current = _tokens[i]\n      const t = _tokens[i + 1]\n      const nextToken = _tokens[i + 2]\n      if ((current.type === ATTR || current.type === NUM || current.type === CONST) &&\n        (t.type === LPAREN || t.type === LBRACKET)) {\n\n        finalTokens.push(current)\n\n        let key = this.keyMap.find(k => this.keywords[k].toUpperCase() === current.value.toUpperCase())\n        if (!key) {\n          math = Object.assign({}, current)\n          math.type = TIMES\n          math.value = '*'\n          // finalTokens.push(current)\n          finalTokens.push(math)\n        }\n      } else if ((nextToken &&\n        (nextToken.type === ATTR || nextToken.type === NUM || nextToken.type === CONST)) &&\n        (current.type === ATTR || current.type === NUM || current.type === CONST) &&\n        (t.type === CARRET)) {\n        let pow = Object.assign({}, current)\n        pow.type = 'FUNC'\n        pow.value = 'pow'\n\n        let paren = Object.assign({}, current)\n        paren.type = LPAREN\n        paren.value = '('\n\n        let rparen = Object.assign({}, current)\n        rparen.type = RPAREN\n        rparen.value = ')'\n\n        let comma = Object.assign({}, current)\n        comma.type = COMMA\n        comma.value = ','\n\n        finalTokens.push(pow)\n        finalTokens.push(paren)\n        finalTokens.push(current)\n        finalTokens.push(comma)\n        finalTokens.push(nextToken)\n        finalTokens.push(rparen)\n        i++\n        i++\n      } else {\n        finalTokens.push(current)\n      }\n    }\n    this.tokens = finalTokens\n  }\n  filterComment () {\n    return this.tokens.filter((token) => token.type !== REM && token.type !== COMMENT)\n  }\n\n  /**\n     * Recursively go through tokens and emmit events using implementation of\n     * Finite State Machine (FST)\n     * @param {JSON} tokens \n     * @returns { Promise<Object> } errors if any including warning and info\n     */\n  async parse (text) {\n   \n    return new Promise(async (resolve, reject) => {\n      this.init()\n      this.pos = 0\n      let tokenizer = new Lexer()\n      let tokens = await tokenizer.tokenize(text)\n      setTimeout(() => {\n        this.tokens = tokens.filter(token => token.type !== SPACE && token.type !== REM)\n        this.applyMaths()\n        this.transform()\n        this.prev = null\n        this.lastToken = null\n\n        for (this.pos = 0; this.pos < this.tokens.length; this.pos++) {\n          const token = this.tokens[this.pos]\n          this.lastToken = this.tokens[this.pos > 0 ? this.pos - 1 : 0]\n          this.row = token.row\n          this.col = token.column\n          const type = token.type\n\n          if (type === REM || type === COMMENT) {\n            continue\n          }\n\n          const action = this.parseToken[type.toLowerCase()]\n         \n          if (action) {\n            // call the method to parse token\n            const result = this.parseToken[type.toLowerCase()](token)\n            \n            if (!result) {\n              this.error('Invalid keyword: ' + token.value)\n            }\n          } else {\n\n            this.error('Invalid token or keyword: ' + token.value, token)\n          }\n        }\n        this.checkVarableDeclarations()\n        // pubsub.publish('data', { errors: this.errors, data: this.tokens })\n        pubsub.publish('done', { errors: this.errors, data: this.tokens })\n        if (this.errors.length > 0) {\n          // console.log(this.tokens, this.errors, this.keywords)\n          resolve(this.errors)\n          // \n        }\n        else {\n          resolve([])\n        }\n      }, 100)\n\n    })\n  }\n}\n","// import CustomEvent from './events.js'\r\n// import { Token } from './symbols.js'\r\nimport {\r\n  NUM, ATTR, LINE, EOF, LPAREN, RPAREN, EQ, REM, ERROR, SPACE, COLON,\r\n} from './TokenConstants'\r\nimport { Token } from './Symbols'\r\n\r\nexport default class Tokenizer {\r\n  constructor () {\r\n    this.row = 0\r\n    this.col = 0\r\n    this.errors = []\r\n  }\r\n  get Data () {\r\n    return this.data\r\n  }\r\n  get Error () {\r\n    return this.errors\r\n  }\r\n\r\n  error ( msg, token, flag = 'error' ) {\r\n    const e = {\r\n      type: flag, // \"error\"|\"warning\"|\"info\"\r\n      row: token.row || this.row, // row index\r\n      column: token.col || this.col, // character index on line\r\n      text: msg, // Error message\r\n      raw: token, // \"Missing semicolon\"\r\n    }\r\n    this.errors.push( e )\r\n  }\r\n  tokenizeNumber ( input, current ) {\r\n    //Return a (multidigit) integer or float consumed from the input\r\n    var result = ''\r\n    let consumedChars = 0\r\n    let count = current\r\n    let char = input[current]\r\n\r\n    do {\r\n      result += char\r\n      consumedChars++\r\n      count++\r\n      char = input[count]\r\n    } while ( char && char.toString().match( /[0-9]/ ) )\r\n    if ( consumedChars > 0 ) {\r\n      let token = [consumedChars, new Token( NUM, Number( result ), this.row, this.col )]\r\n      return token\r\n    }\r\n    return [0, null]\r\n  }\r\n  skipWhiteSpace ( input, current ) {\r\n    var result = ''\r\n    let consumedChars = 0\r\n    let count = current\r\n    let char = input[current]\r\n    do {\r\n      result += char\r\n      consumedChars++\r\n      count++\r\n      char = input[count]\r\n    } while ( char && char !== '\\n' && char.match( /\\s/ ) )\r\n    if ( consumedChars > 0 ) {\r\n      let token = [consumedChars, new Token( SPACE, result, this.row, this.col )]\r\n      return token\r\n    }\r\n    return [0, null]\r\n  }\r\n  tokenizeWord ( input, current ) {\r\n    let consumedChars = 0\r\n    let value = ''\r\n    let count = current\r\n    let char = input[current]\r\n    //test for alphabetic sequence\r\n    do {\r\n        value += char;\r\n        consumedChars++;\r\n        count++;\r\n        char = input[count];\r\n    } while (\r\n        char &&\r\n        char !== \"\\n\" &&\r\n        char !== \" \" &&\r\n        char !== \"=\" &&\r\n        char !== \":\"\r\n    );\r\n\r\n    if ( consumedChars > 0 ) {\r\n      let token = new Token( ATTR, value, this.row, this.col )\r\n      // console.log([consumedChars, token])\r\n      return [consumedChars, token]// { type, value, row, _col }];\r\n    }\r\n    return [0, null]\r\n  }\r\n  tokenizeBlockCommentXXX ( input, current ) {\r\n    if ( input[current + 1] === '*' ) {\r\n      let value = ''\r\n      let count = current\r\n      let char = input[current]\r\n      let consumedChars = 0\r\n      do {\r\n        value += char\r\n        consumedChars++\r\n        count++\r\n        char = input[count]\r\n        if ( char === '\\n' ) {\r\n          this.col = 0\r\n          this.row++\r\n        } else if ( char === '/' && value[value.length - 1] === '*' ) {\r\n          value += char\r\n          consumedChars++\r\n          break\r\n        }\r\n      } while ( char )\r\n\r\n      let token = new Token( REM, value, this.row, this.col )\r\n\r\n      return [consumedChars, token]// { type, value, row, _col }];\r\n    } else if ( input[current + 1] === '/' ) {\r\n      return this.tokenizeLineComment( input, current )\r\n    }\r\n    return [0, null]\r\n  }\r\n  tokenizeComment ( input, current ) {\r\n    let char = input[current]\r\n    let consumedChars = 0\r\n    if ( input[current + 1] === '/' ) {\r\n      let value = ''\r\n      let count = current\r\n      do {\r\n        value += char\r\n        consumedChars++\r\n        count++\r\n        char = input[count]\r\n      } while ( char && char !== '\\n' )\r\n\r\n      let token = new Token( REM, value, this.row, this.col )\r\n      return [consumedChars, token]// { type, value, row, _col }];\r\n    }\r\n    return [0, null]\r\n  }\r\n  tokenize ( input ) {\r\n    this.row = 0\r\n    this.col = 0\r\n    let current = 0\r\n    let tokens = []\r\n    while ( current < input.length ) {\r\n      let char = input[current]\r\n      let [consumedChars, token] = [0, null]\r\n      let tokenized = false\r\n      switch (char) {\r\n          case \"{\": {\r\n              tokens.push(new Token(LPAREN, char, this.row, this.col));\r\n              current++;\r\n              this.col++;\r\n              break;\r\n          }\r\n          case \"}\": {\r\n              tokens.push(new Token(RPAREN, char, this.row, this.col));\r\n              current++;\r\n              this.col++;\r\n              break;\r\n          }\r\n          case \"=\": {\r\n          // case \":\": {\r\n              tokens.push(new Token(EQ, char, this.row, this.col));\r\n              current++;\r\n              this.col++;\r\n              break;\r\n          }\r\n          case \":\": {\r\n              tokens.push(new Token(COLON, char, this.row, this.col));\r\n              current++;\r\n              this.col++;\r\n              break;\r\n          }\r\n          case \"\\n\": {\r\n              tokens.push(new Token(LINE, char, this.row, this.col));\r\n              current++;\r\n              this.col = 0;\r\n              this.row++;\r\n              break;\r\n          }\r\n\r\n          default:\r\n              if (RegExp(/[0-9]/).test(char)) {\r\n                  //Number: tokenize number\r\n                  let [chars, tk] = this.tokenizeNumber(input, current);\r\n                  consumedChars = chars;\r\n                  token = tk;\r\n              } else if (RegExp(/\\s/).test(char)) {\r\n                  let [chars, tk] = this.skipWhiteSpace(input, current);\r\n                  consumedChars = chars;\r\n                  token = tk;\r\n              } else if (\"/\" === char) {\r\n                  let [chars, tk] = this.tokenizeComment(input, current);\r\n                  consumedChars = chars;\r\n                  token = tk;\r\n              } else if (RegExp(/[a-zA-Z]/).test(char)) {\r\n                  let pattern = /[a-zA-Z]/;\r\n                  let [chars, tk] = this.tokenizeWord(input, current, pattern);\r\n                  consumedChars = chars;\r\n                  token = tk;\r\n              } else {\r\n                  tokenized = false;\r\n              }\r\n              if (consumedChars !== 0) {\r\n                  tokenized = true;\r\n                  current += consumedChars;\r\n                  this.col += consumedChars;\r\n                  tokens.push(token);\r\n              }\r\n              if (!tokenized) {\r\n                  var err = new Token(\r\n                      ERROR,\r\n                      input[current],\r\n                      this.row,\r\n                      this.col\r\n                  ); //{type:'ERROR', value:input[current], row:this.row-1,col:this.col, pos:current};\r\n                  tokens.push(err);\r\n                  current++;\r\n                  //if (production) throw new TypeError('Invalid input: '+input[current-1]);\r\n              }\r\n      }\r\n    }\r\n    tokens.push( new Token( EOF, '', this.row, -1 ) )//{type:'EOF', value:''});\r\n\r\n    return tokens\r\n  }\r\n}\r\n","import Tokenizer from \"./ResourceLexer\";\r\nimport {\r\n    NUM,\r\n    ATTR,\r\n    LINE,\r\n    EOF,\r\n    LPAREN,\r\n    RPAREN,\r\n    EQ,\r\n    REM,\r\n    SPACE,\r\n    COMMENT,\r\n    COLON,\r\n} from \"./TokenConstants\";\r\nconst editText = `\r\n    full name: Anthony Abah\r\n    street address: 23 Oshipitan Storage Event\r\n    phone: 0989765655456\r\n    phone: 89646464644646\r\n    work email abah.a@nafdac.gov.ng:\r\n    your message: Please come to {0} Adeleye Street, 1} Ladilak\r\n  `;\r\n\r\nfunction ResourceParser(lang, languageModule) {\r\n    const language = lang;\r\n    const keywords = languageModule.keywords;\r\n    var errors = [];\r\n    var data = {};\r\n    // const row = 0;\r\n    function error(data, flag = \"error\") {\r\n        const e = {\r\n            type: flag, // \"error\"|\"warning\"|\"info\"\r\n            row: data.row, // row index\r\n            column: data.col, // character index on line\r\n            text: data.msg, // Error message\r\n            raw: data.raw, // \"Missing semicolon\"\r\n        };\r\n        errors.push(e);\r\n        throw new Error(e.text + \" \" + e.raw);\r\n    }\r\n    function transform(tokens) {\r\n        let transformed = [];\r\n        for (let i = 0; i < tokens.length; i++) {\r\n            let token = tokens[i];\r\n            if (token.type === \"EOF\") break;\r\n            let phrase = [];\r\n            if (token.type === ATTR) {\r\n                let row = token.row;\r\n                let col = token.column;\r\n                do {\r\n                    phrase.push(token.value);\r\n                    i++;\r\n                    token = tokens[i];\r\n                    if (token.type === REM) {\r\n                        i++;\r\n                        token = tokens[i];\r\n                        continue;\r\n                    }\r\n                } while (\r\n                    token &&\r\n                    (token.type === ATTR ||\r\n                        token.type == NUM ||\r\n                        token.type === SPACE)\r\n                );\r\n                i--;\r\n                if (phrase.length > 0) {\r\n                    if (phrase[phrase.length - 1] === \" \") {\r\n                        phrase.pop();\r\n                        i--;\r\n                    }\r\n                    let attr = phrase.join(\" \");\r\n                    transformed.push({\r\n                        type: ATTR,\r\n                        value: attr,\r\n                        row: row,\r\n                        column: col,\r\n                    });\r\n                }\r\n            } else {\r\n                transformed.push(token);\r\n            }\r\n        }\r\n        return transformed;\r\n    }\r\n    function eatLeft(tokens, index) {\r\n        let token = tokens[index];\r\n        if (token.type === LPAREN) {\r\n            index++;\r\n            return index;\r\n        }\r\n        return index;\r\n    }\r\n    function eatRight(tokens, index) {\r\n        let token = tokens[index];\r\n        if (token && token.type === RPAREN) {\r\n            index++;\r\n            return index;\r\n        }\r\n        if (!token) {\r\n            token = tokens[index - 1];\r\n        }\r\n        let msg =\r\n            \"Expected '}' at row: \" +\r\n            token.row +\r\n            \" col:\" +\r\n            token.column +\r\n            \" but found '\" +\r\n            tokens.map((t) => t.value).join(\"\") +\r\n            \"'\";\r\n        error({\r\n            row,\r\n            col: token.column,\r\n            msg: msg,\r\n            raw: tokens.map((t) => t.value).join(\"\"),\r\n            params: [],\r\n        });\r\n        return index;\r\n    }\r\n    function eatNumber(tokens, index) {\r\n        let token = tokens[index];\r\n        if (token && token.type === SPACE) {\r\n            index++;\r\n            token = tokens[index];\r\n        }\r\n        let tks = [];\r\n        if (token && token.value.toString().match(/[0-9]/)) {\r\n            do {\r\n                tks.push(token);\r\n                index++;\r\n                token = tokens[index];\r\n            } while (token && token.value.toString().match(/[0-9]/));\r\n            if (token && token.type === SPACE) {\r\n                index++;\r\n                token = tokens[index];\r\n            }\r\n            return index;\r\n        }\r\n        let msg =\r\n            \"Integer expected at row: \" +\r\n            token.row +\r\n            \" col: \" +\r\n            token.column +\r\n            \" but found '\" +\r\n            token.value +\r\n            \"'\";\r\n        \" in\" + tokens.map((t) => t.value).join(\"\");\r\n        // error(msg, token);\r\n        error({\r\n            row,\r\n            col: token.column,\r\n            msg: msg,\r\n            raw: tokens.map((t) => t.value).join(\"\"),\r\n            params: [],\r\n        });\r\n        return index;\r\n    }\r\n    function checkParam(line) {\r\n        let current = 0;\r\n        for (let i = 0; i < line.length; i++) {\r\n            let token = line[i];\r\n            // console.log({token})\r\n            if (token.type === LPAREN) {\r\n                i = eatLeft(line, i, current);\r\n                i = eatNumber(line, i, current);\r\n                i = eatRight(line, i, current);\r\n            } else if (token.type === RPAREN) {\r\n                // No opening parenthesis\r\n                let msg =\r\n                    \"'}' at \" +\r\n                    token.row +\r\n                    \" col: \" +\r\n                    token.column +\r\n                    \" has no matching opening parenthesis \";\r\n\r\n                // error(msg, token);\r\n                error({\r\n                    row,\r\n                    col: token.column,\r\n                    msg: msg,\r\n                    raw: line.map((v) => v.value).join(\"\"),\r\n                    params: [],\r\n                });\r\n            }\r\n        }\r\n    }\r\n    function tokenize(text) {\r\n        let tokenizer = new Tokenizer();\r\n        let raw = tokenizer.tokenize(text);\r\n        let tokens = transform(raw);\r\n        return tokens;\r\n    }\r\n    function parseLine(line, formattedLine, row) {\r\n        let tokens = tokenize(line);\r\n\r\n        let assign = tokens.find((t) => t.type === COLON || t.type === EQ);\r\n        // console.log(assign.column, formattedLine.length);\r\n        if (!assign) {\r\n            error({\r\n                row,\r\n                col: tokens[0].column,\r\n                msg: formattedLine + \" is not assigned\",\r\n                raw: formattedLine,\r\n                params: [],\r\n            });\r\n        } else if (assign.column === 0) {\r\n            error({\r\n                row,\r\n                col: assign.column,\r\n                msg: \"No data key at row \" + row,\r\n                raw: formattedLine,\r\n                params: [],\r\n            });\r\n        } else if (assign.column >= formattedLine.length - 1) {\r\n            error({\r\n                row,\r\n                col: assign.column,\r\n                msg: \"No data value at row \" + row,\r\n                raw: formattedLine,\r\n                params: [],\r\n            });\r\n        }\r\n        // let assignIndex = tokens.indexOf(\":\");\r\n        // if (assignIndex < 0) assignIndex = tokens.indexOf(\"=\");\r\n        // let lineParts = line.split(\":\");\r\n        let leftTokens = tokens.filter((t) => t.column <= assign.column); // substring(0, assignIndex); // lineParts[0];\r\n        checkParam(leftTokens);\r\n\r\n        let rightTokens = tokens.filter((t) => t.column >= assign.column);\r\n        checkParam(rightTokens);\r\n\r\n        const key = leftTokens.map((token) => token.value).join(\"\");\r\n        if (data[key]) {\r\n            error({\r\n                row,\r\n                col: token.column,\r\n                msg:\r\n                    \"Cannot add data key '\" +\r\n                    key +\r\n                    \"' because it already exists\",\r\n                raw: formattedLine,\r\n                params: [key],\r\n            });\r\n        }\r\n        const value = rightTokens.map((token) => token.value).join(\"\");\r\n        data[key] = value.trim();\r\n    }\r\n    function parse(text) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                data = {};\r\n                errors = [];\r\n                const lines = text.split(\"\\n\");\r\n                if (lines.length === 0) return;\r\n                for (let row = 0; row < lines.length; row++) {\r\n                    let line = lines[row];\r\n                    let formattedLine = line.trim();\r\n                    if (formattedLine.length === 0) continue;\r\n                    if (formattedLine.indexOf(\"//\") === 0) continue;\r\n                    try {\r\n                        parseLine(line, formattedLine, row);\r\n                    } catch (e) {\r\n                        console.log(e.message);\r\n                    }\r\n                }\r\n                resolve(errors);\r\n            }, 0);\r\n        });\r\n    }\r\n    function compile(text) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(async () => {\r\n                await this.parse(text);\r\n                // this.emit(\"data\", { errors: errors, data: this.data });\r\n                // data.languageModule = languageModule;\r\n                resolve(data);\r\n            }, 0);\r\n        });\r\n    }\r\n    return {\r\n        data,\r\n        errors,\r\n        parse,\r\n        compile,\r\n        test: function () {\r\n            this.compile(editText).then((data) => {\r\n                console.log({ data, errors });\r\n            });\r\n        },\r\n    };\r\n}\r\n// ResourceParser(\"en\", []).test();\r\nexport default ResourceParser;\r\n","import Constants from \"./Constants\"\r\n\r\nconst MAX_CHARS = 256\r\n\r\nexport default class Prompt {\r\n  constructor (name) {\r\n    // this.code = 200\r\n    this.Line = null\r\n    this.Index = 0\r\n    this.Label = 'Prompt'\r\n    this.Fired = false\r\n    this.Name = name\r\n    this.Question = null\r\n    this.CFMode = false\r\n    this.Type = Constants.NUMBER\r\n    this.Menu = []\r\n    this.Min = null// = (Number.MIN_VALUE);\r\n    this.Max = null// = (Number.MAX_VALUE);\r\n  }\r\n}\r\n\r\n/* export function normalize(prompt) {\r\n  switch (prompt.Type) {\r\n    case Constants.MENU:\r\n      if (!prompt.Max) prompt.Max = prompt.Menu.length\r\n      if (!prompt.Min) prompt.Min = 1\r\n      prompt.Min = prompt.Min < 1 ? 1 : prompt.Min\r\n      prompt.Max =\r\n        prompt.Max > prompt.Menu.length ? prompt.Menu.length : prompt.Max\r\n      //delete MAX_CHARS // MAX_CHARS=null;\r\n      if (!prompt.Max) prompt.Max = 1\r\n      break\r\n    case Constants.TEXT:\r\n    case Constants.VALUE:\r\n      if (!prompt.Max) prompt.Max = MAX_CHARS\r\n      if (!prompt.Min) prompt.Min = 1\r\n      prompt.Min = prompt.Min < 1 ? 1 : prompt.Min\r\n      prompt.Max =\r\n        prompt.Max > MAX_CHARS ? MAX_CHARS : prompt.Max\r\n      break\r\n    case Constants.TF:\r\n    case Constants.YN:\r\n      prompt.Min = 1\r\n      prompt.Max = 1\r\n      //delete MAX_CHARS // MAX_CHARS=null;\r\n      break\r\n    default:\r\n      if (!prompt.Max) prompt.Max = Number.MAX_VALUE\r\n      if (!prompt.Min) prompt.Min = Number.MIN_VALUE\r\n      prompt.Min =\r\n        prompt.Min < Number.MIN_VALUE ? Number.MIN_VALUE : prompt.Min\r\n      prompt.Max =\r\n        prompt.Max > Number.MAX_VALUE ? Number.MAX_VALUE : prompt.Max\r\n\r\n      //delete MAX_CHARS // p.MAX_CHARS=0;\r\n      break\r\n  }\r\n // delete prompt.__proto__\r\n}*/\r\n","export default class Attribute {\r\n  constructor (name) {\r\n    this.Name = name\r\n    this.Line = 0\r\n    this.CF = 100\r\n    this.Value = null\r\n  }\r\n}\r\n","import Attribute from './Attribute'\r\nexport default class Inference extends Attribute {\r\n  constructor (name) {\r\n    super(name)\r\n    this.Action = null\r\n  }\r\n}\r\n","\r\nimport Attribute from './Attribute'\r\nexport default class Goal extends Attribute {\r\n  constructor (name) {\r\n    super(name)\r\n  }\r\n}\r\n\r\n","export default class Condition {\r\n  constructor () {\r\n    this.Inferences = []\r\n    this.Confidences = []\r\n    this.Premises = []\r\n    this.isMet = false\r\n  }\r\n  static getCF (condition) {\r\n    let cf = 100\r\n    condition.confidences.forEach((v) => {\r\n      cf = (v / 100) * cf\r\n    })\r\n    return cf\r\n  }\r\n}\r\n","export default class Statement {\r\n  constructor (lineIndex) {\r\n    this.line = lineIndex || 0\r\n    this.Index = 0\r\n    this.Keyword = null\r\n    this.Left = null\r\n    this.Right = null\r\n    this.Comparator = null\r\n  }\r\n}\r\n","const characters = ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J']\r\n\r\nexport default class Menu {\r\n  constructor (index, name, value) {\r\n    this.Index = index\r\n    this.Name = name\r\n    this.Value = value\r\n    this.Letter = characters[index]\r\n    // this.Text=displayText||value;\r\n    this.Line = 0\r\n  }\r\n}\r\n","export default class Rule {\r\n  constructor (name) {\r\n    this.Name = name\r\n    this.Fired = false\r\n    this.Texts = []\r\n    this.Line = 0\r\n    this.Index = 0\r\n    this.AltInferences = []\r\n    this.Conditions = []\r\n  }\r\n  addLine (line) {\r\n    this.Texts.push(line)\r\n  }\r\n}\r\n","import Parser from \"./DefaultParser\";\r\nimport pubsub from \"./EventPubSub\";\r\nimport { YN, TF, ATTR, NUMBER, MENU, TEXT, YES, NO } from \"./TokenConstants\";\r\nimport Prompt from \"./Prompt\";\r\nimport Attribute from \"./Attribute\";\r\nimport Inference from \"./Inference\";\r\nimport Goal from \"./Goal\";\r\nimport Condition from \"./Condition\";\r\nimport Expression from \"./Expression\";\r\nimport Menu from \"./Menu\";\r\nimport Rule from \"./Rule\";\r\n\r\nexport default class KnowledgebaseCompiler extends Parser {\r\n    /**\r\n     * Constructor\r\n     * @param {String} language User language [en, fr, es, nl, de, po, ru]\r\n     */\r\n    constructor(language, languageModule) {\r\n        super(language, languageModule);\r\n        this.language = language;\r\n        this.languageModule = languageModule;\r\n        this.keywords = this.languageModule.keywords;\r\n        this.title = \"\";\r\n        this.summary = \"\";\r\n        this.delimiter = \" \";\r\n        this.activePrompt = null;\r\n        this.arrays = {};\r\n        this.objects = {};\r\n        this.goals = {};\r\n        this.prompts = {};\r\n        this.attributes = {};\r\n        this.firedRules = {};\r\n        this.answers = [];\r\n        this.rules = [];\r\n        this.subscriptions = [];\r\n        this.attachListeners();\r\n    }\r\n    subscribe(topic, listener) {\r\n        this.subscriptions.push(pubsub.subscribe(topic, listener));\r\n    }\r\n    unsubscribe() {\r\n        this.subscriptions.forEach((subscription) => subscription.remove());\r\n    }\r\n    attachListeners() {\r\n        this.subscribe(\"rule\", (data) => this.addRule(data[0], data[1]));\r\n        this.subscribe(\"inference\", (data) => {\r\n            let [name, right, alt, row] = data;\r\n            this.addInference(name.value, right, alt, row);\r\n        });\r\n        this.subscribe(\"premise\", (data) => {\r\n            let [keyword, left, right, row, op] = data;\r\n            return this.addPremise(keyword, left, right, op, row);\r\n        });\r\n        this.subscribe(\"condition\", (data) => {\r\n            let [keyword, left, right, row, op] = data;\r\n            return this.addCondition(\r\n                keyword,\r\n                left,\r\n                right,\r\n                op,\r\n                row\r\n                // data[0], data[1][0], data[1][1], data[1][2], data[2],\r\n            );\r\n        });\r\n        this.subscribe(\"prompt\", (data) => this.addPrompt(data[0], data[1]));\r\n        this.subscribe(\"question\", (data) =>\r\n            this.addQuestion(data[0], data[1])\r\n        );\r\n        this.subscribe(\"menu\", (data) => this.addMenu(data[0], data[1]));\r\n        this.subscribe(\"digit\", (data) => this.addNumber(data[0]));\r\n        this.subscribe(\"text\", (data) => this.addText(data[0]));\r\n        this.subscribe(\"yes-no\", (data) => this.addYesNo(data[0]));\r\n        this.subscribe(\"true-false\", (data) => this.addTrueFalse(data[0]));\r\n        this.subscribe(\"min\", (data) => this.setMin(data[0], data[1]));\r\n        this.subscribe(\"max\", (data) => this.setMax(data[0], data[1]));\r\n        this.subscribe(\"cf\", () => this.setPromptCFMode());\r\n\r\n        this.subscribe(\"attribute\", (data) => {\r\n            return this.setAttribute(data[0][0], data[0][1], data[1]);\r\n        });\r\n        this.subscribe(\"goal\", (data) => this.addGoal(data[0], data[1]));\r\n        this.subscribe(\"title\", (data) => this.setTitle(data[0], data[1]));\r\n        this.subscribe(\"summary\", (data) => this.setSummary(data[0], data[1]));\r\n        this.subscribe(\"line\", () => this.addNewLine());\r\n        this.subscribe(\"done\", (data) => {\r\n            this.unsubscribe();\r\n        });\r\n        // event.on('eof',this.eof);\r\n        // event.on('syntax-error',this.addText);\r\n        // event.on('char-error',this.addText);\r\n        // event.on('error',this.addText);\r\n        // event.on('warning',this.addText);\r\n        // event.on('info',this.addText);\r\n    }\r\n    get Data() {\r\n        return {\r\n            language: this.language,\r\n            // keywords: this.keywords,\r\n            languageModule: this.languageModule,\r\n            line: 0,\r\n            promptIndex: 1,\r\n            ruleIndex: 0,\r\n            title: this.title,\r\n            summary: this.summary,\r\n            delimiter: this.delimiter,\r\n            arrays: this.arrays,\r\n            objects: this.objects,\r\n            goals: this.goals,\r\n            prompts: this.prompts,\r\n            attributes: this.attributes,\r\n            firedRules: this.firedRules,\r\n            answers: this.answers,\r\n            rules: this.rules,\r\n        };\r\n    }\r\n    get Keywords() {\r\n        return this.keywords;\r\n    }\r\n    get Rules() {\r\n        return this.rules;\r\n    }\r\n\r\n    /* get Delimeters () {\r\n      return /Math\\.[a-z]+|Math\\.(E|PI)/\r\n    }*/\r\n    get ActiveRule() {\r\n        return this.rules[this.rules.length - 1];\r\n    }\r\n    get ActiveCondition() {\r\n        let R = this.ActiveRule;\r\n        let condition = R.Conditions[R.Conditions.length - 1];\r\n        return condition;\r\n    }\r\n    get ActivePrompt() {\r\n        return this.activePrompt;\r\n    }\r\n    set ActivePrompt(p) {\r\n        this.activePrompt = p;\r\n    }\r\n    setTitle(text) {\r\n        this.title = text;\r\n    }\r\n    setSummary(text) {\r\n        this.summary = text;\r\n    }\r\n\r\n    // Public Methods\r\n    setMin(value) {\r\n        if (this.ActivePrompt.Type === YN || this.ActivePrompt.Type === TF) {\r\n            value = 1;\r\n        }\r\n        this.prompts[this.ActivePrompt.Name].Min = this.ActivePrompt.Min =\r\n            value.value || value;\r\n    }\r\n    setMax(value) {\r\n        if (this.ActivePrompt.Type === YN || this.ActivePrompt.Type === TF) {\r\n            value = 1;\r\n        }\r\n        this.prompts[this.ActivePrompt.Name].Max = this.ActivePrompt.Max =\r\n            value.value || value;\r\n    }\r\n\r\n    setPromptType(type) {\r\n        this.ActivePrompt.Type = type;\r\n    }\r\n    addText() {\r\n        this.setPromptType(TEXT);\r\n    }\r\n    addNumber() {\r\n        this.setPromptType(NUMBER);\r\n    }\r\n    addMenu(values) {\r\n        // let menus = values;\r\n        this.ActivePrompt.Menu = [];\r\n        let index = 1;\r\n        values.forEach((value) => {\r\n            const M = new Menu(\r\n                index, // index\r\n                value, // name\r\n                value // value\r\n            );\r\n            this.ActivePrompt.Menu.push(M);\r\n            index++;\r\n        });\r\n        this.setPromptType(MENU);\r\n    }\r\n    addTrueFalse() {\r\n        // let menus = values;\r\n        this.ActivePrompt.Menu = [];\r\n        let index = 0;\r\n        const values = [true, false];\r\n        values.forEach((value) => {\r\n            const M = new Menu(\r\n                index, // index\r\n                value, // name\r\n                value // value\r\n                // value   //display text\r\n            );\r\n            this.ActivePrompt.Menu.push(M);\r\n            index++;\r\n        });\r\n        this.ActivePrompt.Type = TF;\r\n        this.setMin(1);\r\n        this.setMax(1);\r\n    }\r\n    addYesNo() {\r\n        // let menus = values;\r\n        this.ActivePrompt.Menu = [];\r\n        let index = 0;\r\n        const values = [this.keywords[YES], this.keywords[NO]];\r\n        values.forEach((value) => {\r\n            const M = new Menu(\r\n                index, // index\r\n                value, // name\r\n                value // value\r\n                // value   //display text\r\n            );\r\n            this.ActivePrompt.Menu.push(M);\r\n            index++;\r\n        });\r\n        this.ActivePrompt.Type = YN;\r\n        this.setMin(1);\r\n        this.setMax(1);\r\n    }\r\n    addQuestion(text) {\r\n        this.ActivePrompt.Question = text;\r\n    }\r\n    addPrompt(name, line) {\r\n        const prompt = new Prompt(name.toLowerCase());\r\n        prompt.Line = line;\r\n        this.prompts[prompt.Name] = this.activePrompt = prompt;\r\n        // this.addAttribute( p.Name);\r\n    }\r\n    setAttribute(name, value, line) {\r\n        const a = this.addAttribute(name.toLowerCase(), line);\r\n        a.Value = value;\r\n    }\r\n    addAttribute(name, line) {\r\n        // if ( !name ) return null\r\n        let a = this.attributes[name.toLowerCase()];\r\n        if (a) {\r\n            return a;\r\n        }\r\n        this.attributes[name.toLowerCase()] = a = new Attribute(\r\n            name.toLowerCase()\r\n        );\r\n        a.Line = line;\r\n        // this.attributes[a.Name] = a\r\n        return a;\r\n    }\r\n\r\n    addInference(name, value, alternative, line) {\r\n        const inf = new Inference(name);\r\n        inf.Value = value; // ( value && value.value ) ? value : [{ type: 'TRUE', value: true }]\r\n        inf.Line = line;\r\n\r\n        if (alternative) {\r\n            // this.R.AltInferences.push(inf)\r\n            this.ActiveRule.AltInferences.push(inf);\r\n        } else {\r\n            this.ActiveCondition.Inferences.push(inf);\r\n            // this.condition.Inferences.push( inf )\r\n        }\r\n        this.addAttribute(name, inf.Line);\r\n    }\r\n    addPremise(keyword, left, right, op, line) {\r\n        const E = new Expression(line);\r\n        E.Left = left;\r\n        E.Right = right;\r\n        E.Comparator = op;\r\n        E.Keyword = keyword;\r\n        E.Line = line;\r\n        // this.condition.Premises.push(s)\r\n        this.ActiveCondition.Premises.push(E);\r\n\r\n        left.forEach((token) => {\r\n            if (token && token.type === ATTR) {\r\n                this.addAttribute(token.value, line);\r\n            }\r\n        });\r\n        right.forEach((token) => {\r\n            if (token && token.type === ATTR) {\r\n                this.addAttribute(token.value, line);\r\n            }\r\n        });\r\n    }\r\n    addCondition(keyword, left, right, op, line) {\r\n        const condition = new Condition();\r\n        // this.condition = c\r\n        //this.R.Conditions.push(c)\r\n        this.ActiveRule.Conditions.push(condition);\r\n        this.addPremise(keyword, left, right, op, line);\r\n    }\r\n    addRule(name, line) {\r\n        const R = new Rule(name);\r\n        R.Line = line;\r\n        this.rules.push(R);\r\n    }\r\n\r\n    addGoal(name, line) {\r\n        const G = new Goal(name.toLowerCase());\r\n        G.Line = line;\r\n        this.goals[G.Name] = G;\r\n    }\r\n    setPromptCFMode() {\r\n        this.ActivePrompt.CFMode = true;\r\n    }\r\n    addObject(name, value) {\r\n        this.objects[name.toLowerCase()] = value;\r\n    }\r\n    addArray(name, value) {\r\n        this.arrays[name.tolowerCase()] = value;\r\n    }\r\n    setGoalCF(name, value) {\r\n        this.goals[name.toLowerCase()].CF = value;\r\n    }\r\n    addNewLine() {\r\n        // do nothing\r\n    }\r\n    /**\r\n     *\r\n     * @param { String } text Pruduction rules in plain text\r\n     * @returns { Promise<Object> } Knowledgebase Data\r\n     */\r\n    compile(text) {\r\n        return new Promise(async (resolve, reject) => {\r\n            // let knowledgebase = new Knowledgebase(this);\r\n            const errors = await this.parse(text);\r\n            pubsub.publish(\"done-compile-knowledgebase-data\", {\r\n                errors: this.errors,\r\n                data: this.Data,\r\n            });\r\n            resolve({ errors, data: this.Data });\r\n        });\r\n    }\r\n}\r\n","import DefaultParser from \"./DefaultParser\";\r\nimport ResourceParser from \"./ResourceParser\";\r\nimport Compiler from \"./KnowledgeBaseCompiler\";\r\nconst defaults = { lang: \"en\", mode: \"ace/mode/kbf\" };\r\n\r\nexport default class ParserFactory {\r\n    static createParser(language, languageModule, mode = defaults.mode) {\r\n        // const ext = mode && mode.substring(mode.indexOf(\".\") + 1);\r\n        switch (mode) {\r\n            case \"ace/mode/res\":\r\n                return new ResourceParser(language, languageModule);\r\n            case \"ace/mode/kbf\":\r\n                return new DefaultParser(language, languageModule);\r\n            default:\r\n                throw new Error(\"No parser for current mode: \" + mode);\r\n        }\r\n    }\r\n    static createCompiler(language, languageModule, mode = defaults.mode) {\r\n        // console.log({ language, languageModule, mode });\r\n        switch (mode) {\r\n            case \"ace/mode/res\":\r\n                return new ResourceParser(language, languageModule);\r\n            // throw new Error(\"Compiler for this Mode is not yet supported\");\r\n            case \"ace/mode/kbf\":\r\n                return new Compiler(language, languageModule);\r\n            default:\r\n                throw new Error(\"No compiler for current mode: \" + mode);\r\n        }\r\n    }\r\n}\r\n","import Engine from \"./core/InferenceEngine\";\r\nimport inputValidator from \"./core/InputValidator\"; // Validation\r\nimport Translator from \"./core/Translator\";\r\nimport choice from \"./core/MultipleChoice\";\r\nimport languageModules from \"./core/LanguageModules\";\r\nimport ErrorKeys from \"./translation/ErrorKeys\";\r\nimport CustomErrors from \"./core/CustomErrors\";\r\nimport installedLanguagePlugins from \"./plugins/languages\";\r\nimport ParserFactory from \"./core/ParserFactory\";\r\n\r\nfunction process(response) {\r\n    if (response) return response;\r\n    if (response.Label === \"Prompt\" || response.Label === \"CF\") {\r\n        //Prompting for input\r\n        return { type: \"prompt\", data: response };\r\n    } else if (response instanceof Array) {\r\n        //answers are ready\r\n        return { type: \"answers\", data: response };\r\n    } else {\r\n        return response;\r\n    }\r\n}\r\nfunction raiseValidationError(code, translator, systemLanguage) {\r\n    const err = CustomErrors(translator, systemLanguage).ValidationError(code);\r\n    return err;\r\n}\r\nfunction raiseSecurityError(key, translator, systemLanguage) {\r\n    const err = CustomErrors(translator, systemLanguage).SecurityError(key);\r\n    return err;\r\n}\r\nexport class Rules {\r\n    constructor(systemLanguage, mode = \"ace/mode/kbf\") {\r\n        this.systemLanguage = systemLanguage;\r\n        this.languageModule = languageModules[systemLanguage];\r\n\r\n        this.compiler = ParserFactory.createCompiler(\r\n            systemLanguage,\r\n            this.languageModule,\r\n            mode\r\n        );\r\n        this.parser = ParserFactory.createParser(\r\n            systemLanguage,\r\n            this.languageModule,\r\n            mode\r\n        );\r\n        this.translator = new Translator(systemLanguage, this.languageModule);\r\n        // InputValidator(systemLanguage, this.translator);\r\n    }\r\n    static registerLanguage(lang, data) {\r\n        if (!arguments) {\r\n            throw new Error(\"Language name required\");\r\n        }\r\n        if (typeof lang !== \"string\") {\r\n            throw new Error(\"Expected language code as first argument\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Expected language data as second argument\");\r\n        }\r\n        const language = lang.toLocaleLowerCase();\r\n        if (arguments.length < 2) {\r\n            throw new Error(\r\n                \"Two arguments expected: Language name and data are required\"\r\n            );\r\n        }\r\n        if (!data) {\r\n            throw new Error(\"Language data required\");\r\n        }\r\n        if (typeof language !== \"string\") {\r\n            throw new Error(\"Language name should be a String\");\r\n        }\r\n        if (language.length > 2) {\r\n            throw new Error(\"Language code should contain only two characters\");\r\n        }\r\n        if (!language.match(/[a-z][a-z]/)) {\r\n            throw new Error(\"Unknown character in language code\");\r\n        }\r\n        if (languageModules[language]) {\r\n            throw new Error(language + \" Language already installed\");\r\n        }\r\n        languageModules[language] = data;\r\n    }\r\n\r\n    static init(installLanguageModules) {\r\n        try {\r\n            installLanguageModules &&\r\n                installLanguageModules.forEach((l) => {\r\n                    const data = installedLanguagePlugins[l];\r\n                    if (data) {\r\n                        Rules.registerLanguage(l, data);\r\n                        console.log(\"Enabled language: \" + l);\r\n                    } else {\r\n                        console.error(\"Locale not installed: \" + l);\r\n                    }\r\n                });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    getKeywords() {\r\n        return this.languageModule.keywords;\r\n    }\r\n    async parse(codes) {\r\n        const errors = await this.parser.parse(codes);\r\n        return errors;\r\n    }\r\n    async compile(codes) {\r\n        const { errors, data } = await this.compiler.compile(codes);\r\n        return { errors, data };\r\n    }\r\n    run(freshData) {\r\n        if (!freshData) {\r\n            return raiseValidationError(\r\n                ErrorKeys.KnowledgebaseNotFound,\r\n                this.translator,\r\n                this.systemLanguage\r\n            );\r\n        }\r\n        let response = new Engine(freshData).run();\r\n        return response;\r\n        // return process(response);\r\n    }\r\n    reply(modifiedData, input) {\r\n        if (!modifiedData) {\r\n            return raiseValidationError(\r\n                ErrorKeys.KnowledgebaseNotFound,\r\n                this.translator,\r\n                this.systemLanguage\r\n            );\r\n        }\r\n        if (!input || input.toString().trim().length === 0) {\r\n            return raiseValidationError(\r\n                ErrorKeys.NoInput,\r\n                this.translator,\r\n                this.systemLanguage\r\n            );\r\n        }\r\n        let response = new Engine(\r\n            modifiedData,\r\n            this.translator,\r\n            this.validator\r\n        ).input(input);\r\n        return process(response);\r\n    }\r\n    validate(input, prompt) {\r\n        return inputValidator.validate(input, prompt);\r\n    }\r\n    choice(input, prompt) {\r\n        return choice(input, prompt, this.systemLanguage);\r\n    }\r\n    translate(code, to) {\r\n        return this.translator.translate(code, to);\r\n    }\r\n    translatePlain(text, to, from) {\r\n        return this.translator.translatePlain(text, to, from);\r\n    }\r\n}\r\nexport default Rules;\r\n","export default class CustomEvent {\r\n    constructor() {\r\n        this.topics = {};\r\n        // this.hOP = topics.hasOwnProperty\r\n    }\r\n    on(topic, listener) {\r\n        // Create the topic's object if not yet created\r\n        if (!this.topics.hasOwnProperty.call(this.topics, topic))\r\n            this.topics[topic] = [];\r\n\r\n        // Add the listener to queue\r\n        let index = this.topics[topic].push(listener) - 1;\r\n        let _this = this;\r\n        // Provide handle back for removal of topic\r\n        return {\r\n            remove: function () {\r\n                //delete topics[topic][index]\r\n                _this.topics[topic].splice(index, 1);\r\n            },\r\n        };\r\n    }\r\n    remove(topic, listener) {\r\n        // Create the topic's object if not yet created\r\n        if (this.topics.hasOwnProperty.call(this.topics, topic)) {\r\n            // Add the listener to queue\r\n            let index = this.topics[topic];\r\n            //delete topics[topic][index]\r\n            this.topics[topic].splice(index, 1);\r\n        }\r\n    }\r\n    off(topic, listener) {\r\n        this.remove(topic, listener);\r\n    }\r\n    trigger(topic, info) {\r\n        // If the topic doesn't exist, or there's no listeners in queue, just leave\r\n        if (!this.topics.hasOwnProperty.call(this.topics, topic)) return;\r\n\r\n        // Cycle through topics queue, fire!\r\n        this.topics[topic].forEach((item) => {\r\n            item(info != undefined ? info : {});\r\n        });\r\n    }\r\n    emit(topic, info) {\r\n        this.trigger(topic, info);\r\n    }\r\n    fire(topic, info) {\r\n        this.trigger(topic, info);\r\n    }\r\n    publish(topic, info) {\r\n        this.trigger(topic, info);\r\n    }\r\n    destroy() {\r\n        Object.keys(this.topics).forEach((topic) => {\r\n            let topics = this.topics[topic];\r\n            while (topics.length > 0) {\r\n                topics.pop();\r\n            }\r\n        });\r\n        delete this.topics;\r\n    }\r\n}\r\n","\r\nexport function loadStyle (href, callback) {\r\n    // avoid duplicates\r\n    for (var i = 0; i < document.styleSheets.length; i++) {\r\n        if (document.styleSheets[i].href && document.styleSheets[i].href == href) {\r\n            return\r\n        }\r\n    }\r\n    var head = document.getElementsByTagName(\"head\")[0]\r\n    var link = document.createElement(\"link\")\r\n    link.rel = \"stylesheet\"\r\n    link.type = \"text/css\"\r\n    link.href = href\r\n    if (callback) {\r\n        link.onload = function () {\r\n            callback()\r\n        }\r\n    }\r\n    head.appendChild(link)\r\n}\r\n\r\nexport function toggleStylesheet (href, onoff) {\r\n    var existingNode = 0 //get existing stylesheet node if it already exists:\r\n    for (var i = 0; i < document.styleSheets.length; i++) {\r\n        if (\r\n            document.styleSheets[i].href &&\r\n            document.styleSheets[i].href.indexOf(href) > -1\r\n        )\r\n            existingNode = document.styleSheets[i].ownerNode\r\n    }\r\n    if (onoff == undefined) onoff = !existingNode //toggle on or off if undefined\r\n    if (onoff) {\r\n        //TURN ON:\r\n        if (existingNode) return onoff //already exists so cancel now\r\n        var link = document.createElement(\"link\")\r\n        link.rel = \"stylesheet\"\r\n        link.type = \"text/css\"\r\n        link.href = href\r\n        document.getElementsByTagName(\"head\")[0].appendChild(link)\r\n    } else {\r\n        //TURN OFF:\r\n        if (existingNode) existingNode.parentNode.removeChild(existingNode)\r\n    }\r\n    return onoff\r\n}\r\n\r\nexport function attachCSS (css, id, name, toggle = false) {\r\n    if (id) {\r\n        for (var i = 0; i < document.styleSheets.length; i++) {\r\n            if (document.styleSheets[i].id === id) {\r\n                if (!toggle) {\r\n                    return null\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (toggle) {\r\n        if (document.getElementById(id)) {\r\n            document.head.removeChild(document.getElementById(id))\r\n            return\r\n        }\r\n    }\r\n    var head = document.head\r\n    var link = document.createElement(\"style\")\r\n    link.setAttribute('id', id || Math.random().slice(2).toString(36))\r\n    link.setAttribute('name', name || 'css')\r\n\r\n    link.type = \"text/css\"\r\n    link.rel = \"stylesheet\"\r\n    link.innerHTML = css\r\n\r\n    head.appendChild(link)\r\n    return id\r\n}\r\nexport const dynamicStyleSheet = function () {\r\n    // Create the <style> tag\r\n    var style = document.createElement('style')\r\n\r\n    // Add a media (and/or media query) here if you'd like!\r\n    // style.setAttribute('media', 'screen')\r\n    // style.setAttribute('media', 'only screen and (max-width : 1024px)')\r\n\r\n    // WebKit hack :(\r\n    style.appendChild(document.createTextNode(''))\r\n\r\n    // Add the <style> element to the page\r\n    document.head.appendChild(style)\r\n\r\n    return style.sheet\r\n}\r\n\r\n// Usage\r\n// var sheet = DynamicStyleSheet()\r\n// sheet.insertRule(\"header { float: left; opacity: 0.8; }\", 1);\r\n\r\n// Replacing default console.log with syntax highlighting substitute \r\n// const probe = require('console-probe')\r\n// let data = {count:100000}\r\n// const prober = probe.get()\r\n// console.log = prober\r\n// prober(data)\r\n\r\n// collaboration\r\n// <script src=\"https://togetherjs.com/togetherjs-min.js\"></script>\r\n// <button onclick=\"TogetherJS(this); return false;\">Start TogetherJS</button>","import { attachCSS } from './css.js'\r\n\r\nexport default class Clipboard {\r\n  /**\r\n   * Constructor\r\n   * @param {String} selector The query selector for element(s) to attach event: \r\n   * should be in format #xxx or .xxx\r\n   */\r\n  constructor (selector) {\r\n    const styles = `\r\n      ${selector}:before {\r\n        content: '';\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 9998;\r\n        top: 35px;\r\n        left: 15px;\r\n        width: 0;\r\n        height: 0;\r\n        border-left: 5px solid transparent;\r\n        border-right: 5px solid transparent;\r\n        border-bottom: 5px solid rgba(0, 0, 0, .72);\r\n      }\r\n      ${selector}:after {\r\n        content: 'Copy to Clipboard';\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 9999;\r\n        top: 40px;\r\n        right: 1px;\r\n        width: 114px;\r\n        height: 36px;\r\n        color: #fff;\r\n        font-size: 10px;\r\n        line-height: 36px;\r\n        text-align: center;\r\n        background: #111;\r\n        background: rgba(0, 0, 0, .72);\r\n        border-radius: 3px;\r\n      }\r\n      ${selector}:hover:before, \r\n      ${selector}:hover:after {\r\n        display: block;\r\n      }\r\n      ${selector}:active, \r\n      ${selector}:focus {\r\n          outline: none;\r\n      }\r\n      ${selector}:active:after, \r\n      ${selector}:focus:after {\r\n          content: 'Copied!';\r\n      }`\r\n    attachCSS(styles, 'clipboard_css', 'clipboard-css')\r\n  }\r\n  copyToClipboard (str) {\r\n    const el = document.createElement('textarea')  // Create a <textarea> element\r\n    el.value = str                                 // Set its value to the string that you want copied\r\n    el.setAttribute('readonly', '')                // Make it readonly to be tamper-proof\r\n    el.style.position = 'absolute'\r\n    el.style.left = '-9999px'                      // Move outside the screen to make it invisible\r\n    document.body.appendChild(el)                  // Append the <textarea> element to the HTML document\r\n    const selected =\r\n      document.getSelection().rangeCount > 0     // Check if there is any content selected previously\r\n        ? document.getSelection().getRangeAt(0)// Store selection if found\r\n        : false                                // Mark as false to know no selection existed before\r\n    el.select()                                    // Select the <textarea> content\r\n    document.execCommand('copy')                   // Copy - only works as a result of a user action (e.g. click events)\r\n    document.body.removeChild(el)                  // Remove the <textarea> element\r\n    if (selected) {                                // If a selection existed before copying\r\n      document.getSelection().removeAllRanges()  // Unselect everything on the HTML document\r\n      document.getSelection().addRange(selected) // Restore the original selection\r\n    }\r\n  }\r\n}\r\n","// import { attachCSS } from './css.js'\r\n// const options = {}\r\nimport Clipboard from './clipboard.js'\r\nexport default class PrintButton {\r\n  constructor (color, source, options) {\r\n    this.color = color\r\n    this.source = source\r\n    this.winOptions = 'resizable=yes,scrollbars=yes,left=0,top=0,width=960,height=450'\r\n    this.openSvg = `\r\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 18 18\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n        <!-- Generator: Sketch 52.5 (67469) - http://www.bohemiancoding.com/sketch -->\r\n        <title>open in new window</title>\r\n        <desc>Created with Sketch.</desc>\r\n        <g id=\"Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n            <g id=\"Two-Tone\" transform=\"translate(-647.000000, -333.000000)\">\r\n                <g id=\"Action\" transform=\"translate(100.000000, 100.000000)\">\r\n                    <g id=\"Two-Tone-/-Action-/-open_in_new\" transform=\"translate(544.000000, 230.000000)\">\r\n                        <g>\r\n                            <polygon id=\"Path\" points=\"0 0 24 0 24 24 0 24\"></polygon>\r\n                            <path d=\"M19,19 L5,19 L5,5 L12,5 L12,3 L5,3 C3.89,3 3,3.9 3,5 L3,19 C3,20.1 3.89,21 5,21 L19,21 C20.1,21 21,20.1 21,19 L21,12 L19,12 L19,19 Z M14,3 L14,5 L17.59,5 L7.76,14.83 L9.17,16.24 L19,6.41 L19,10 L21,10 L21,3 L14,3 Z\" id=\"🔹-Primary-Color\" fill=\"${this.color}\"></path>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </g>\r\n    </svg>`\r\n\r\n    this.printSvg = `\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\r\n    <!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n      width=\"16px\" height=\"16px\" viewBox=\"0 0 212.795 220.59\" enable-background=\"new 0 0 212.795 220.59\"\r\n        xml:space=\"preserve\">\r\n        <title>Print out</title>\r\n    <path fill=\"${this.color}\" d=\"M189.209,175.581h-27.186c-1.104,0-2-0.896-2-2v-29.808H55.505v29.808c0,1.104-0.895,2-2,2H26.094\r\n      c-5.101,0-9.25-4.148-9.25-9.249v-67.82c0-5.101,4.149-9.25,9.25-9.25h163.116c5.101,0,9.25,4.149,9.25,9.25v67.82\r\n      C198.459,171.432,194.311,175.581,189.209,175.581 M164.023,171.581h25.186c2.895,0,5.25-2.354,5.25-5.249v-67.82\r\n      c0-2.895-2.355-5.25-5.25-5.25H26.094c-2.895,0-5.25,2.355-5.25,5.25v67.82c0,2.896,2.355,5.249,5.25,5.249h25.412v-29.808\r\n      c0-1.104,0.896-2,2-2h108.518c1.104,0,2,0.896,2,2V171.581z\"/>\r\n    <path fill=\"${this.color}\" d=\"M53.279,93.261H34.702c-1.104,0-2-0.896-2-2V73.427c0-3.602,2.93-6.531,6.531-6.531h14.046\r\n      c1.105,0,2,0.896,2,2v22.365C55.279,92.366,54.384,93.261,53.279,93.261 M36.702,89.261h14.577V70.896H39.233\r\n      c-1.396,0-2.531,1.137-2.531,2.531V89.261z\"/>\r\n    <path fill=\"${this.color}\" d=\"M180.601,93.261h-18.577c-1.104,0-2-0.896-2-2V68.896c0-1.104,0.896-2,2-2h14.046\r\n      c3.601,0,6.531,2.93,6.531,6.531v17.834C182.601,92.366,181.706,93.261,180.601,93.261 M164.023,89.261h14.577V73.427\r\n      c0-1.395-1.135-2.531-2.531-2.531h-12.046V89.261z\"/>\r\n    <path fill=\"${this.color}\" d=\"M162.023,93.261H53.279c-1.104,0-2-0.896-2-2V8.951c0-1.104,0.896-2,2-2h88.581\r\n      c0.579,0,1.129,0.251,1.509,0.688l20.163,23.172c0.317,0.363,0.491,0.83,0.491,1.313v59.139\r\n      C164.023,92.366,163.128,93.261,162.023,93.261 M55.279,89.261h104.744V32.871l-19.074-21.92h-85.67V89.261z\"/>\r\n    <path fill=\"${this.color}\" d=\"M171.085,143.773H44.217c-1.105,0-2-0.896-2-2c0-1.104,0.895-2,2-2h126.868c1.104,0,2,0.896,2,2\r\n      C173.085,142.877,172.189,143.773,171.085,143.773\"/>\r\n    <path fill=\"${this.color}\" d=\"M162.023,214.757H53.506c-1.105,0-2-0.896-2-2v-70.984c0-1.104,0.895-2,2-2h108.517c1.105,0,2,0.896,2,2\r\n      v70.984C164.023,213.861,163.128,214.757,162.023,214.757 M55.506,210.757h104.518v-66.983H55.506V210.757z\"/>\r\n    <path fill=\"${this.color}\" d=\"M143.673,175.581H71.63c-1.104,0-2-0.896-2-2c0-1.104,0.896-2,2-2h72.043c1.104,0,2,0.896,2,2\r\n      C145.673,174.685,144.777,175.581,143.673,175.581\"/>\r\n    <path fill=\"${this.color}\" d=\"M143.673,157.457H71.63c-1.104,0-2-0.896-2-2c0-1.104,0.896-2,2-2h72.043c1.104,0,2,0.896,2,2\r\n      C145.673,156.561,144.777,157.457,143.673,157.457\"/>\r\n    <path fill=\"${this.color}\" d=\"M143.673,193.705H71.63c-1.104,0-2-0.896-2-2c0-1.104,0.896-2,2-2h72.043c1.104,0,2,0.896,2,2\r\n      C145.673,192.809,144.777,193.705,143.673,193.705\"/>\r\n    <path fill=\"${this.color}\" d=\"M47.955,115.681h-7.929c-4.038,0-7.324-3.285-7.324-7.324s3.286-7.324,7.324-7.324h7.929\r\n      c4.039,0,7.324,3.285,7.324,7.324S51.994,115.681,47.955,115.681 M40.026,105.033c-1.833,0-3.324,1.491-3.324,3.324\r\n      s1.491,3.324,3.324,3.324h7.929c1.833,0,3.324-1.491,3.324-3.324s-1.491-3.324-3.324-3.324H40.026z\"/>\r\n    <path fill=\"${this.color}\" d=\"M68.571,115.681c-4.038,0-7.324-3.285-7.324-7.324s3.286-7.324,7.324-7.324c4.039,0,7.324,3.285,7.324,7.324\r\n      S72.61,115.681,68.571,115.681 M68.571,105.033c-1.833,0-3.324,1.491-3.324,3.324s1.491,3.324,3.324,3.324s3.324-1.491,3.324-3.324\r\n      S70.404,105.033,68.571,105.033\"/>\r\n    </svg>`\r\n\r\n    this.copySvg = `\r\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> \r\n    <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 3C6 1.34315 7.34315 0 9 0H14C14.2652 0 14.5196 0.105357 14.7071 0.292893L21.7071 7.29289C21.8946 7.48043 22 7.73478 22 8V17C22 18.6569 20.6569 20 19 20H18V21C18 22.6569 16.6569 24 15 24H5C3.34315 24 2 22.6569 2 21V7C2 5.34315 3.34315 4 5 4H6V3ZM6 6H5C4.44772 6 4 6.44772 4 7V21C4 21.5523 4.44772 22 5 22H15C15.5523 22 16 21.5523 16 21V20H9C7.34315 20 6 18.6569 6 17V6ZM9 2C8.44772 2 8 2.44772 8 3V17C8 17.5523 8.44771 18 9 18H19C19.5523 18 20 17.5523 20 17V9H16C14.3431 9 13 7.65685 13 6V2H9ZM15 3.41421L18.5858 7H16C15.4477 7 15 6.55228 15 6V3.41421Z\" fill=\"${color}\"/>\r\n    </svg>`\r\n    \r\n    this.OpenButton = this.createButton(color, this.openSvg, options)\r\n    this.OpenButton.addEventListener('click', () => {\r\n        this.openInWindow()\r\n    })\r\n    this.PrintButton = this.createButton(color, this.printSvg, options)\r\n    this.PrintButton.addEventListener('click', () => {\r\n      this.printToPrinter()\r\n    })\r\n    this.ClipboardButton = this.createButton(color, this.copySvg, options)\r\n    this.ClipboardButton.classList.add('copy-to-clipboard-button')\r\n    this.clipboard = new Clipboard(\".copy-to-clipboard-button\")\r\n    this.ClipboardButton.addEventListener('click', () => {\r\n      this.clipboard.copyToClipboard(this.Text)\r\n    })\r\n  }\r\n  createButton (color, html, options = {}) {\r\n    const button = document.createElement('button')\r\n    button.style.width = options.width || '32px'\r\n    button.style.height = options.height || '32px'\r\n    button.style.color = color || 'white'\r\n    button.style.padding = 2 + 'px'\r\n    button.style.margin = 1 + 'px'\r\n    button.style.borderRadius = 2 + 'px'\r\n    button.style.background = options.background || 'transparent'\r\n    button.style.border = options.border || 'none'\r\n    button.style.cursor = 'pointer'\r\n    button.innerHTML = html\r\n    return button\r\n  }\r\n  get Html () {\r\n    return this.source.innerHTML\r\n  }\r\n  get Text () {\r\n    return this.source.innerText\r\n  }\r\n  openInWindow () {\r\n    try {\r\n      var printWindow = window.open('', '', this.winOptions)\r\n      let str = `\r\n        <html>\r\n            <head><title>Print Window</title></head>\r\n            <body>\r\n                <div  \r\n                    style=\"width:100%; \r\n                    padding:1rem 2rem; \r\n                    font-size:1.1rem;\r\n                    font-family: 'Courier New';\r\n                    letter-spacing: 1px;\r\n                \">\r\n                    ${this.Html}\r\n                </div>\r\n            </body>\r\n        </html>`\r\n      printWindow.document.writeln(str)\r\n      return printWindow\r\n    }\r\n    catch (ex) {\r\n      //alert(ex);\r\n      console.error('Error: ' + ex.message)\r\n    }\r\n  }\r\n  printToPrinter () {\r\n    try {\r\n      var printWindow = this.openInWindow()\r\n      printWindow.print()\r\n      printWindow.close()\r\n    }\r\n    catch (ex) {\r\n      //alert(ex);\r\n      console.error('Error: ' + ex.message)\r\n    }\r\n  }\r\n}\r\n","import PrintButton from './printbutton'\r\nexport default class Viewer {\r\n  /**\r\n   * \r\n   * @param {Object} view The HTML element to attach highlighter\r\n   * @param {String} title Name of the script language: default is kbf\r\n   */\r\n  constructor (view, container, title) {\r\n    if (!view || (!view.tagName && !document.getElementById(view))) {\r\n      console.error('Invalid Document Viewer Id', view)\r\n      return\r\n    }\r\n    if (!container || (!container.tagName && !document.getElementById(container))) {\r\n      console.error('Invalid Container Element Id', contaianer)\r\n      return\r\n    }\r\n    this.div = view.tagName ? view : document.getElementById(view)\r\n    this.container = container.tagName ? container : document.getElementById(container)\r\n    this.id = null\r\n    this.banner = null\r\n    this.title = title\r\n    this.color = view.style.color || container.style.color || 'green'\r\n    this.printButton = new PrintButton(this.color, this.div)\r\n    this.view()\r\n  }\r\n  get Text () {\r\n    return this.getContentBlock().innerText\r\n  }\r\n  get html () {\r\n    return this.getContentBlock().innerHTML\r\n  }\r\n \r\n  view () {\r\n    this.text = this.div.innerHTML\r\n    this.id = Math.random().toString(36).slice(2)\r\n    // let btn = new ToggleButton(null, 'ios')\r\n    let banner = document.createElement('div') \r\n    banner.setAttribute('id', `banner${this.id}`)\r\n    banner.style.float = 'right'\r\n    banner.append(this.printButton.ClipboardButton)\r\n    banner.append(this.printButton.OpenButton)\r\n    banner.append(this.printButton.PrintButton)\r\n    this.container.append(banner)\r\n  }\r\n  getContentBlock () {\r\n    return document.querySelector('.pr-display')\r\n  }\r\n}\r\n","/*jshint esversion: 6*/\r\nimport CustomEvent from \"../util/eventbus\";\r\nimport Rule from \"../Rules\";\r\nimport Viewer from \"../buttons/viewer.js\";\r\n// import de from '../plugins/language/de'\r\n\r\nexport default class Ux extends CustomEvent {\r\n    constructor(el, options = {}) {\r\n        super();\r\n        this.language = options.language || \"en\";\r\n        Rule.init([\"fr\", \"es\"]);\r\n        if (!el) throw \"Missing Element ID to attach UX\";\r\n        let node =\r\n            el instanceof HTMLElement\r\n                ? el\r\n                : typeof el === \"string\"\r\n                ? document.getElementById(el)\r\n                : el;\r\n        if (!node || !node instanceof HTMLElement) throw \"ID not a valid Node\";\r\n\r\n        this.el = node;\r\n        this.el.style.overflow = \"hidden\";\r\n\r\n        this.text = options.text || null;\r\n        this.data = null;\r\n        this.widgets = [];\r\n        this.prompt = {};\r\n        this.error = null;\r\n        this.display = null;\r\n        this.buttons = null;\r\n        this.container = null;\r\n        this.toolbar = null;\r\n        this.rules = new Rule(this.language, \"ace/mode/kbf\");\r\n        this.init();\r\n    }\r\n    get Text() {\r\n        return this.text;\r\n    }\r\n    set Text(text) {\r\n        this.text = text;\r\n    }\r\n    get URL() {\r\n        return this.url;\r\n    }\r\n    set URL(url) {\r\n        this.url = url;\r\n    }\r\n    async run(text) {\r\n        try {\r\n            this.text = text;\r\n            const { errors, data } = await this.rules.compile(text);\r\n\r\n            this.data = data;\r\n            this.errors = errors;\r\n            if (errors && errors.length > 0) {\r\n                return this.processParserErrors(errors);\r\n            }\r\n            this.start(data);\r\n        } catch (e) {\r\n            console.trace(e);\r\n            const response = {\r\n                name: \"ScriptError\",\r\n                code: \"ScriptError\",\r\n                message: e,\r\n            };\r\n            this.processError(response);\r\n        }\r\n    }\r\n    start(data) {\r\n        const response = this.rules.run(data);\r\n        this.process(response);\r\n    }\r\n    async repeat() {\r\n        await this.run(this.text);\r\n        // this.start()\r\n    }\r\n    reply(input) {\r\n        const response = this.rules.reply(this.data, input);\r\n        this.process(response);\r\n    }\r\n    send() {\r\n        if (!this.data) {\r\n            return console.info(\"No language defined in kb\", console.trace);\r\n        }\r\n        let msg = null;\r\n        if (this.prompt.Type === \"NUMBER\" || this.prompt.Type === \"TEXT\") {\r\n            msg = this.input.value;\r\n        } else {\r\n            msg = this.composeReply();\r\n        }\r\n        if (!msg) return;\r\n        this.setMargin();\r\n        this.input.value = \"\";\r\n        this.reply(msg);\r\n    }\r\n\r\n    why() {\r\n        //ps.publish( 'why' )\r\n    }\r\n    stop() {\r\n        //ps.publish( 'stop' )\r\n    }\r\n    explain() {\r\n        //ps.publish( 'explain' )\r\n    }\r\n    cancel() {\r\n        this.display.innerHTML = \"\";\r\n    }\r\n    print() {\r\n        let html = this.display.innerHTML;\r\n        let win = window.open(\"about:blank\", \"self\", \"width=600; height=450;\");\r\n        win.document.writeln(html);\r\n        win.print();\r\n        win.close();\r\n    }\r\n    copy() {}\r\n    process(response) {\r\n        // console.log({ response });\r\n        if (response.Label === \"Prompt\" || response.Label === \"CF\") {\r\n            //Prompting for input\r\n            return this.processPrompt(response);\r\n        } else if (response instanceof Array) {\r\n            //answers are ready\r\n            return this.processAnswers(response);\r\n        } else {\r\n            // console.log(response.name)\r\n            switch (response.name) {\r\n                case \"ValidationError\":\r\n                    return this.processValidationError(response);\r\n                case \"SyntaxError\":\r\n                    return this.processParserErrors(response);\r\n                case \"ScriptError\":\r\n                    return this.processError(response);\r\n                default:\r\n                    return this.processError(response);\r\n            }\r\n        }\r\n    }\r\n    attachScripts(scr, id, name) {\r\n        var head = document.body;\r\n        var link = document.createElement(\"script\");\r\n        link.type = \"text/javascript\";\r\n        link.id = id || Math.random().slice(2).toString(36);\r\n        link.name = name || \"script\" + link.id;\r\n        link.append(scr);\r\n        head.appendChild(link);\r\n    }\r\n    async init() {\r\n        this.el.classList.add(\"pr-parent\");\r\n        this.theme = \"dark\";\r\n        this.display = document.getElementById(\"console-display\");\r\n        this.input = document.getElementById(\"console-input\");\r\n        this.buttons = document.getElementById(\"console-btpanel\");\r\n        this.banner = document.getElementById(\"console-banner\");\r\n        this.toolbar = document.getElementById(\"console-toolbar\");\r\n\r\n        new Viewer(this.display, this.toolbar);\r\n        this.input.focus();\r\n        this.container = document.getElementById(\"console-container\");\r\n        this.attachListeners(this.el, this.toolbar, this.buttons);\r\n        this.addListeners();\r\n        // let doc = document.createDocumentFragment()\r\n        // let runpanel = doc.getElementById( container )\r\n        // let input = doc.getElementById( inputId )\r\n        // this.stylePanel( runpanel )\r\n        // this.styleDisplay( display )\r\n        // this.styleInput( input )\r\n        // this.styleLinks( doc )\r\n        // console.log( document.getElementsByClassName( 'gold' )[0].style.background='lavender' )\r\n    }\r\n    toggleTheme() {\r\n        this.el.classList.toggle(this.Theme);\r\n    }\r\n    get Theme() {\r\n        return this._theme;\r\n    }\r\n    set Theme(color) {\r\n        // dark themes: green, blue, red, purple, indigo, orange\r\n        // light themes: white, silver, gold, lavendar\r\n        if (color) {\r\n            color = color.toLowerCase();\r\n        }\r\n        if (this.theme === color) {\r\n            this.el.classList.remove(this.theme);\r\n            return;\r\n        }\r\n        this.el.classList.add(color);\r\n        this._theme = color;\r\n    }\r\n    attachListeners(el, toolbar, buttons) {\r\n        el.addEventListener(\"keyup\", (e) => {\r\n            if (e.keyCode === 13) {\r\n                if (e.target.type === \"radio\" || e.target.type === \"checkbox\") {\r\n                    this.send();\r\n                } else if (e.target.type === \"text\") {\r\n                    this.send();\r\n                } else {\r\n                    e.target.click();\r\n                }\r\n            } else {\r\n                //do nothing\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        });\r\n\r\n        toolbar.addEventListener(\"click\", (e) => {\r\n            switch (e.target.id) {\r\n                case \"pr-print\":\r\n                    this.print();\r\n                    break;\r\n                case \"pr-copy\":\r\n                    this.copy();\r\n                    break;\r\n                default:\r\n                    void 0;\r\n            }\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        });\r\n\r\n        buttons.addEventListener(\"click\", (e) => {\r\n            switch (e.target.innerText) {\r\n                case \"✓\":\r\n                    this.send();\r\n                    break;\r\n                case \"?\":\r\n                    this.why();\r\n                    break;\r\n                case \"!\":\r\n                    this.explain();\r\n                    break;\r\n                case \"×\":\r\n                    this.cancel();\r\n                    break;\r\n                case \"‣\":\r\n                    this.repeat();\r\n                    break;\r\n                case \"⛔\":\r\n                    this.stop();\r\n                    break;\r\n                default:\r\n                    //do nothing\r\n                    return;\r\n            }\r\n            this.input.focus();\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n    addListeners() {\r\n        this.on(\"error\", (e) => {\r\n            this.processError(e);\r\n        });\r\n        this.on(\"syntax-error\", (e) => {\r\n            // this.processParserErrors(e.msg )\r\n            // this.processError( e )\r\n            // console.log(e)\r\n            // this.processError(e)\r\n        });\r\n        this.on(\"system-error\", (e) => {\r\n            // this.processError( e )\r\n            this.processError(e);\r\n            // console.log(e)\r\n        });\r\n        this.on(\"validation-error\", (e) => {\r\n            this.processValidationError(e);\r\n        });\r\n        this.on(\"prompt\", (e) => {\r\n            this.processPrompt(e);\r\n        });\r\n        this.on(\"answers\", (e) => {\r\n            this.display.innerHTML = \"\";\r\n            this.processAnswers(e);\r\n        });\r\n        this.on(\"message\", (e) => {\r\n            this.appendToContent(\"<h6>\" + e.msg || e + \"</h6>\");\r\n        });\r\n        this.on(\"done\", () => {\r\n            this.display.innerHTML = \"\";\r\n        });\r\n    }\r\n    processPrompt(prompt) {\r\n        this.prompt = prompt;\r\n        let id = Math.floor(Math.random() * 99999999999999).toString(36);\r\n        this.disableInputs();\r\n        this.appendToContent(\r\n            '<div ><span id = \"' +\r\n                id +\r\n                '\" contentEditable=\"true\">' +\r\n                prompt.Index +\r\n                \". \" +\r\n                prompt.Question +\r\n                \"</span></div>\",\r\n            true\r\n        );\r\n\r\n        switch (prompt.Type) {\r\n            case \"MENU\":\r\n            case \"CF\":\r\n            case \"YN\":\r\n            case \"TF\":\r\n                this.showMenu(prompt, false);\r\n                break;\r\n            case \"NUMBER\":\r\n            case \"TEXT\":\r\n            default:\r\n        }\r\n        this.input.focus();\r\n        // let el = document.getElementById( id )\r\n        // el.scrollIntoView()\r\n    }\r\n    processValidationError(error) {\r\n        this.input.value = \"\";\r\n        this.input.focus();\r\n        // this.appendToContent(\"<div>\" + error + \"</div>\")\r\n        this.appendToContent(\r\n            \"<div>\" +\r\n                error.name +\r\n                \": \" +\r\n                error.code +\r\n                \".<br/>Details: \" +\r\n                error.message +\r\n                \".</div>\"\r\n        );\r\n    }\r\n    processError(error) {\r\n        // console.log(JSON.stringify(error))\r\n        this.input.value = \"\";\r\n        this.input.focus();\r\n        this.appendToContent(\r\n            \"<div>\" +\r\n                error.name +\r\n                \": \" +\r\n                error.code +\r\n                \".<br/>Details: \" +\r\n                error.message +\r\n                \".</div>\"\r\n        );\r\n        // this.display.innerHTML += \"<br/>\" + ( error.msg || error )\r\n    }\r\n    processParserErrors(errors) {\r\n        if (!errors) {\r\n            this.appendToContent(\"<div>System error</div>\");\r\n            return;\r\n        }\r\n        // alert(JSON.stringify(errors))\r\n        errors.forEach((e) => {\r\n            var x = e.x === undefined ? e.column : e.x;\r\n            var y = e.y === undefined ? e.row : e.y;\r\n            var s =\r\n                \"<br/><i style='color:red;' class='fa fa-times'></i> '\" +\r\n                e.text +\r\n                \"'<br/> <i style='color:blue;' class='fa fa-anchor'></i> <a href='javascript:void()' onclick='selectLine(\" +\r\n                y +\r\n                \")'>\" +\r\n                \"Line: \" +\r\n                (y * 1 + 1) +\r\n                \" Column: \" +\r\n                (x + 1) +\r\n                \"</a> <br/><i class='fa fa-code'></i> <a href ='javascript:void()' onclick='selectLine(\" +\r\n                y +\r\n                \")'>\" +\r\n                e.text +\r\n                \"</a>\";\r\n            this.display.innerHTML += s + \"<br/>\";\r\n            this.scrollDown(\"Error\");\r\n        });\r\n    }\r\n    processScriptError(error) {\r\n        if (!error) {\r\n            this.appendToContent(\"<div>System error</div>\");\r\n            return;\r\n        }\r\n        var code = error.code;\r\n        //var lang='en';\r\n        var msg = error.message;\r\n        //var expr='';\r\n        var line = error.details.line;\r\n        var lineIndex = error.details.index;\r\n        var rIndex = error.details.rIndex;\r\n        var rule = error.details.rule;\r\n        try {\r\n            var s =\r\n                \"<br/><strong>\" +\r\n                code +\r\n                \"<br/>Row:&Tab; <a href='javascript:selectLine(\" +\r\n                lineIndex +\r\n                \")'>\" +\r\n                lineIndex +\r\n                \"</a><br/>Details:&Tab;<strong>\" +\r\n                msg +\r\n                \"</strong>\" +\r\n                \"<br/>Code:&Tab;&Tab;<a href ='javascript:selectLine(\" +\r\n                lineIndex +\r\n                \")'>\" +\r\n                line +\r\n                \"</a>\" +\r\n                \"<br/>Rule number:&Tab;<strong>\" +\r\n                rIndex +\r\n                \"</strong>\" +\r\n                \"<br/>Rule:&Tab;&Tab;<a href ='javascript:selectLine(\" +\r\n                lineIndex +\r\n                \")'>\" +\r\n                rule +\r\n                \"</a><br/><hr/><p><p>\";\r\n            this.display.append(s);\r\n            window.setTimeout(function () {\r\n                window.Editor.resize();\r\n                window.setTimeout(function () {\r\n                    this.scrollDown(\"content\");\r\n                }, 200);\r\n            }, 200);\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }\r\n    processAnswers(answers) {\r\n        this.disableInputs();\r\n        if (answers.length === 0) return;\r\n        var display = [\"<div class='conclusion'>\"];\r\n        display.push(\"<span>Conclusion</span>\");\r\n        answers.forEach(function (goal) {\r\n            display.push(\"<br/>\" + goal.Name);\r\n            display.push(\": \" + goal.Value);\r\n            display.push(\r\n                \" - confidence: \" + (goal.CF === NaN ? 100 : goal.CF) + \"%\"\r\n            );\r\n        });\r\n        display.push(\"</div>\");\r\n\r\n        this.appendToContent(display.join(\" \"));\r\n        //  this.setMargin()\r\n        // this.scrollDown()\r\n    }\r\n    processInfo(data) {\r\n        //content.append(\"<hr/>\");\r\n        var rand2 = Math.random().slice(2).toString(36);\r\n        this.appendToContent(\"<div><b>\" + data.msg + \"</b></div>\");\r\n        if (\r\n            data.msg.indexOf(\"Session expired\") > -1 ||\r\n            data.msg.indexOf(\"No session\") > -1\r\n        ) {\r\n            var link1 =\r\n                \"<a href='javascript:void (0)'  id='\" +\r\n                rand2 +\r\n                \"' class='active-link opensocket'>Click here to start new session</a>\";\r\n            this.appendToContent(\"<div><b>\" + link1 + \"</b></div>\");\r\n\r\n            document.getElementById(rand2).onclick(function () {\r\n                this.open();\r\n            });\r\n        }\r\n    }\r\n    addClickListener(fn) {\r\n        let tags = this.el.getElementsByTagName(\"ul\");\r\n        let last = tags[tags.length - 1];\r\n        for (let i = 0; i < last.childNodes.length; i++) {\r\n            let node = last.children[i];\r\n            if (node && node.children) {\r\n                let el = node.children[0].firstChild;\r\n                el.addEventListener(\"click\", fn);\r\n            }\r\n        }\r\n    }\r\n    disableInputs() {\r\n        let tags = this.el.getElementsByTagName(\"ul\");\r\n        let last = tags[tags.length - 1];\r\n        if (!last) return;\r\n        this.widgets.forEach((w) => {\r\n            w.setAttribute(\"checked\", true);\r\n        });\r\n        this.widgets = [];\r\n        for (let i = 0; i < last.childNodes.length; i++) {\r\n            let node = last.children[i];\r\n            if (node && node.children) {\r\n                let el = node.children[0].firstChild;\r\n                el.disabled = true;\r\n            }\r\n        }\r\n    }\r\n    composeReply() {\r\n        let tags = this.el.getElementsByTagName(\"ul\");\r\n        let last = tags[tags.length - 1];\r\n        if (!last) return null;\r\n        let resp = {};\r\n        let index = 0;\r\n        for (let i = 0; i < last.childNodes.length; i++) {\r\n            let node = last.children[i];\r\n            if (node && node.children) {\r\n                let el = node.children[0].firstChild;\r\n                index++;\r\n                if (el.checked) {\r\n                    resp[el.value] = index;\r\n                    this.widgets.push(el);\r\n                } else {\r\n                    delete resp[el.value];\r\n                }\r\n            }\r\n        }\r\n\r\n        return Object.values(resp).join(\",\");\r\n    }\r\n    composeMenuWidget(prompt) {\r\n        let name = Math.floor(Math.random() * 9999999999999).toString(36);\r\n        let array = [];\r\n        if (prompt.Max > 1) {\r\n            array = this.composeCheckBoxes(prompt, name);\r\n        } else {\r\n            array = this.composeRadioButtons(prompt, name);\r\n        }\r\n        var ol = \"<ul>\" + array.join(\" \") + \"</ul>\";\r\n        this.appendToContent(ol, true);\r\n    }\r\n    composeCheckBoxes(prompt, name) {\r\n        return prompt.Menu.map((m) => {\r\n            return (\r\n                '<li><label><input type = \"checkbox\" name=\"' +\r\n                name +\r\n                '\" value=\"' +\r\n                m.Name +\r\n                '\"/><span style=\"margin-left:7px;\">' +\r\n                m.Name +\r\n                \"</span></label></li>\"\r\n            );\r\n        });\r\n    }\r\n    composeRadioButtons(prompt, name) {\r\n        return prompt.Menu.map((m) => {\r\n            return (\r\n                '<li><label><input type = \"radio\" name=\"' +\r\n                name +\r\n                '\" value=\"' +\r\n                m.Name +\r\n                '\"/><span style=\"margin-left:7px;\">' +\r\n                m.Name +\r\n                \"</span></label></li>\"\r\n            );\r\n        });\r\n    }\r\n    showMenu(prompt, commandline) {\r\n        if (!commandline) return this.composeMenuWidget(prompt);\r\n        let array = prompt.Menu.map((m) => {\r\n            return \"<li>\" + m.Name + \"</li>\";\r\n        });\r\n        var ol = \"<ol >\" + array.join(\" \") + \"</ol>\";\r\n        this.appendToContent(ol, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    appendToContent(node, scroll = true) {\r\n        if (node && node.classList) {\r\n            node.classList.add(\"pr-console-line\");\r\n        }\r\n        this.display.innerHTML += node;\r\n        if (scroll) this.scrollDown(\"content\");\r\n    }\r\n    setMargin() {\r\n        var el = this.display;\r\n        var child = el.lastChild;\r\n        if (child && child.classList) {\r\n            child.classList.add(\"pr-margin-bottom\");\r\n            //child.style.borderBottom = \"1px solid #777\"\r\n            //child.style.paddingTop = \"6px\"\r\n            //child.style.marginBottom = \"8px\"\r\n        }\r\n    }\r\n    scroll(direction) {\r\n        var el = this.display;\r\n        if (direction === \"up\") {\r\n            el.scrollTop = 0;\r\n        } else {\r\n            el.scrollTop = el.scrollHeight;\r\n        }\r\n    }\r\n    scrollDown() {\r\n        var el = this.display;\r\n        var child = el.lastChild;\r\n        try {\r\n            if (child) {\r\n                child.scrollIntoView();\r\n            } else {\r\n                el.scrollTop = el.scrollHeight;\r\n            }\r\n        } catch (e) {\r\n            void e;\r\n        }\r\n    }\r\n\r\n    scrollUp() {\r\n        var el = this.display;\r\n        var child = el.firstChild;\r\n\r\n        if (child) {\r\n            child.scrollIntoView();\r\n        } else {\r\n            el.scrollTop = el.scrollHeight;\r\n        }\r\n    }\r\n\r\n    showInputBar() {\r\n        //var a0=\"<input type='text' class='input'/><br/> \";\r\n        //var a1=(' <a href=\\'javascript:void(0)\\' onclick=\\'ui.send()\\'>Send</a> ');\r\n        var a2 =\r\n            \" <a href='javascript:void(0)'onclick='disconnect()' >Disconnect</a> \";\r\n        var a3 = \" <a href='javascript:void(0)'onclick='open()' >Restart</a>  \";\r\n        var a4 =\r\n            \" <a href='javascript:void(0)' onclick='restartClick()'>Refresh</a> \";\r\n        var ol =\r\n            \" <div id='input-bar'><input type='text' class='input'/>\" +\r\n            a2 +\r\n            a3 +\r\n            a4 +\r\n            \"</div></br/>\";\r\n        this.appendToContent(ol);\r\n    }\r\n\r\n    showTaskBar() {\r\n        //ol.append(\"<input type='text' class='input' onkeyUp='inputKeyup(\"+event+\")'/> \");\r\n        //ol.append(\" <a href='javascript:void(0)' onclick='submmitClick'>Send</a> \");\r\n        //ol.append(\" <a href='javascript:void(0)' onclick='disconnect'>Disconnect</a> \");\r\n        var a1 =\r\n            \" <a href='javascript:void(0)' onclick='connectClick()'>Restart</a> \";\r\n        var a2 =\r\n            \" <a href='javascript:void(0)' onclick='restartClick()'>Refresh</a> \";\r\n        var ol = \"<div id='input-bar'>\" + a1 + a2 + \"</div>\";\r\n        this.appendToContent(ol);\r\n    }\r\n}\r\n","/*jshint esversion: 6*/\r\nimport CustomEvent from \"../util/eventbus\";\r\nimport Rules from \"../Rules\";\r\nimport Viewer from \"../buttons/viewer\";\r\nimport Rule from \"../core/Rule\";\r\n\r\nexport default class Ui extends CustomEvent {\r\n    constructor(el, options = {}) {\r\n        super();\r\n        this.language = options.language || \"en\";\r\n        Rule.init([\"fr\", \"es\"]);\r\n        if (!el) throw \"Missing Element ID to attach UX\";\r\n        let node =\r\n            el instanceof HTMLElement\r\n                ? el\r\n                : typeof el === \"string\"\r\n                ? document.getElementById(el)\r\n                : el;\r\n        if (!node || !node instanceof HTMLElement) throw \"ID not a valid Node\";\r\n        this.el = node;\r\n        this.el.style.overflow = \"hidden\";\r\n        this.text = options.text || null;\r\n        this.data = null;\r\n        this.widgets = [];\r\n        this.prompt = {};\r\n        this.error = null;\r\n        this.display = null;\r\n        this.buttons = null;\r\n        this.container = null;\r\n        this.rules = new Rules(this.language);\r\n        this.loadConsolePanel();\r\n        this.attachListeners();\r\n        this.attachCSS();\r\n        this.addListeners();\r\n        // if (this.text) this.start(this.text)\r\n    }\r\n    get Text() {\r\n        return this.text;\r\n    }\r\n    set Text(text) {\r\n        this.text = text;\r\n    }\r\n    get URL() {\r\n        return this.url;\r\n    }\r\n    set URL(url) {\r\n        this.url = url;\r\n    }\r\n    async run(codes) {\r\n        this.codes = codes;\r\n        const { errors, data } = await this.rules.compile(codes);\r\n        this.data = data;\r\n        this.errors = errors;\r\n\r\n        this.start(data);\r\n    }\r\n    start(data) {\r\n        const response = this.rules.run(data);\r\n        this.process(response);\r\n    }\r\n    async repeat() {\r\n        // let data = localStorage.getItem('engine-kb-data')\r\n        // this.data = JSON.parse(data)\r\n        await this.run(this.codes);\r\n    }\r\n    reply(input) {\r\n        const response = this.rules.reply(this.data, input);\r\n        this.process(response);\r\n    }\r\n    send() {\r\n        if (!this.data) {\r\n            return console.info(\"No language defined in kb\", console.trace);\r\n        }\r\n        let msg = null;\r\n        if (this.prompt.Type === \"NUMBER\" || this.prompt.Type === \"TEXT\") {\r\n            msg = this.input.value;\r\n        } else {\r\n            msg = this.composeReply();\r\n        }\r\n        if (!msg) return;\r\n        this.setMargin();\r\n        this.input.value = \"\";\r\n        this.reply(msg);\r\n    }\r\n\r\n    why() {\r\n        //ps.publish( 'why' )\r\n    }\r\n    stop() {\r\n        //ps.publish( 'stop' )\r\n    }\r\n    explain() {\r\n        //ps.publish( 'explain' )\r\n    }\r\n    cancel() {\r\n        this.display.innerHTML = \"\";\r\n    }\r\n    print() {\r\n        let html = this.display.innerHTML;\r\n        let win = window.open(\"about:blank\", \"self\", \"width=600; height=450;\");\r\n        win.document.writeln(html);\r\n        win.print();\r\n        win.close();\r\n    }\r\n    copy() {}\r\n    process(response) {\r\n        // console.log({ response })\r\n        if (response.Label === \"Prompt\" || response.Label === \"CF\") {\r\n            //Prompting for input\r\n            return this.processPrompt(response);\r\n        } else if (response instanceof Array) {\r\n            //answers are ready\r\n            return this.processAnswers(response);\r\n        } else {\r\n            // console.log(response.name)\r\n            switch (response.name) {\r\n                case \"ValidationError\":\r\n                    return this.processValidationError(response);\r\n                case \"SyntaxError\":\r\n                    return this.processError(response);\r\n                case \"ScriptError\":\r\n                    return this.processError(response);\r\n                default:\r\n                    return this.processError(response);\r\n            }\r\n        }\r\n    }\r\n    attachScripts(scr, id, name) {\r\n        var head = document.body;\r\n        var link = document.createElement(\"script\");\r\n        link.type = \"text/javascript\";\r\n        link.id = id || Math.random().slice(2).toString(36);\r\n        link.name = name || \"script\" + link.id;\r\n        link.append(scr);\r\n        head.appendChild(link);\r\n    }\r\n    attachListeners() {\r\n        this.el.addEventListener(\"keyup\", (e) => {\r\n            if (e.keyCode === 13) {\r\n                if (e.target.type === \"radio\" || e.target.type === \"checkbox\") {\r\n                    this.send();\r\n                } else if (e.target.type === \"text\") {\r\n                    this.send();\r\n                } else {\r\n                    e.target.click();\r\n                }\r\n            } else {\r\n                //do nothing\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        });\r\n\r\n        this.toolbar.addEventListener(\"click\", (e) => {\r\n            switch (e.target.id) {\r\n                case \"pr-print\":\r\n                    this.print();\r\n                    break;\r\n                case \"pr-copy\":\r\n                    this.copy();\r\n                    break;\r\n                default:\r\n                    void 0;\r\n            }\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        });\r\n\r\n        this.buttons.addEventListener(\"click\", (e) => {\r\n            switch (e.target.innerText) {\r\n                case \"✓\":\r\n                    this.send();\r\n                    break;\r\n                case \"?\":\r\n                    this.why();\r\n                    break;\r\n                case \"!\":\r\n                    this.explain();\r\n                    break;\r\n                case \"×\":\r\n                    this.cancel();\r\n                    break;\r\n                case \"‣\":\r\n                    this.repeat();\r\n                    break;\r\n                case \"⛔\":\r\n                    this.stop();\r\n                    break;\r\n                default:\r\n                    //do nothing\r\n                    return;\r\n            }\r\n            this.input.focus();\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    attachCSS() {\r\n        const head = document.head;\r\n        const link = document.createElement(\"style\");\r\n        link.rel = \"stylesheet\";\r\n        const css = `\r\n    .pr-copy, \r\n    .pr-print {\r\n      cursor: pointer;\r\n      padding: 2px 0;\r\n      margin-left: 8px;\r\n      margin-bottom: 4px;\r\n      height: 22px;\r\n      margin-right: 4px;\r\n      background: white;\r\n      border-radius: 5px 5px 5px 5px;\r\n    }\r\n    .pr-toggle {\r\n       cursor: pointer;\r\n    }\r\n    .pr-copy {\r\n        padding-right: 0px;\r\n        padding-left: 4px;\r\n     }\r\n     .pr-print {\r\n        padding-left: 4px;\r\n        padding-right: 4px;\r\n     }\r\n    .pr-parent {\r\n        border: 0;\r\n        min-width: 240px;\r\n        padding: 2px;\r\n        transition: background 1.8s;\r\n    }\r\n    .pr-container {\r\n        position:absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        overflow: hidden;\r\n        border: 1px solid none;\r\n        color: white;\r\n        background: #222;\r\n    }\r\n    .pr-banner, \r\n    .pr-banner {\r\n        height: 1.8rem;\r\n        font-weight: 400;\r\n        margin-bottom:0;\r\n        padding-top: 2px;\r\n        font-variant: small-caps;\r\n    }\r\n    .pr-toolbar {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        letter-spacing: 1.4px;\r\n        font-size: 14px;\r\n        align-items: center;\r\n        height: 100%;\r\n        width: 160px;\r\n        text-align: right;\r\n        float: right;\r\n        border-radius:50px;\r\n        padding-left: 1rem;\r\n        padding-right: 17px;\r\n        padding-top: 1px;\r\n        opacity: 0;\r\n        justify-content: flex-end;\r\n    }\r\n    .pr-banner:hover > .pr-toolbar {\r\n        transition: all 0.7s;\r\n        opacity: 100%;\r\n    }\r\n    .pr-display {\r\n        position: absolute;\r\n        overflow: auto;\r\n        padding: 4px;\r\n        top: 36px;\r\n        bottom: 36px;\r\n        left: 0;\r\n        right: 0;\r\n        background: #111;\r\n        border-top: 1px solid transparent;\r\n        border-bottom: 1px solid transparent;\r\n        font-size: 16px;\r\n        letter-spacing: 1.2px;\r\n        color: cadetblue;\r\n        text-shadow: none;\r\n    }\r\n    .pr-display ul {list-style-type:none; border-bottom:0px solid #555;}\r\n    .pr-dispaly ol {border-bottom:0px solid #555; list-style:upper-latin;}\r\n    .pr-display .pr-margin-bottom {border-bottom: 1px solid cadetblue;margin-bottom:5px; padding:5px}\r\n    .pr-input-panel {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 4px;\r\n        padding-top: 0;\r\n        padding-left: 7px;\r\n        height: 32px;\r\n    }\r\n    .pr-input-buttons {\r\n      display:inline-block;\r\n      font-weight:bold;\r\n      margin-bottom: 2px;\r\n      font-size: 1.4em;\r\n    }\r\n    .pr-text-input-container {\r\n      padding: 0;\r\n      background: transparent;\r\n      border: none;\r\n    }\r\n    .pr-text-input {\r\n        width: auto;\r\n        max-width: 80px;\r\n        outline: none;\r\n        background: slateblue;\r\n        color: white;\r\n        font-size: 18px;\r\n        height: 100%;\r\n        width: 100%;\r\n        border: none;\r\n    }\r\n    .pr-link-btn {\r\n        padding: 4px 4px 4px 4px;\r\n        text-decoration: none;\r\n        margin: 1px;\r\n        border-radius: px 2px 2px;\r\n    }\r\n    .pr-char {\r\n        font-size: 1em;\r\n        font-weight: bold;\r\n        color: white;\r\n    }\r\n    .pr-margin-bottom {\r\n       border-bottom: 1px solid transparent;\r\n       padding-top: 6px;\r\n       margin-bottom: 8px;\r\n    }\r\n    .gold .pr-container {\r\n        background: blanchedalmond;\r\n        color: green;\r\n    }\r\n\r\n    .gold .pr-char, .gold .pr-banner {\r\n      color: green;\r\n    }\r\n    .blue .pr-container {\r\n      background: navy;\r\n    }\r\n    .indigo .pr-container {\r\n      background: slateblue;\r\n    } \r\n    .green .pr-container {\r\n      background: lightgreen;\r\n    }\r\n    .red .pr-container {\r\n      background: #b00000;\r\n    }\r\n    .orange .pr-container {\r\n      background: orange;\r\n    }\r\n    .light .pr-container {\r\n      background: #eee;\r\n      color: blue;\r\n    }\r\n    .light .pr-char, .light .pr-banner {\r\n      color: blue;\r\n    }\r\n    `;\r\n        link.append(css);\r\n        head.appendChild(link);\r\n    }\r\n\r\n    async loadConsolePanel() {\r\n        const num = Math.random().toString(36).slice(2).toString(36);\r\n        const display_id = `display${num}`,\r\n            inputId = `text${num}`,\r\n            btpanel = `btPanel${num}`,\r\n            container = `container${num}`,\r\n            toolbar = `tb${num}`,\r\n            banner = `banner${num}`;\r\n\r\n        const panel = `\r\n    <div id = '${container}' class ='pr-container'>\r\n      <div id ='${banner}' class ='pr-banner'>\r\n        <span class=\"pr-banner-title\">Rules Interface</span>\r\n        <div id ='${toolbar}' class ='pr-toolbar'></div>\r\n      </div>\r\n      <div id ='${display_id}' class ='pr-display'></div>\r\n      <div id ='${btpanel}' class ='pr-input-panel'>\r\n      <span class='pr-text-input-container'>\r\n        <input id ='${inputId}' class ='pr-text-input' type='text'/>\r\n      </span> \r\n      <span class='pr-input-buttons'>\r\n          <a href='javascript:void(0)' title='Send' class='pr-link-btn'><span class='pr-char'>&check;</span></a>\r\n          <a href='javascript:void(0)' title='Why ask?' class='pr-link-btn'><span class='pr-char'>&quest;</span></a>\r\n          <a href='javascript:void(0)' title='Explain' class='pr-link-btn'><span class='pr-char'>&excl;</span></a>\r\n          <a href='javascript:void(0)' title='Disconnect' class='pr-link-btn'><span class='pr-char'>&times;</span></a>\r\n          <a href='javascript:void(0)' title='Repeat' class='pr-link-btn'><span class='pr-char' style=\"font-size:1.5rem\">&#8227;</span></a>\r\n      </span>\r\n    </div></div>`;\r\n        this.el.innerHTML = panel;\r\n        this.el.classList.add(\"pr-parent\");\r\n        this.theme = \"dark\";\r\n        this.display = document.getElementById(display_id);\r\n        this.input = document.getElementById(inputId);\r\n        this.buttons = document.getElementById(btpanel);\r\n        this.banner = document.getElementById(banner);\r\n        this.toolbar = document.getElementById(toolbar);\r\n\r\n        new Viewer(this.display, this.toolbar);\r\n        this.input.focus();\r\n        this.container = document.getElementById(container);\r\n        // let doc = document.createDocumentFragment()\r\n        // let runpanel = doc.getElementById( container )\r\n        // let input = doc.getElementById( inputId )\r\n        // this.stylePanel( runpanel )\r\n        // this.styleDisplay( display )\r\n        // this.styleInput( input )\r\n        // this.styleLinks( doc )\r\n        // console.log( document.getElementsByClassName( 'gold' )[0].style.background='lavender' )\r\n    }\r\n    toggleTheme() {\r\n        // console.log(this.theme, this.el)\r\n        this.el.classList.toggle(this.Theme);\r\n    }\r\n    get Theme() {\r\n        return this._theme;\r\n    }\r\n    set Theme(color) {\r\n        // dark themes: green, blue, red, purple, indigo, orange\r\n        // light themes: white, silver, gold, lavendar\r\n        if (color) {\r\n            color = color.toLowerCase();\r\n        }\r\n        if (this.theme === color) {\r\n            this.el.classList.remove(this.theme);\r\n            return;\r\n        }\r\n        this.el.classList.add(color);\r\n        this._theme = color;\r\n    }\r\n    stylePanel(runpanel) {\r\n        runpanel.style.position = \"absolute\";\r\n        runpanel.style.top = \"0\";\r\n        runpanel.style.left = \"0\";\r\n        runpanel.style.right = \"0\";\r\n        runpanel.style.bottom = \"0\";\r\n        runpanel.style.overflow = \"auto\";\r\n        runpanel.style.paddingLeft = runpanel.style.paddingRight = \"5px\";\r\n        runpanel.style.background = \"inherit\";\r\n    }\r\n    styleDisplay(display) {\r\n        display.style.position = \"absolute\";\r\n        display.style.top = \"4px\";\r\n        display.style.left = \"0\";\r\n        display.style.right = \"0\";\r\n        display.style.bottom = \"48px\";\r\n        display.style.overflow = \"auto\";\r\n        display.style.paddingLeft = display.style.paddingRight = \"16px\";\r\n    }\r\n    styleInput(input) {\r\n        input.style.color = \"#000\";\r\n        input.style.background = \"#999\";\r\n        input.style.border = \"1px solid #333\";\r\n        input.style.marginRight = \"7px\";\r\n        input.style.borderRadius = \"15px\";\r\n        input.style.padding = \"4px 4px 4px 12px\";\r\n    }\r\n    styleLinks(doc) {\r\n        let links = doc.getElementsByTagName(\"a\");\r\n        for (let i = 0; i < links.length; i++) {\r\n            let link = links[i];\r\n            link.style.padding = \"4px 8px 4px 8px\";\r\n            link.style.textDecoration = \"none\";\r\n            link.style.color = \"inherit\";\r\n            link.style.margin = \"1px\";\r\n            link.style.borderRadius = \"2px 2px\";\r\n        }\r\n        let btns = doc.getElementsByClassName(\"char\");\r\n        for (let i = 0; i < btns.length; i++) {\r\n            let link = links[i];\r\n            link.style.fontSize = \"2em\";\r\n            link.style.fontWeight = \"bold\";\r\n        }\r\n        return doc;\r\n    }\r\n\r\n    addListeners() {\r\n        this.on(\"error\", (e) => {\r\n            this.processError(e);\r\n        });\r\n        this.on(\"syntax-error\", (e) => {\r\n            // this.processParserErrors(e.msg )\r\n            // this.processError( e )\r\n            // console.log(e)\r\n            this.processError(e);\r\n        });\r\n        this.on(\"system-error\", (e) => {\r\n            // this.processError( e )\r\n            this.processError(e);\r\n            // console.log(e)\r\n        });\r\n        this.on(\"validation-error\", (e) => {\r\n            this.processValidationError(e);\r\n        });\r\n        this.on(\"prompt\", (e) => {\r\n            this.processPrompt(e);\r\n        });\r\n        this.on(\"answers\", (e) => {\r\n            this.display.innerHTML = \"\";\r\n            this.processAnswers(e);\r\n        });\r\n        this.on(\"message\", (e) => {\r\n            this.appendToContent(\"<h6>\" + e.msg || e + \"</h6>\");\r\n        });\r\n        this.on(\"done\", () => {\r\n            this.display.innerHTML = \"\";\r\n        });\r\n    }\r\n    processPrompt(prompt) {\r\n        this.prompt = prompt;\r\n        let id = Math.floor(Math.random() * 99999999999999).toString(36);\r\n        this.disableInputs();\r\n        this.appendToContent(\r\n            '<div ><span id = \"' +\r\n                id +\r\n                '\" contentEditable=\"true\">' +\r\n                prompt.Index +\r\n                \". \" +\r\n                prompt.Question +\r\n                \"</span></div>\",\r\n            true\r\n        );\r\n\r\n        switch (prompt.Type) {\r\n            case \"MENU\":\r\n            case \"CF\":\r\n            case \"YN\":\r\n            case \"TF\":\r\n                this.showMenu(prompt, false);\r\n                break;\r\n            case \"NUMBER\":\r\n            case \"TEXT\":\r\n            default:\r\n        }\r\n        this.input.focus();\r\n        // let el = document.getElementById( id )\r\n        // el.scrollIntoView()\r\n    }\r\n    processValidationError(error) {\r\n        this.input.value = \"\";\r\n        this.input.focus();\r\n        // this.appendToContent(\"<div>\" + error + \"</div>\")\r\n        this.appendToContent(\r\n            \"<div>\" +\r\n                error.name +\r\n                \": \" +\r\n                error.code +\r\n                \".<br/>Details: \" +\r\n                error.message +\r\n                \".</div>\"\r\n        );\r\n    }\r\n    processError(error) {\r\n        // console.log(JSON.stringify(error))\r\n        this.input.value = \"\";\r\n        this.input.focus();\r\n        this.appendToContent(\r\n            \"<div>\" +\r\n                error.name +\r\n                \": \" +\r\n                error.code +\r\n                \".<br/>Details: \" +\r\n                error.message +\r\n                \".</div>\"\r\n        );\r\n        // this.display.innerHTML += \"<br/>\" + ( error.msg || error )\r\n    }\r\n    processParserErrors(errors) {\r\n        if (!errors) {\r\n            this.appendToContent(\"<div>System error</div>\");\r\n            return;\r\n        }\r\n        errors.forEach((e) => {\r\n            var x = e.x === undefined ? e.column : e.x;\r\n            var y = e.y === undefined ? e.row : e.y;\r\n            var s =\r\n                \"<br/><i style='color:red;' class='fa fa-times'></i> '\" +\r\n                e.text +\r\n                \"'<br/> <i style='color:blue;' class='fa fa-anchor'></i> <a href='javascript:void()' onclick='selectLine(\" +\r\n                y +\r\n                \")'>\" +\r\n                \"Line: \" +\r\n                (y * 1 + 1) +\r\n                \" Column: \" +\r\n                (x + 1) +\r\n                \"</a> <br/><i class='fa fa-code'></i> <a href ='javascript:void()' onclick='selectLine(\" +\r\n                y +\r\n                \")'>\" +\r\n                e.text +\r\n                \"</a>\";\r\n            this.display.innerHTML += s + \"<br/>\";\r\n            this.scrollDown(\"Error\");\r\n        });\r\n    }\r\n    processScriptError(error) {\r\n        if (!error) {\r\n            this.appendToContent(\"<div>System error</div>\");\r\n            return;\r\n        }\r\n        var code = error.code;\r\n        //var lang='en';\r\n        var msg = error.message;\r\n        //var expr='';\r\n        var line = error.details.line;\r\n        var lineIndex = error.details.index;\r\n        var rIndex = error.details.rIndex;\r\n        var rule = error.details.rule;\r\n        try {\r\n            var s =\r\n                \"<br/><strong>\" +\r\n                code +\r\n                \"<br/>Row:&Tab; <a href='javascript:selectLine(\" +\r\n                lineIndex +\r\n                \")'>\" +\r\n                lineIndex +\r\n                \"</a><br/>Details:&Tab;<strong>\" +\r\n                msg +\r\n                \"</strong>\" +\r\n                \"<br/>Code:&Tab;&Tab;<a href ='javascript:selectLine(\" +\r\n                lineIndex +\r\n                \")'>\" +\r\n                line +\r\n                \"</a>\" +\r\n                \"<br/>Rule number:&Tab;<strong>\" +\r\n                rIndex +\r\n                \"</strong>\" +\r\n                \"<br/>Rule:&Tab;&Tab;<a href ='javascript:selectLine(\" +\r\n                lineIndex +\r\n                \")'>\" +\r\n                rule +\r\n                \"</a><br/><hr/><p><p>\";\r\n            this.display.append(s);\r\n            window.setTimeout(function () {\r\n                window.Editor.resize();\r\n                window.setTimeout(function () {\r\n                    this.scrollDown(\"content\");\r\n                }, 200);\r\n            }, 200);\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }\r\n    processAnswers(answers) {\r\n        this.disableInputs();\r\n        if (answers.length === 0) return;\r\n        var display = [\"<div class='conclusion'>\"];\r\n        display.push(\"<span>Conclusion</span>\");\r\n        answers.forEach(function (goal) {\r\n            display.push(\"<br/>\" + goal.Name);\r\n            display.push(\": \" + goal.Value);\r\n            display.push(\" - confidence: \" + goal.CF + \"%\");\r\n        });\r\n        display.push(\"</div>\");\r\n        this.appendToContent(display.join(\" \"));\r\n        //  this.setMargin()\r\n        // this.scrollDown()\r\n    }\r\n    processInfo(data) {\r\n        //content.append(\"<hr/>\");\r\n        var rand2 = Math.random().slice(2).toString(36);\r\n        this.appendToContent(\"<div><b>\" + data.msg + \"</b></div>\");\r\n        if (\r\n            data.msg.indexOf(\"Session expired\") > -1 ||\r\n            data.msg.indexOf(\"No session\") > -1\r\n        ) {\r\n            var link1 =\r\n                \"<a href='javascript:void (0)'  id='\" +\r\n                rand2 +\r\n                \"' class='active-link opensocket'>Click here to start new session</a>\";\r\n            this.appendToContent(\"<div><b>\" + link1 + \"</b></div>\");\r\n\r\n            document.getElementById(rand2).onclick(function () {\r\n                this.open();\r\n            });\r\n        }\r\n    }\r\n    addClickListener(fn) {\r\n        let tags = this.el.getElementsByTagName(\"ul\");\r\n        let last = tags[tags.length - 1];\r\n        for (let i = 0; i < last.childNodes.length; i++) {\r\n            let node = last.children[i];\r\n            if (node && node.children) {\r\n                let el = node.children[0].firstChild;\r\n                el.addEventListener(\"click\", fn);\r\n            }\r\n        }\r\n    }\r\n    disableInputs() {\r\n        let tags = this.el.getElementsByTagName(\"ul\");\r\n        let last = tags[tags.length - 1];\r\n        if (!last) return;\r\n        this.widgets.forEach((w) => {\r\n            w.setAttribute(\"checked\", true);\r\n        });\r\n        this.widgets = [];\r\n        for (let i = 0; i < last.childNodes.length; i++) {\r\n            let node = last.children[i];\r\n            if (node && node.children) {\r\n                let el = node.children[0].firstChild;\r\n                el.disabled = true;\r\n            }\r\n        }\r\n    }\r\n    composeReply() {\r\n        let tags = this.el.getElementsByTagName(\"ul\");\r\n        let last = tags[tags.length - 1];\r\n        if (!last) return null;\r\n        let resp = {};\r\n        let index = 0;\r\n        for (let i = 0; i < last.childNodes.length; i++) {\r\n            let node = last.children[i];\r\n            if (node && node.children) {\r\n                let el = node.children[0].firstChild;\r\n                index++;\r\n                if (el.checked) {\r\n                    resp[el.value] = index;\r\n                    this.widgets.push(el);\r\n                } else {\r\n                    delete resp[el.value];\r\n                }\r\n            }\r\n        }\r\n\r\n        return Object.values(resp).join(\",\");\r\n    }\r\n    composeMenuWidget(prompt) {\r\n        let name = Math.floor(Math.random() * 9999999999999).toString(36);\r\n        let array = [];\r\n        if (prompt.Max > 1) {\r\n            array = this.composeCheckBoxes(prompt, name);\r\n        } else {\r\n            array = this.composeRadioButtons(prompt, name);\r\n        }\r\n        var ol = \"<ul>\" + array.join(\" \") + \"</ul>\";\r\n        this.appendToContent(ol, true);\r\n    }\r\n    composeCheckBoxes(prompt, name) {\r\n        return prompt.Menu.map((m) => {\r\n            return (\r\n                '<li><label><input type = \"checkbox\" name=\"' +\r\n                name +\r\n                '\" value=\"' +\r\n                m.Name +\r\n                '\"/><span style=\"margin-left:7px;\">' +\r\n                m.Name +\r\n                \"</span></label></li>\"\r\n            );\r\n        });\r\n    }\r\n    composeRadioButtons(prompt, name) {\r\n        return prompt.Menu.map((m) => {\r\n            return (\r\n                '<li><label><input type = \"radio\" name=\"' +\r\n                name +\r\n                '\" value=\"' +\r\n                m.Name +\r\n                '\"/><span style=\"margin-left:7px;\">' +\r\n                m.Name +\r\n                \"</span></label></li>\"\r\n            );\r\n        });\r\n    }\r\n    showMenu(prompt, commandline) {\r\n        if (!commandline) return this.composeMenuWidget(prompt);\r\n        let array = prompt.Menu.map((m) => {\r\n            return \"<li>\" + m.Name + \"</li>\";\r\n        });\r\n        var ol = \"<ol >\" + array.join(\" \") + \"</ol>\";\r\n        this.appendToContent(ol, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    appendToContent(node, scroll = true) {\r\n        if (node && node.classList) {\r\n            node.classList.add(\"pr-console-line\");\r\n        }\r\n        this.display.innerHTML += node;\r\n        if (scroll) this.scrollDown(\"content\");\r\n    }\r\n    setMargin() {\r\n        var el = this.display;\r\n        var child = el.lastChild;\r\n        if (child && child.classList) {\r\n            child.classList.add(\"pr-margin-bottom\");\r\n            //child.style.borderBottom = \"1px solid #777\"\r\n            //child.style.paddingTop = \"6px\"\r\n            //child.style.marginBottom = \"8px\"\r\n        }\r\n    }\r\n    scroll(direction) {\r\n        var el = this.display;\r\n        if (direction === \"up\") {\r\n            el.scrollTop = 0;\r\n        } else {\r\n            el.scrollTop = el.scrollHeight;\r\n        }\r\n    }\r\n    scrollDown() {\r\n        var el = this.display;\r\n        var child = el.lastChild;\r\n        try {\r\n            if (child) {\r\n                child.scrollIntoView();\r\n            } else {\r\n                el.scrollTop = el.scrollHeight;\r\n            }\r\n        } catch (e) {\r\n            void e;\r\n        }\r\n    }\r\n\r\n    scrollUp() {\r\n        var el = this.display;\r\n        var child = el.firstChild;\r\n\r\n        if (child) {\r\n            child.scrollIntoView();\r\n        } else {\r\n            el.scrollTop = el.scrollHeight;\r\n        }\r\n    }\r\n\r\n    showInputBar() {\r\n        //var a0=\"<input type='text' class='input'/><br/> \";\r\n        //var a1=(' <a href=\\'javascript:void(0)\\' onclick=\\'ui.send()\\'>Send</a> ');\r\n        var a2 =\r\n            \" <a href='javascript:void(0)'onclick='disconnect()' >Disconnect</a> \";\r\n        var a3 = \" <a href='javascript:void(0)'onclick='open()' >Restart</a>  \";\r\n        var a4 =\r\n            \" <a href='javascript:void(0)' onclick='restartClick()'>Refresh</a> \";\r\n        var ol =\r\n            \" <div id='input-bar'><input type='text' class='input'/>\" +\r\n            a2 +\r\n            a3 +\r\n            a4 +\r\n            \"</div></br/>\";\r\n        this.appendToContent(ol);\r\n    }\r\n\r\n    showTaskBar() {\r\n        //ol.append(\"<input type='text' class='input' onkeyUp='inputKeyup(\"+event+\")'/> \");\r\n        //ol.append(\" <a href='javascript:void(0)' onclick='submmitClick'>Send</a> \");\r\n        //ol.append(\" <a href='javascript:void(0)' onclick='disconnect'>Disconnect</a> \");\r\n        var a1 =\r\n            \" <a href='javascript:void(0)' onclick='connectClick()'>Restart</a> \";\r\n        var a2 =\r\n            \" <a href='javascript:void(0)' onclick='restartClick()'>Refresh</a> \";\r\n        var ol = \"<div id='input-bar'>\" + a1 + a2 + \"</div>\";\r\n        this.appendToContent(ol);\r\n    }\r\n}\r\n"],"names":["MENU","NUMBER","TEXT","VALUE","STRING","SUM","MUL","AVE","MIN","MAX","YN","TF","ATTR","ErrorKeys","ScriptError","NetworkError","TokenRequired","TokenExpired","TokenInvalid","APIKeyNotFound","APIKeyInvalid","CredentialsInvalid","UserNotFound","AccessDenied","InvalidSelection","NoSelection","SelectionsAboveRange","SelectionsBelowRange","CharactersAboveRange","CharactersBelowRange","NumberAboveRange","NumberBelowRange","NumberRequired","NoActiveSession","NoInput","PromptNotFound","KnowledgebaseNotFound","SessionExpired","UnknownToken","NoCloseParenthesis","NoOpenParenthesis","DuplicateOperator","NoDefinition","NoAttributeName","ExpectedEQ","ExpectNoEOF","ExpectNoNewLine","ExpectedArrayname","ExpectedOpenParenthesis","ExpectedNumberOrAttrib","ExpectedComma","ExpectedCloseParenthesis","NoGoalName","NoPromptText","ExpectType","ExpectComparator","NoInputForAttrib","validator","raiseValidationError","key","validateCF","input","prompt","num","isNaN","ERROR_KEYS","Menu","length","validateMenu","Min","Max","forEach","validateText","validateNumeric","Number","validate","Type","toString","trim","Label","toUpperCase","values","split","REM","COMMENT","TITLE","SUMMARY","ATTRIBUTE","ARRAY","GOAL","LINE","RULE","ELSE","ELSEIF","THEN","AND","OR","IF","PROMPT","QUESTION","YES","NO","TRUE","FALSE","DIGIT","NUM","EX","IN","NOT","IS","LPAREN","RPAREN","LBRACKET","RBRACKET","CARRET","TIMES","DIV","PLUS","MINUS","MOD","EQ","GT","LT","COMMA","COLON","SPACE","ERROR","EOF","FUNC","CONST","Token","type","value","row","col","column","AST","BinOp","left","op","right","token","Num","Str","Attr","Const","Func","params","Comma","UnaryOp","expr","Builder","tokens","pos","current_token","matchCloseParenthesis","startIndex","$return","i","s","matchOpenParenthesis","matchParenthesis","matchBrackets","open","close","opens","closes","c","push","match","msg","error","index","Error","getNextToken","eat","token_type","factor","node","parseFunc","parseExpr","attr","isAttrib","v","join","build","endIndex","term","ast","Interpreter","visit","visit_BinOp","visit_UnaryOp","visit_Const","visit_Attr","map","p","Math","visit_Num","visit_Str","interpret","result","code","translator","language","multipleChoice","Array","array","Value","normalize","Constants","MAX_CHARS","MAX_VALUE","MIN_VALUE","Engine","kb","ReferenceError","paused","CFSettings","done","knowledgebase","keywords","languageModule","prompts","raiseScriptError","e","console","log","raisePromptNotFoundError","raiseSessionExpiredError","getEventData","message","status","text","lineText","line","lineNumber","rule","currentRule","Name","ruleNumber","ruleIndex","calculateCF","oldValue","newValue","mode","cf","max","min","start","_error","command","rules","Fired","currentPrompt","conditionIndex","Conditions","currentCondition","testPremises","Boolean","fireRule","Inferences","AltInferences","answers","maxIndex","Premises","testResult","Premise","Keyword","leftNodes","mapNodes","Left","rightNodes","Right","solve","cfLeft","evaluateCF","cfRight","kbCF","CF","compare","Comparator","solveAttribute","inference","nodes","attribValue","attribute","attributes","toLowerCase","setAttributeValueAndCF","prevCf","goals","round","Object","getOwnPropertyNames","fireDoneEvent","inferences","isMet","firedRules","test","cmd","url","expression","builder","interpreter","inArray","notInArray","name","_name","Index","promptIndex","cfPrompt","CF_TEXTS","VALUES","Question","QUES","CFMode","menu","setAttribute","validateResult","inputValidator","computedValue","choose","setAttributeCF","Confidences","a","includes","getConditionCF","b","d","run","data","getKnowledgebase","setKnowledgebase","Translator","locale","get","errors","format","assign","arg","replace","translate","translatePlain","from","source","find","keys","to","toPlain","en","LANGUAGE","OBJECT","LOAD","INCLUDE","EXCLUDE","CODE","NAME","ALPHA","ValidationError","CustomErrors","lang","CustomError","err","SecurityError","DatabaseError","SyntaxError","OOBJECT","NoCloseParenhesis","NoOpenParenhesis","AttenduOuvertParenthèse","ExpectedCloseParenhesis","fr","de","channels","EventEmmiter","subscribe","topic","listener","hasOwnProperty","call","remove","splice","unsubscribe","findIndex","l","publish","info","item","undefined","channel","pop","destroy","Zero","DecInt","OctalInt","HexInt","Integer","Exponent","Float1","Float2","Float3","Float4","Float","Numeric","MATH_CONSTS","E","LN2","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2","MATH_FUNCS","abs","acos","acosh","asin","asinh","atan","atanh","atan2","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","ln","log1p","log10","log2","pow","random","sign","sin","sinh","sqrt","tan","tanh","trunc","Tokenizer","init","tokenizeWord","current","consumedChars","count","char","tokenizeString","_col","tokenizeNumber","skipWhiteSpace","tokenizeComment","tokenizeLineComment","flagComment","filtered","next","tk","filterComment","filter","filterSpace","transform","transformed","phrase","tokenize","Promise","resolve","reject","setTimeout","tokenized","found","SpecialCharacters","chars","RegExp","ParseToken","self","prev","r","scanRule","pubsub","scanPremise","or","and","scanInference","then","elseif","f","scanPrompt","question","q","scanQuestion","m","scanMenu","digit","scanDigit","scanText","yes","scanYesNo","scanTrueFalse","scanMin","scanMax","mod","scanAttribute","goal","lastToken","scanGoal","scanArray","title","scanTitle","summary","scanSummary","eof","Parser","keyMap","keyValues","parseToken","matchCloseBracket","matchOpenBracket","matchDuplicateOperator","peek","readToEndOfLine","advance","t","scanDefinition","equal","rightNode","rt","n","assignGlobal","lparen","rparen","scanCF","leftAttribute","nextToken","taste","comparator","_right","leftNode","comp","toLocaleLowerCase","peek_pos","trace","trace_pos","warn","inf","checkVarableDeclarations","k","w","raw","isKeyword","word","history","filterKeywords","prevToken","applyMaths","_tokens","math","finalTokens","paren","comma","parse","tokenizer","Lexer","action","prototype","flag","tokenizeBlockCommentXXX","pattern","editText","ResourceParser","eatLeft","eatRight","eatNumber","checkParam","parseLine","formattedLine","leftTokens","rightTokens","lines","indexOf","compile","Prompt","Line","Attribute","Inference","Action","Goal","Condition","getCF","condition","confidences","Statement","lineIndex","characters","Letter","Rule","Texts","addLine","KnowledgebaseCompiler","delimiter","activePrompt","arrays","objects","subscriptions","attachListeners","subscription","addRule","alt","addInference","keyword","addPremise","addCondition","addPrompt","addQuestion","addMenu","addNumber","addText","addYesNo","addTrueFalse","setMin","setMax","setPromptCFMode","addGoal","setTitle","setSummary","addNewLine","ActivePrompt","setPromptType","M","addAttribute","alternative","ActiveRule","ActiveCondition","Expression","R","G","addObject","addArray","tolowerCase","setGoalCF","Data","defaults","ParserFactory","createParser","DefaultParser","createCompiler","Compiler","process","response","systemLanguage","Rules","languageModules","compiler","parser","registerLanguage","arguments","installLanguageModules","installedLanguagePlugins","getKeywords","codes","freshData","reply","modifiedData","choice","CustomEvent","topics","on","_this","off","trigger","emit","fire","attachCSS","css","id","toggle","document","styleSheets","getElementById","head","removeChild","link","createElement","slice","rel","innerHTML","appendChild","Clipboard","selector","styles","copyToClipboard","str","el","style","position","body","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","PrintButton","color","options","winOptions","openSvg","printSvg","copySvg","OpenButton","createButton","addEventListener","openInWindow","printToPrinter","ClipboardButton","classList","add","clipboard","Text","html","button","width","height","padding","margin","borderRadius","background","border","cursor","printWindow","window","Html","writeln","ex","print","innerText","Viewer","view","container","tagName","contaianer","div","banner","printButton","append","getContentBlock","querySelector","_catch","recover","Ux","HTMLElement","overflow","widgets","display","buttons","toolbar","processParserErrors","processError","repeat","send","composeReply","setMargin","why","stop","explain","cancel","win","copy","processPrompt","processAnswers","processValidationError","attachScripts","scr","theme","focus","addListeners","toggleTheme","Theme","keyCode","target","click","preventDefault","stopPropagation","appendToContent","disableInputs","showMenu","x","y","scrollDown","processScriptError","details","rIndex","Editor","resize","NaN","processInfo","rand2","link1","onclick","addClickListener","fn","tags","getElementsByTagName","last","childNodes","children","firstChild","disabled","resp","checked","composeMenuWidget","composeCheckBoxes","composeRadioButtons","ol","commandline","scroll","child","lastChild","direction","scrollTop","scrollHeight","scrollIntoView","scrollUp","showInputBar","a2","a3","a4","showTaskBar","a1","_theme","Ui","loadConsolePanel","display_id","inputId","btpanel","panel","stylePanel","runpanel","top","bottom","paddingLeft","paddingRight","styleDisplay","styleInput","marginRight","styleLinks","doc","links","textDecoration","btns","getElementsByClassName","fontSize","fontWeight"],"mappings":"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"}